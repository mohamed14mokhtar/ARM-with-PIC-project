

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Sep 17 20:13:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   125   000000                     
   126                           ; Generated 23/03/2023 GMT
   127                           ; 
   128                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution. Publication is not required when
   142                           ;        this file is used in an embedded application.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F4620 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160   000000                     
   161                           	psect	idataCOMRAM
   162   0056B6                     __pidataCOMRAM:
   163                           	callstack 0
   164                           
   165                           ;initializer for _flag4
   166   0056B6  01                 	db	1
   167                           
   168                           ;initializer for _flag3
   169   0056B7  01                 	db	1
   170                           
   171                           ;initializer for _flag2
   172   0056B8  01                 	db	1
   173                           
   174                           ;initializer for _flag1
   175   0056B9  01                 	db	1
   176                           
   177                           	psect	idataBANK0
   178   0054F2                     __pidataBANK0:
   179                           	callstack 0
   180                           
   181                           ;initializer for _lat_regisrers
   182   0054F2  89                 	db	137
   183   0054F3  0F                 	db	15
   184   0054F4  8A                 	db	138
   185   0054F5  0F                 	db	15
   186   0054F6  8B                 	db	139
   187   0054F7  0F                 	db	15
   188   0054F8  8C                 	db	140
   189   0054F9  0F                 	db	15
   190   0054FA  8D                 	db	141
   191   0054FB  0F                 	db	15
   192                           
   193                           ;initializer for _tris_regisrers
   194   0054FC  92                 	db	146
   195   0054FD  0F                 	db	15
   196   0054FE  93                 	db	147
   197   0054FF  0F                 	db	15
   198   005500  94                 	db	148
   199   005501  0F                 	db	15
   200   005502  95                 	db	149
   201   005503  0F                 	db	15
   202   005504  96                 	db	150
   203   005505  0F                 	db	15
   204                           
   205                           ;initializer for _button_2
   206   005506  72                 	db	114
   207   005507  00                 	db	0
   208   005508  00                 	db	0
   209                           
   210                           ;initializer for _button_1
   211   005509  52                 	db	82
   212   00550A  00                 	db	0
   213   00550B  00                 	db	0
   214                           
   215                           ;initializer for _relay_2
   216   00550C  32                 	db	50
   217                           
   218                           ;initializer for _relay_1
   219   00550D  02                 	db	2
   220                           
   221                           ;initializer for _led_2
   222   00550E  42                 	db	66
   223                           
   224                           ;initializer for _led_1
   225   00550F  12                 	db	18
   226                           
   227                           ;initializer for _lcd_4bit
   228   005510  33                 	db	51
   229   005511  2B                 	db	43
   230   005512  03                 	db	3
   231   005513  0B                 	db	11
   232   005514  13                 	db	19
   233   005515  1B                 	db	27
   234                           
   235                           ;initializer for _motor_1
   236   005516  2A                 	db	42
   237   005517  12                 	db	18
   238                           
   239                           ;initializer for _motor_2
   240   005518  0A                 	db	10
   241   005519  3B                 	db	59
   242                           
   243                           ;initializer for _LED_ROOM_1
   244   00551A  02                 	db	2
   245                           
   246                           	psect	idataBANK1
   247   004EA8                     __pidataBANK1:
   248                           	callstack 0
   249                           
   250                           ;initializer for _port_regisrers
   251   004EA8  80                 	db	128
   252   004EA9  0F                 	db	15
   253   004EAA  81                 	db	129
   254   004EAB  0F                 	db	15
   255   004EAC  82                 	db	130
   256   004EAD  0F                 	db	15
   257   004EAE  83                 	db	131
   258   004EAF  0F                 	db	15
   259   004EB0  84                 	db	132
   260   004EB1  0F                 	db	15
   261                           
   262                           ;initializer for _matrix_keypad_1
   263   004EB2  03                 	db	3
   264   004EB3  0B                 	db	11
   265   004EB4  13                 	db	19
   266   004EB5  1B                 	db	27
   267   004EB6  63                 	db	99
   268   004EB7  6B                 	db	107
   269   004EB8  73                 	db	115
   270   004EB9  7B                 	db	123
   271                           
   272                           ;initializer for _usart_1
   273   004EBA  2580               	dw	9600
   274   004EBC  0000               	dw	0
   275   004EBE  00                 	db	0
   276   004EBF  60                 	db	96
   277   004EC0  00                 	db	0
   278   004EC1  60                 	db	96
   279   004EC2  00                 	db	0
   280   004EC3  00                 	db	0
   281   004EC4  00                 	db	0
   282   004EC5  00                 	db	0
   283   004EC6  6C                 	db	low _interrupt_usart_rx
   284   004EC7  56                 	db	high _interrupt_usart_rx
   285   004EC8  00                 	db	0
   286   004EC9  00                 	db	0
   287   004ECA  00                 	db	0
   288   004ECB  00                 	db	0
   289                           
   290                           ;initializer for _mssp_i2c
   291   004ECC  86A0               	dw	34464
   292   004ECE  0001               	dw	1
   293   004ED0  08                 	db	8
   294   004ED1  00                 	db	0
   295   004ED2  01                 	db	1
   296   004ED3  00                 	db	0
   297   004ED4  00                 	db	0
   298   004ED5  00                 	db	0
   299   004ED6  00                 	db	0
   300   004ED7  00                 	db	0
   301   004ED8  00                 	db	0
   302   004ED9  00                 	db	0
   303   004EDA  00                 	db	0
   304                           
   305                           ;initializer for _ccp1_
   306   004EDB  00                 	db	0
   307   004EDC  00                 	db	0
   308   004EDD  0E                 	db	14
   309   004EDE  0E                 	db	14
   310   004EDF  12                 	db	18
   311   004EE0  2710               	dw	10000
   312   004EE2  0000               	dw	0
   313   004EE4  11                 	db	17
   314                           
   315                           ;initializer for _ccp2_
   316   004EE5  00                 	db	0
   317   004EE6  00                 	db	0
   318   004EE7  0E                 	db	14
   319   004EE8  0E                 	db	14
   320   004EE9  12                 	db	18
   321   004EEA  2710               	dw	10000
   322   004EEC  0000               	dw	0
   323   004EEE  11                 	db	17
   324                           
   325                           ;initializer for _INT_0
   326   004EEF  9A                 	db	low _int0_interrupt
   327   004EF0  54                 	db	high _int0_interrupt
   328   004EF1  41                 	db	65
   329   004EF2  01                 	db	1
   330   004EF3  00                 	db	0
   331   004EF4  01                 	db	1
   332                           
   333                           ;initializer for _ADC_2
   334   004EF5  00                 	db	0
   335   004EF6  00                 	db	0
   336   004EF7  00                 	db	0
   337   004EF8  05                 	db	5
   338   004EF9  05                 	db	5
   339   004EFA  02                 	db	2
   340                           
   341                           ;initializer for _ADC_
   342   004EFB  00                 	db	0
   343   004EFC  00                 	db	0
   344   004EFD  03                 	db	3
   345   004EFE  05                 	db	5
   346   004EFF  05                 	db	5
   347   004F00  02                 	db	2
   348                           
   349                           	psect	smallconst
   350   001000                     __psmallconst:
   351                           	callstack 0
   352   001000  00                 	db	0
   353   001001                     _value_ret:
   354                           	callstack 0
   355   001001  37                 	db	55
   356   001002  38                 	db	56
   357   001003  39                 	db	57
   358   001004  2F                 	db	47
   359   001005  34                 	db	52
   360   001006  35                 	db	53
   361   001007  36                 	db	54
   362   001008  2A                 	db	42
   363   001009  31                 	db	49
   364   00100A  32                 	db	50
   365   00100B  33                 	db	51
   366   00100C  2D                 	db	45
   367   00100D  23                 	db	35
   368   00100E  30                 	db	48
   369   00100F  3D                 	db	61
   370   001010  2B                 	db	43
   371   001011                     __end_of_value_ret:
   372                           	callstack 0
   373   000000                     _SPBRGH	set	4016
   374   000000                     _SPBRG	set	4015
   375   000000                     _TXREG	set	4013
   376   000000                     _TXSTAbits	set	4012
   377   000000                     _RCREG	set	4014
   378   000000                     _RCSTAbits	set	4011
   379   000000                     _TMR3L	set	4018
   380   000000                     _TMR3H	set	4019
   381   000000                     _T3CONbits	set	4017
   382   000000                     _TMR2	set	4044
   383   000000                     _T2CONbits	set	4042
   384   000000                     _TMR1L	set	4046
   385   000000                     _TMR1H	set	4047
   386   000000                     _T1CONbits	set	4045
   387   000000                     _TMR0L	set	4054
   388   000000                     _TMR0H	set	4055
   389   000000                     _T0CONbits	set	4053
   390   000000                     _INTCON2bits	set	4081
   391   000000                     _INTCON3bits	set	4080
   392   000000                     _SSPBUF	set	4041
   393   000000                     _SSPSTATbits	set	4039
   394   000000                     _SSPADD	set	4040
   395   000000                     _SSPCON2bits	set	4037
   396   000000                     _SSPCON1bits	set	4038
   397   000000                     _EECON2	set	4007
   398   000000                     _ADCON1bits	set	4033
   399   000000                     _ADRESL	set	4035
   400   000000                     _ADRESH	set	4036
   401   000000                     _INTCONbits	set	4082
   402   000000                     _TRISD	set	3989
   403   000000                     _TRISC	set	3988
   404   000000                     _PR2	set	4043
   405   000000                     _TRISB	set	3987
   406   000000                     _TRISE	set	3990
   407   000000                     _PORTBbits	set	3969
   408   000000                     _TRISCbits	set	3988
   409   000000                     _PIE1bits	set	3997
   410   000000                     _CCP2CONbits	set	4026
   411   000000                     _LATA	set	3977
   412   000000                     _PORTE	set	3972
   413   000000                     _PORTD	set	3971
   414   000000                     _PORTC	set	3970
   415   000000                     _PORTB	set	3969
   416   000000                     _PORTA	set	3968
   417   000000                     _TRISA	set	3986
   418   000000                     _CCPR2L	set	4027
   419   000000                     _CCP1CONbits	set	4029
   420   000000                     _CCPR1L	set	4030
   421   000000                     _ADCON2bits	set	4032
   422   000000                     _ADCON0bits	set	4034
   423   000000                     _PIE2bits	set	4000
   424   000000                     _PIR1bits	set	3998
   425   000000                     _IPR2bits	set	4002
   426   000000                     _EECON1bits	set	4006
   427   000000                     _EEDATA	set	4008
   428   000000                     _EEADR	set	4009
   429   000000                     _EEADRH	set	4010
   430   000000                     _PIR2bits	set	4001
   431   000000                     _LATE	set	3981
   432   000000                     _LATD	set	3980
   433   000000                     _LATC	set	3979
   434   000000                     _LATB	set	3978
   435   000000                     _BAUDCONbits	set	4024
   436   001011                     STR_2:
   437   001011  74                 	db	116	;'t'
   438   001012  65                 	db	101	;'e'
   439   001013  6D                 	db	109	;'m'
   440   001014  70                 	db	112	;'p'
   441   001015  65                 	db	101	;'e'
   442   001016  72                 	db	114	;'r'
   443   001017  61                 	db	97	;'a'
   444   001018  74                 	db	116	;'t'
   445   001019  75                 	db	117	;'u'
   446   00101A  72                 	db	114	;'r'
   447   00101B  65                 	db	101	;'e'
   448   00101C  20                 	db	32
   449   00101D  3A                 	db	58	;':'
   450   00101E  20                 	db	32
   451   00101F  00                 	db	0
   452   001020                     STR_1:
   453   001020  64                 	db	100	;'d'
   454   001021  61                 	db	97	;'a'
   455   001022  74                 	db	116	;'t'
   456   001023  65                 	db	101	;'e'
   457   001024  20                 	db	32
   458   001025  3A                 	db	58	;':'
   459   001026  20                 	db	32
   460   001027  00                 	db	0
   461   001028                     STR_4:
   462   001028  77                 	db	119	;'w'
   463   001029  72                 	db	114	;'r'
   464   00102A  6F                 	db	111	;'o'
   465   00102B  6E                 	db	110	;'n'
   466   00102C  67                 	db	103	;'g'
   467   00102D  00                 	db	0
   468   00102E                     STR_3:
   469   00102E  25                 	db	37
   470   00102F  69                 	db	105	;'i'
   471   001030  00                 	db	0
   472   001031                     STR_5:
   473   001031  21                 	db	33
   474   001032  00                 	db	0
   475   001033  00                 	db	0	; dummy byte at the end
   476   000000                     
   477                           ; #config settings
   478                           
   479                           	psect	cinit
   480   0047C8                     __pcinit:
   481                           	callstack 0
   482   0047C8                     start_initialization:
   483                           	callstack 0
   484   0047C8                     __initialization:
   485                           	callstack 0
   486                           
   487                           ; Initialize objects allocated to BANK1 (89 bytes)
   488                           ; load TBLPTR registers with __pidataBANK1
   489   0047C8  0EA8               	movlw	low __pidataBANK1
   490   0047CA  6EF6               	movwf	tblptrl,c
   491   0047CC  0E4E               	movlw	high __pidataBANK1
   492   0047CE  6EF7               	movwf	tblptrh,c
   493   0047D0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   494   0047D2  6EF8               	movwf	tblptru,c
   495   0047D4  EE01  F000         	lfsr	0,__pdataBANK1
   496   0047D8  EE10 F059          	lfsr	1,89
   497   0047DC                     copy_data0:
   498   0047DC  0009               	tblrd		*+
   499   0047DE  CFF5 FFEE          	movff	tablat,postinc0
   500   0047E2  50E5               	movf	postdec1,w,c
   501   0047E4  50E1               	movf	fsr1l,w,c
   502   0047E6  E1FA               	bnz	copy_data0
   503                           
   504                           ; Initialize objects allocated to BANK0 (41 bytes)
   505                           ; load TBLPTR registers with __pidataBANK0
   506   0047E8  0EF2               	movlw	low __pidataBANK0
   507   0047EA  6EF6               	movwf	tblptrl,c
   508   0047EC  0E54               	movlw	high __pidataBANK0
   509   0047EE  6EF7               	movwf	tblptrh,c
   510   0047F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   511   0047F2  6EF8               	movwf	tblptru,c
   512   0047F4  EE00  F0D2         	lfsr	0,__pdataBANK0
   513   0047F8  EE10 F029          	lfsr	1,41
   514   0047FC                     copy_data1:
   515   0047FC  0009               	tblrd		*+
   516   0047FE  CFF5 FFEE          	movff	tablat,postinc0
   517   004802  50E5               	movf	postdec1,w,c
   518   004804  50E1               	movf	fsr1l,w,c
   519   004806  E1FA               	bnz	copy_data1
   520                           
   521                           ; Initialize objects allocated to COMRAM (4 bytes)
   522                           ; load TBLPTR registers with __pidataCOMRAM
   523   004808  0EB6               	movlw	low __pidataCOMRAM
   524   00480A  6EF6               	movwf	tblptrl,c
   525   00480C  0E56               	movlw	high __pidataCOMRAM
   526   00480E  6EF7               	movwf	tblptrh,c
   527   004810  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   528   004812  6EF8               	movwf	tblptru,c
   529   004814  EE00  F06F         	lfsr	0,__pdataCOMRAM
   530   004818  EE10 F004          	lfsr	1,4
   531   00481C                     copy_data2:
   532   00481C  0009               	tblrd		*+
   533   00481E  CFF5 FFEE          	movff	tablat,postinc0
   534   004822  50E5               	movf	postdec1,w,c
   535   004824  50E1               	movf	fsr1l,w,c
   536   004826  E1FA               	bnz	copy_data2
   537                           
   538                           ; Clear objects allocated to BANK1 (60 bytes)
   539   004828  EE01  F059         	lfsr	0,__pbssBANK1
   540   00482C  0E3C               	movlw	60
   541   00482E                     clear_0:
   542   00482E  6AEE               	clrf	postinc0,c
   543   004830  06E8               	decf	wreg,f,c
   544   004832  E1FD               	bnz	clear_0
   545                           
   546                           ; Clear objects allocated to BANK0 (82 bytes)
   547   004834  EE00  F080         	lfsr	0,__pbssBANK0
   548   004838  0E52               	movlw	82
   549   00483A                     clear_1:
   550   00483A  6AEE               	clrf	postinc0,c
   551   00483C  06E8               	decf	wreg,f,c
   552   00483E  E1FD               	bnz	clear_1
   553                           
   554                           ; Clear objects allocated to COMRAM (8 bytes)
   555   004840  EE00  F067         	lfsr	0,__pbssCOMRAM
   556   004844  0E08               	movlw	8
   557   004846                     clear_2:
   558   004846  6AEE               	clrf	postinc0,c
   559   004848  06E8               	decf	wreg,f,c
   560   00484A  E1FD               	bnz	clear_2
   561   00484C                     end_of_initialization:
   562                           	callstack 0
   563   00484C                     __end_of__initialization:
   564                           	callstack 0
   565   00484C  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   566   00484E  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   567   004850  0100               	movlb	0
   568   004852  EF1A  F008         	goto	_main	;jump to C main() function
   569                           
   570                           	psect	bssCOMRAM
   571   000067                     __pbssCOMRAM:
   572                           	callstack 0
   573   000067                     relay_turn_off@F3070:
   574                           	callstack 0
   575   000067                     	ds	1
   576   000068                     relay_turn_on@F3065:
   577                           	callstack 0
   578   000068                     	ds	1
   579   000069                     relay_intialize@F3060:
   580                           	callstack 0
   581   000069                     	ds	1
   582   00006A                     led_toggle@F3075:
   583                           	callstack 0
   584   00006A                     	ds	1
   585   00006B                     led_turn_off@F3070:
   586                           	callstack 0
   587   00006B                     	ds	1
   588   00006C                     led_turn_on@F3065:
   589                           	callstack 0
   590   00006C                     	ds	1
   591   00006D                     led_intialize@F3060:
   592                           	callstack 0
   593   00006D                     	ds	1
   594   00006E                     _dataReceiveUART:
   595                           	callstack 0
   596   00006E                     	ds	1
   597                           
   598                           	psect	dataCOMRAM
   599   00006F                     __pdataCOMRAM:
   600                           	callstack 0
   601   00006F                     _flag4:
   602                           	callstack 0
   603   00006F                     	ds	1
   604   000070                     _flag3:
   605                           	callstack 0
   606   000070                     	ds	1
   607   000071                     _flag2:
   608                           	callstack 0
   609   000071                     	ds	1
   610   000072                     _flag1:
   611                           	callstack 0
   612   000072                     	ds	1
   613                           
   614                           	psect	bssBANK0
   615   000080                     __pbssBANK0:
   616                           	callstack 0
   617   000080                     _width:
   618                           	callstack 0
   619   000080                     	ds	2
   620   000082                     _prec:
   621                           	callstack 0
   622   000082                     	ds	2
   623   000084                     _USART_OVERRUN_Interrupthandler:
   624                           	callstack 0
   625   000084                     	ds	2
   626   000086                     _USART_FRAMERROR_Interrupthandler:
   627                           	callstack 0
   628   000086                     	ds	2
   629   000088                     _USART_RX_Interrupthandler:
   630                           	callstack 0
   631   000088                     	ds	2
   632   00008A                     _USART_TX_Interrupthandler:
   633                           	callstack 0
   634   00008A                     	ds	2
   635   00008C                     _Timer3_preload:
   636                           	callstack 0
   637   00008C                     	ds	2
   638   00008E                     _TIMER3_Interrupthandler:
   639                           	callstack 0
   640   00008E                     	ds	2
   641   000090                     _TIMER2_Interrupthandler:
   642                           	callstack 0
   643   000090                     	ds	2
   644   000092                     _Timer1_preload:
   645                           	callstack 0
   646   000092                     	ds	2
   647   000094                     _TIMER1_Interrupthandler:
   648                           	callstack 0
   649   000094                     	ds	2
   650   000096                     _Timer0_preload:
   651                           	callstack 0
   652   000096                     	ds	2
   653   000098                     _TIMER0_Interrupthandler:
   654                           	callstack 0
   655   000098                     	ds	2
   656   00009A                     _RB7_interrupthandler_low:
   657                           	callstack 0
   658   00009A                     	ds	2
   659   00009C                     _RB7_interrupthandler_high:
   660                           	callstack 0
   661   00009C                     	ds	2
   662   00009E                     _RB6_interrupthandler_low:
   663                           	callstack 0
   664   00009E                     	ds	2
   665   0000A0                     _RB6_interrupthandler_high:
   666                           	callstack 0
   667   0000A0                     	ds	2
   668   0000A2                     _RB5_interrupthandler_low:
   669                           	callstack 0
   670   0000A2                     	ds	2
   671   0000A4                     _RB5_interrupthandler_high:
   672                           	callstack 0
   673   0000A4                     	ds	2
   674   0000A6                     _RB4_interrupthandler_low:
   675                           	callstack 0
   676   0000A6                     	ds	2
   677   0000A8                     _RB4_interrupthandler_high:
   678                           	callstack 0
   679   0000A8                     	ds	2
   680   0000AA                     _Int2_interrupthandler:
   681                           	callstack 0
   682   0000AA                     	ds	2
   683   0000AC                     _Int1_interrupthandler:
   684                           	callstack 0
   685   0000AC                     	ds	2
   686   0000AE                     _Int0_interrupthandler:
   687                           	callstack 0
   688   0000AE                     	ds	2
   689   0000B0                     _I2C_Report_Receive_Overflow_InterruptHandle:
   690                           	callstack 0
   691   0000B0                     	ds	2
   692   0000B2                     _I2C_DefaultInterruptHandle:
   693                           	callstack 0
   694   0000B2                     	ds	2
   695   0000B4                     _I2C_Report_Write_Collision_InterruptHandler:
   696                           	callstack 0
   697   0000B4                     	ds	2
   698   0000B6                     _CCP2_Interrupthandler:
   699                           	callstack 0
   700   0000B6                     	ds	2
   701   0000B8                     _CCP1_Interrupthandler:
   702                           	callstack 0
   703   0000B8                     	ds	2
   704   0000BA                     _ADC_INTERRUPTHANDLER:
   705                           	callstack 0
   706   0000BA                     	ds	2
   707   0000BC                     _dataSendUART:
   708                           	callstack 0
   709   0000BC                     	ds	2
   710   0000BE                     _flags:
   711                           	callstack 0
   712   0000BE                     	ds	1
   713   0000BF                     	ds	1
   714   0000C0                     _Timer2_preload:
   715                           	callstack 0
   716   0000C0                     	ds	1
   717   0000C1                     relay_toggle@F3075:
   718                           	callstack 0
   719   0000C1                     	ds	1
   720   0000C2                     _chick:
   721                           	callstack 0
   722   0000C2                     	ds	1
   723   0000C3                     _ADC_VALUE_convert:
   724                           	callstack 0
   725   0000C3                     	ds	1
   726   0000C4                     _ret:
   727                           	callstack 0
   728   0000C4                     	ds	1
   729   0000C5                     _mes:
   730                           	callstack 0
   731   0000C5                     	ds	5
   732   0000CA                     _ADC_VALUE_2:
   733                           	callstack 0
   734   0000CA                     	ds	4
   735   0000CE                     _ADC_VALUE:
   736                           	callstack 0
   737   0000CE                     	ds	2
   738   0000D0                     _i2c_ack:
   739                           	callstack 0
   740   0000D0                     	ds	1
   741   0000D1                     _tc74:
   742                           	callstack 0
   743   0000D1                     	ds	1
   744                           
   745                           	psect	dataBANK0
   746   0000D2                     __pdataBANK0:
   747                           	callstack 0
   748   0000D2                     _lat_regisrers:
   749                           	callstack 0
   750   0000D2                     	ds	10
   751   0000DC                     _tris_regisrers:
   752                           	callstack 0
   753   0000DC                     	ds	10
   754   0000E6                     _button_2:
   755                           	callstack 0
   756   0000E6                     	ds	3
   757   0000E9                     _button_1:
   758                           	callstack 0
   759   0000E9                     	ds	3
   760   0000EC                     _relay_2:
   761                           	callstack 0
   762   0000EC                     	ds	1
   763   0000ED                     _relay_1:
   764                           	callstack 0
   765   0000ED                     	ds	1
   766   0000EE                     _led_2:
   767                           	callstack 0
   768   0000EE                     	ds	1
   769   0000EF                     _led_1:
   770                           	callstack 0
   771   0000EF                     	ds	1
   772   0000F0                     _lcd_4bit:
   773                           	callstack 0
   774   0000F0                     	ds	6
   775   0000F6                     _motor_1:
   776                           	callstack 0
   777   0000F6                     	ds	2
   778   0000F8                     _motor_2:
   779                           	callstack 0
   780   0000F8                     	ds	2
   781   0000FA                     _LED_ROOM_1:
   782                           	callstack 0
   783   0000FA                     	ds	1
   784                           
   785                           	psect	bssBANK1
   786   000159                     __pbssBANK1:
   787                           	callstack 0
   788   000159                     _dbuf:
   789                           	callstack 0
   790   000159                     	ds	32
   791   000179                     _return_data_array:
   792                           	callstack 0
   793   000179                     	ds	6
   794   00017F                     	ds	6
   795   000185                     _ds13_data_decimal:
   796                           	callstack 0
   797   000185                     	ds	6
   798   00018B                     _ds13_data:
   799                           	callstack 0
   800   00018B                     	ds	6
   801   000191                     _Timer2:
   802                           	callstack 0
   803   000191                     	ds	4
   804                           
   805                           	psect	dataBANK1
   806   000100                     __pdataBANK1:
   807                           	callstack 0
   808   000100                     _port_regisrers:
   809                           	callstack 0
   810   000100                     	ds	10
   811   00010A                     _matrix_keypad_1:
   812                           	callstack 0
   813   00010A                     	ds	8
   814   000112                     _usart_1:
   815                           	callstack 0
   816   000112                     	ds	18
   817   000124                     _mssp_i2c:
   818                           	callstack 0
   819   000124                     	ds	15
   820   000133                     _ccp1_:
   821                           	callstack 0
   822   000133                     	ds	10
   823   00013D                     _ccp2_:
   824                           	callstack 0
   825   00013D                     	ds	10
   826   000147                     _INT_0:
   827                           	callstack 0
   828   000147                     	ds	6
   829   00014D                     _ADC_2:
   830                           	callstack 0
   831   00014D                     	ds	6
   832   000153                     _ADC_:
   833                           	callstack 0
   834   000153                     	ds	6
   835                           
   836                           	psect	cstackBANK1
   837   000195                     __pcstackBANK1:
   838                           	callstack 0
   839   000195                     MSSP_I2C_Init@ret:
   840                           	callstack 0
   841   000195                     baudrate_calculate@baud_rate:
   842                           	callstack 0
   843   000195                     _ccp1_pwm_set_duty$5693:
   844                           	callstack 0
   845   000195                     _ccp2_pwm_set_duty$5694:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x0
   849   000195                     	ds	4
   850   000199                     ccp1_pwm_set_duty@duty:
   851                           	callstack 0
   852   000199                     ccp2_pwm_set_duty@duty:
   853                           	callstack 0
   854   000199                     _baudrate_calculate$5695:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x4
   858   000199                     	ds	1
   859   00019A                     ccp1_pwm_set_duty@duty_:
   860                           	callstack 0
   861   00019A                     ccp2_pwm_set_duty@duty_:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x5
   865   00019A                     	ds	1
   866   00019B                     ccp1_pwm_set_duty@l_duty_temp:
   867                           	callstack 0
   868   00019B                     ccp2_pwm_set_duty@l_duty_temp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x6
   872   00019B                     	ds	2
   873   00019D                     usart_ASYNC_init@usart:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x8
   877   00019D                     	ds	2
   878   00019F                     ??_main:
   879                           
   880                           ; 1 bytes @ 0xA
   881   00019F                     	ds	1
   882   0001A0                     main@i:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0xB
   886   0001A0                     	ds	1
   887   0001A1                     main@i_646:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0xC
   891   0001A1                     	ds	1
   892   0001A2                     main@i_642:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0xD
   896   0001A2                     	ds	1
   897                           
   898                           	psect	cstackBANK0
   899   0000FB                     __pcstackBANK0:
   900                           	callstack 0
   901   0000FB                     ??_ccp2_pwm_set_duty:
   902   0000FB                     ??_ccp1_pwm_set_duty:
   903   0000FB                     I2C_Master_Mode_Clock_Configurations@i2c_obj:
   904                           	callstack 0
   905   0000FB                     baudrate_calculate@usart:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x0
   909   0000FB                     	ds	2
   910   0000FD                     ??_I2C_Master_Mode_Clock_Configurations:
   911   0000FD                     ??_baudrate_calculate:
   912                           
   913                           ; 1 bytes @ 0x2
   914   0000FD                     	ds	1
   915   0000FE                     MSSP_I2C_Init@i2c_obj:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x3
   919   0000FE                     	ds	2
   920                           
   921                           	psect	cstackCOMRAM
   922   000001                     __pcstackCOMRAM:
   923                           	callstack 0
   924   000001                     GPIO_PORT_WRITE_LOGIC@logic:
   925                           	callstack 0
   926   000001                     RB4_ISR@value:
   927                           	callstack 0
   928   000001                     RB5_ISR@value:
   929                           	callstack 0
   930   000001                     RB6_ISR@value:
   931                           	callstack 0
   932   000001                     RB7_ISR@value:
   933                           	callstack 0
   934   000001                     usart_ASYNC_read_byte_blocking@data:
   935                           	callstack 0
   936   000001                     i2GPIO_pIN_TOGGLE_LOGIC@config_pin:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x0
   940   000001                     	ds	1
   941   000002                     ??_GPIO_PORT_WRITE_LOGIC:
   942   000002                     ??i2_GPIO_pIN_TOGGLE_LOGIC:
   943   000002                     interrupt_usart_rx@ret_data:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x1
   947   000002                     	ds	1
   948   000003                     
   949                           ; 1 bytes @ 0x2
   950   000003                     	ds	1
   951   000004                     GPIO_PORT_WRITE_LOGIC@port:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x3
   955   000004                     	ds	2
   956   000006                     i2GPIO_pIN_TOGGLE_LOGIC@ret:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x5
   960   000006                     	ds	1
   961   000007                     ??_interrupt_manager:
   962                           
   963                           ; 1 bytes @ 0x6
   964   000007                     	ds	6
   965   00000D                     ??_adc_channel_port_confige:
   966   00000D                     ?___awdiv:
   967                           	callstack 0
   968   00000D                     ?___awmod:
   969                           	callstack 0
   970   00000D                     ?___lmul:
   971                           	callstack 0
   972   00000D                     ?___xxtofl:
   973                           	callstack 0
   974   00000D                     convert_hex_to_dec@l_num:
   975                           	callstack 0
   976   00000D                     GPIO_pIN_TOGGLE_LOGIC@config_pin:
   977                           	callstack 0
   978   00000D                     usart_ASYNC_write_byte_blocking@data:
   979                           	callstack 0
   980   00000D                     ADC_start_conversion@ADC_conf:
   981                           	callstack 0
   982   00000D                     ADC_ISconversion_done@ADC_conf:
   983                           	callstack 0
   984   00000D                     ADC_ISconversion_result@ADC_conf:
   985                           	callstack 0
   986   00000D                     select_result_format@ADC_conf:
   987                           	callstack 0
   988   00000D                     configure_voltage_ref@ADC_conf:
   989                           	callstack 0
   990   00000D                     GPIO_pIN_DIRECTION_INTIALIZE@config_pin:
   991                           	callstack 0
   992   00000D                     GPIO_pIN_WRITE_LOGIC@config_pin:
   993                           	callstack 0
   994   00000D                     MSSP_I2C_Master_Send_Start@i2c_obj:
   995                           	callstack 0
   996   00000D                     MSSP_I2C_Master_Send_Repeated_Start@i2c_obj:
   997                           	callstack 0
   998   00000D                     MSSP_I2C_Master_Send_Stop@i2c_obj:
   999                           	callstack 0
  1000   00000D                     MSSP_I2C_Master_Write_Blocking@i2c_obj:
  1001                           	callstack 0
  1002   00000D                     MSSP_I2C_Master_Read_Blocking@i2c_obj:
  1003                           	callstack 0
  1004   00000D                     I2C_Slave_Mode_Configurations@i2c_obj:
  1005                           	callstack 0
  1006   00000D                     MSSP_I2C_Interrupt_Configurations@i2c_obj:
  1007                           	callstack 0
  1008   00000D                     interrupt_intx_enable@INTERRUPT_INTX:
  1009                           	callstack 0
  1010   00000D                     interrupt_intx_disable@INTERRUPT_INTX:
  1011                           	callstack 0
  1012   00000D                     interrupt_intx_edge_inti@INTERRUPT_INTX:
  1013                           	callstack 0
  1014   00000D                     interrupt_intx_clear@INTERRUPT_INTX:
  1015                           	callstack 0
  1016   00000D                     INT0_setinterrupthandler@interrupthandler:
  1017                           	callstack 0
  1018   00000D                     INT1_setinterrupthandler@interrupthandler:
  1019                           	callstack 0
  1020   00000D                     INT2_setinterrupthandler@interrupthandler:
  1021                           	callstack 0
  1022   00000D                     Timer2_init@Timer2:
  1023                           	callstack 0
  1024   00000D                     usart_async_tx_int@usart:
  1025                           	callstack 0
  1026   00000D                     usart_async_rx_int@usart:
  1027                           	callstack 0
  1028   00000D                     ___awdiv@dividend:
  1029                           	callstack 0
  1030   00000D                     ___awmod@dividend:
  1031                           	callstack 0
  1032   00000D                     fputc@c:
  1033                           	callstack 0
  1034   00000D                     ___lmul@multiplier:
  1035                           	callstack 0
  1036   00000D                     ___xxtofl@val:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0xC
  1040   00000D                     	ds	1
  1041   00000E                     ??_GPIO_pIN_TOGGLE_LOGIC:
  1042   00000E                     convert_hex_to_dec@num:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0xD
  1046   00000E                     	ds	1
  1047   00000F                     ??_Timer2_init:
  1048   00000F                     ??_GPIO_pIN_DIRECTION_INTIALIZE:
  1049   00000F                     ??_I2C_Slave_Mode_Configurations:
  1050   00000F                     ??_interrupt_intx_disable:
  1051   00000F                     ??_interrupt_intx_clear:
  1052   00000F                     ??_interrupt_intx_edge_inti:
  1053   00000F                     ??_interrupt_intx_enable:
  1054   00000F                     ADC_start_conversion@ret:
  1055                           	callstack 0
  1056   00000F                     ADC_ISconversion_done@conversion_status:
  1057                           	callstack 0
  1058   00000F                     ADC_ISconversion_result@conversion_result:
  1059                           	callstack 0
  1060   00000F                     adc_channel_port_confige@ADC_CHANNAL_SELECT:
  1061                           	callstack 0
  1062   00000F                     GPIO_pIN_WRITE_LOGIC@logic:
  1063                           	callstack 0
  1064   00000F                     MSSP_I2C_Master_Write_Blocking@i2c_data:
  1065                           	callstack 0
  1066   00000F                     MSSP_I2C_Master_Read_Blocking@ack:
  1067                           	callstack 0
  1068   00000F                     fputc@fp:
  1069                           	callstack 0
  1070   00000F                     interrupt_intx_sethandler@INTERRUPT_INTX:
  1071                           	callstack 0
  1072   00000F                     ___awdiv@divisor:
  1073                           	callstack 0
  1074   00000F                     ___awmod@divisor:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xE
  1078   00000F                     	ds	1
  1079   000010                     ??_GPIO_pIN_WRITE_LOGIC:
  1080   000010                     ??_fputc:
  1081   000010                     ??_ADC_ISconversion_result:
  1082   000010                     ADC_ISconversion_done@ret:
  1083                           	callstack 0
  1084   000010                     MSSP_I2C_Master_Write_Blocking@_ack:
  1085                           	callstack 0
  1086   000010                     Timer2_init@ret:
  1087                           	callstack 0
  1088   000010                     ADC_inti@ADC_conf:
  1089                           	callstack 0
  1090   000010                     ADC_select_channal@ADC_conf:
  1091                           	callstack 0
  1092   000010                     MSSP_I2C_Master_Read_Blocking@i2c_data:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0xF
  1096   000010                     	ds	1
  1097   000011                     ??_interrupt_intx_sethandler:
  1098   000011                     ??___xxtofl:
  1099   000011                     interrupt_intx_enable@ret:
  1100                           	callstack 0
  1101   000011                     interrupt_intx_disable@ret:
  1102                           	callstack 0
  1103   000011                     interrupt_intx_edge_inti@ret:
  1104                           	callstack 0
  1105   000011                     interrupt_intx_clear@ret:
  1106                           	callstack 0
  1107   000011                     ___awdiv@counter:
  1108                           	callstack 0
  1109   000011                     ___awmod@counter:
  1110                           	callstack 0
  1111   000011                     ___lmul@multiplicand:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x10
  1115   000011                     	ds	1
  1116   000012                     ??_ADC_inti:
  1117   000012                     ADC_select_channal@ADC_CHANNAL_SELECT:
  1118                           	callstack 0
  1119   000012                     GPIO_pIN_TOGGLE_LOGIC@ret:
  1120                           	callstack 0
  1121   000012                     ___awdiv@sign:
  1122                           	callstack 0
  1123   000012                     ___awmod@sign:
  1124                           	callstack 0
  1125   000012                     MSSP_I2C_Master_read_data_in_register@i2c_obj:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x11
  1129   000012                     	ds	1
  1130   000013                     ??_ADC_select_channal:
  1131   000013                     ?_abs:
  1132                           	callstack 0
  1133   000013                     ADC_inti@ret:
  1134                           	callstack 0
  1135   000013                     ADC_ISconversion_result@ret:
  1136                           	callstack 0
  1137   000013                     interrupt_intx_sethandler@ret:
  1138                           	callstack 0
  1139   000013                     ___awdiv@quotient:
  1140                           	callstack 0
  1141   000013                     abs@a:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x12
  1145   000013                     	ds	1
  1146   000014                     ADC_select_channal@ret:
  1147                           	callstack 0
  1148   000014                     GPIO_pIN_DIRECTION_INTIALIZE@ret:
  1149                           	callstack 0
  1150   000014                     MSSP_I2C_Master_read_data_in_register@i2c_data_1:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x13
  1154   000014                     	ds	1
  1155   000015                     ??_abs:
  1156   000015                     GPIO_pIN_WRITE_LOGIC@ret:
  1157                           	callstack 0
  1158   000015                     MSSP_I2C_Master_read_data_in_register@i2c_data_2:
  1159                           	callstack 0
  1160   000015                     ___xxtofl@sign:
  1161                           	callstack 0
  1162   000015                     ADC_get_conversion_blocking@ADC_conf:
  1163                           	callstack 0
  1164   000015                     ___lmul@product:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x14
  1168   000015                     	ds	1
  1169   000016                     lcd_send_4bits@lcd:
  1170                           	callstack 0
  1171   000016                     lcd_4bit_send_enable_signal@lcd:
  1172                           	callstack 0
  1173   000016                     morot_turn_right@motor_pin:
  1174                           	callstack 0
  1175   000016                     morot_turn_left@motor_pin:
  1176                           	callstack 0
  1177   000016                     morot_stop@motor_pin:
  1178                           	callstack 0
  1179   000016                     ___xxtofl@exp:
  1180                           	callstack 0
  1181   000016                     GPIO_pIN_INTIALIZE@config_pin:
  1182                           	callstack 0
  1183   000016                     MSSP_I2C_Master_read_data_in_register@ret_data:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x15
  1187   000016                     	ds	1
  1188   000017                     ??_morot_turn_left:
  1189   000017                     ??_morot_turn_right:
  1190   000017                     ??_morot_stop:
  1191   000017                     ??_lcd_4bit_send_enable_signal:
  1192   000017                     lcd_send_4bits@_data_command:
  1193                           	callstack 0
  1194   000017                     ADC_get_conversion_blocking@ADC_CHANNAL_SELECT:
  1195                           	callstack 0
  1196   000017                     vfpfcnvrt@fp:
  1197                           	callstack 0
  1198   000017                     ___xxtofl@arg:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x16
  1202   000017                     	ds	1
  1203   000018                     ??_GPIO_pIN_INTIALIZE:
  1204   000018                     ??_lcd_send_4bits:
  1205   000018                     lcd_4bit_send_enable_signal@ret:
  1206                           	callstack 0
  1207   000018                     morot_turn_right@ret:
  1208                           	callstack 0
  1209   000018                     morot_turn_left@ret:
  1210                           	callstack 0
  1211   000018                     morot_stop@ret:
  1212                           	callstack 0
  1213   000018                     ADC_get_conversion_blocking@conversion_status:
  1214                           	callstack 0
  1215   000018                     MSSP_I2C_Master_read_data_in_register@_ack:
  1216                           	callstack 0
  1217   000018                     vfpfcnvrt@fmt:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x17
  1221   000018                     	ds	1
  1222   000019                     ??_MSSP_I2C_Master_read_data_in_register:
  1223   000019                     ?___lldiv:
  1224                           	callstack 0
  1225   000019                     lcd_send_4bits@ret:
  1226                           	callstack 0
  1227   000019                     ADC_get_conversion_blocking@l_conversion_status:
  1228                           	callstack 0
  1229   000019                     GPIO_pIN_INTIALIZE@ret:
  1230                           	callstack 0
  1231   000019                     vfpfcnvrt@ap:
  1232                           	callstack 0
  1233   000019                     ___lldiv@dividend:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x18
  1237   000019                     	ds	1
  1238   00001A                     ??_vfpfcnvrt:
  1239   00001A                     lcd_4bit_send_command@lcd:
  1240                           	callstack 0
  1241   00001A                     lcd_4bit_send_char_data@lcd:
  1242                           	callstack 0
  1243   00001A                     motor_intialize@motor_pin:
  1244                           	callstack 0
  1245   00001A                     ADC_get_conversion_blocking@ret:
  1246                           	callstack 0
  1247   00001A                     ds1307_read_values@i2c_obj:
  1248                           	callstack 0
  1249   00001A                     tc74_read_value@i2c_obj:
  1250                           	callstack 0
  1251   00001A                     interrupt_intx_pin_inti@INTERRUPT_INTX:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x19
  1255   00001A                     	ds	1
  1256   00001B                     ??_motor_intialize:
  1257   00001B                     ?___fldiv:
  1258                           	callstack 0
  1259   00001B                     lcd_4bit_send_command@command:
  1260                           	callstack 0
  1261   00001B                     lcd_4bit_send_char_data@data:
  1262                           	callstack 0
  1263   00001B                     vfpfcnvrt@done:
  1264                           	callstack 0
  1265   00001B                     ___fldiv@b:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x1A
  1269   00001B                     	ds	1
  1270   00001C                     lcd_4bit_send_command@ret:
  1271                           	callstack 0
  1272   00001C                     lcd_4bit_send_char_data@ret:
  1273                           	callstack 0
  1274   00001C                     motor_intialize@ret:
  1275                           	callstack 0
  1276   00001C                     ds1307_read_values@address_1:
  1277                           	callstack 0
  1278   00001C                     tc74_read_value@i2c_data_1:
  1279                           	callstack 0
  1280   00001C                     interrupt_intx_pin_inti@ret:
  1281                           	callstack 0
  1282   00001C                     vfpfcnvrt@cp:
  1283                           	callstack 0
  1284                           
  1285                           ; 1 bytes @ 0x1B
  1286   00001C                     	ds	1
  1287   00001D                     lcd_4bit_intialize@lcd:
  1288                           	callstack 0
  1289   00001D                     lcd_4bit_set_cursor@lcd:
  1290                           	callstack 0
  1291   00001D                     tc74_read_value@i2c_data_2:
  1292                           	callstack 0
  1293   00001D                     ds1307_read_values@return_data_array:
  1294                           	callstack 0
  1295   00001D                     Interrupt_Intx_Inti@INTERRUPT_INTX:
  1296                           	callstack 0
  1297   00001D                     ___lldiv@divisor:
  1298                           	callstack 0
  1299   00001D                     vfpfcnvrt@convarg:
  1300                           	callstack 0
  1301                           
  1302                           ; 4 bytes @ 0x1C
  1303   00001D                     	ds	1
  1304   00001E                     ??_lcd_4bit_intialize:
  1305   00001E                     lcd_4bit_set_cursor@row:
  1306                           	callstack 0
  1307   00001E                     tc74_read_value@ret_data:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x1D
  1311   00001E                     	ds	1
  1312   00001F                     lcd_4bit_intialize@l_data_pins_counter:
  1313                           	callstack 0
  1314   00001F                     lcd_4bit_set_cursor@coulmn:
  1315                           	callstack 0
  1316   00001F                     ds1307_read_values@_ack:
  1317                           	callstack 0
  1318   00001F                     tc74_read_value@_ack:
  1319                           	callstack 0
  1320   00001F                     Interrupt_Intx_Inti@ret:
  1321                           	callstack 0
  1322   00001F                     ___fldiv@a:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x1E
  1326   00001F                     	ds	1
  1327   000020                     ??_lcd_4bit_set_cursor:
  1328   000020                     lcd_4bit_intialize@ret:
  1329                           	callstack 0
  1330                           
  1331                           ; 1 bytes @ 0x1F
  1332   000020                     	ds	1
  1333   000021                     vfpfcnvrt@c:
  1334                           	callstack 0
  1335   000021                     ___lldiv@quotient:
  1336                           	callstack 0
  1337                           
  1338                           ; 4 bytes @ 0x20
  1339   000021                     	ds	1
  1340   000022                     ?_vfprintf:
  1341                           	callstack 0
  1342   000022                     lcd_4bit_set_cursor@ret:
  1343                           	callstack 0
  1344   000022                     vfprintf@fp:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x21
  1348   000022                     	ds	1
  1349   000023                     ??___fldiv:
  1350   000023                     lcd_4bit_send_char_data_pos@lcd:
  1351                           	callstack 0
  1352   000023                     lcd_4bit_send_string_pos@lcd:
  1353                           	callstack 0
  1354   000023                     vfprintf@fmt:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x22
  1358   000023                     	ds	1
  1359   000024                     lcd_4bit_send_char_data_pos@row:
  1360                           	callstack 0
  1361   000024                     lcd_4bit_send_string_pos@row:
  1362                           	callstack 0
  1363   000024                     vfprintf@ap:
  1364                           	callstack 0
  1365                           
  1366                           ; 1 bytes @ 0x23
  1367   000024                     	ds	1
  1368   000025                     lcd_4bit_send_char_data_pos@column:
  1369                           	callstack 0
  1370   000025                     lcd_4bit_send_string_pos@column:
  1371                           	callstack 0
  1372   000025                     ___lldiv@counter:
  1373                           	callstack 0
  1374   000025                     vfprintf@cfmt:
  1375                           	callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x24
  1378   000025                     	ds	1
  1379   000026                     ?_sprintf:
  1380                           	callstack 0
  1381   000026                     lcd_4bit_send_char_data_pos@data:
  1382                           	callstack 0
  1383   000026                     sprintf@s:
  1384                           	callstack 0
  1385   000026                     lcd_4bit_send_string_pos@str:
  1386                           	callstack 0
  1387   000026                     ccp1_init@ccp1_:
  1388                           	callstack 0
  1389   000026                     ccp2_init@ccp2_:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x25
  1393   000026                     	ds	1
  1394   000027                     lcd_4bit_send_char_data_pos@ret:
  1395                           	callstack 0
  1396   000027                     sprintf@fmt:
  1397                           	callstack 0
  1398   000027                     ___fldiv@rem:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x26
  1402   000027                     	ds	1
  1403   000028                     ??_ccp2_init:
  1404   000028                     ??_ccp1_init:
  1405   000028                     lcd_4bit_send_string_pos@ret:
  1406                           	callstack 0
  1407                           
  1408                           ; 1 bytes @ 0x27
  1409   000028                     	ds	3
  1410   00002B                     ___fldiv@sign:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x2A
  1414   00002B                     	ds	1
  1415   00002C                     ccp1_init@ret:
  1416                           	callstack 0
  1417   00002C                     ccp2_init@ret:
  1418                           	callstack 0
  1419   00002C                     sprintf@ap:
  1420                           	callstack 0
  1421   00002C                     ___fldiv@new_exp:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x2B
  1425   00002C                     	ds	1
  1426   00002D                     sprintf@f:
  1427                           	callstack 0
  1428                           
  1429                           ; 12 bytes @ 0x2C
  1430   00002D                     	ds	1
  1431   00002E                     ___fldiv@grs:
  1432                           	callstack 0
  1433                           
  1434                           ; 4 bytes @ 0x2D
  1435   00002E                     	ds	4
  1436   000032                     ___fldiv@bexp:
  1437                           	callstack 0
  1438                           
  1439                           ; 1 bytes @ 0x31
  1440   000032                     	ds	1
  1441   000033                     ___fldiv@aexp:
  1442                           	callstack 0
  1443                           
  1444                           ; 1 bytes @ 0x32
  1445   000033                     	ds	1
  1446   000034                     ?___fladd:
  1447                           	callstack 0
  1448   000034                     ___fladd@b:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0x33
  1452   000034                     	ds	4
  1453   000038                     ___fladd@a:
  1454                           	callstack 0
  1455                           
  1456                           ; 4 bytes @ 0x37
  1457   000038                     	ds	4
  1458   00003C                     ??___fladd:
  1459                           
  1460                           ; 1 bytes @ 0x3B
  1461   00003C                     	ds	4
  1462   000040                     ___fladd@signs:
  1463                           	callstack 0
  1464                           
  1465                           ; 1 bytes @ 0x3F
  1466   000040                     	ds	1
  1467   000041                     ___fladd@aexp:
  1468                           	callstack 0
  1469                           
  1470                           ; 1 bytes @ 0x40
  1471   000041                     	ds	1
  1472   000042                     ___fladd@bexp:
  1473                           	callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x41
  1476   000042                     	ds	1
  1477   000043                     ___fladd@grs:
  1478                           	callstack 0
  1479                           
  1480                           ; 1 bytes @ 0x42
  1481   000043                     	ds	1
  1482   000044                     ?___flmul:
  1483                           	callstack 0
  1484   000044                     ___flmul@b:
  1485                           	callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x43
  1488   000044                     	ds	4
  1489   000048                     ___flmul@a:
  1490                           	callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x47
  1493   000048                     	ds	4
  1494   00004C                     ??___flmul:
  1495                           
  1496                           ; 1 bytes @ 0x4B
  1497   00004C                     	ds	4
  1498   000050                     ___flmul@sign:
  1499                           	callstack 0
  1500                           
  1501                           ; 1 bytes @ 0x4F
  1502   000050                     	ds	1
  1503   000051                     ___flmul@aexp:
  1504                           	callstack 0
  1505                           
  1506                           ; 1 bytes @ 0x50
  1507   000051                     	ds	1
  1508   000052                     ___flmul@grs:
  1509                           	callstack 0
  1510                           
  1511                           ; 4 bytes @ 0x51
  1512   000052                     	ds	4
  1513   000056                     ___flmul@bexp:
  1514                           	callstack 0
  1515                           
  1516                           ; 1 bytes @ 0x55
  1517   000056                     	ds	1
  1518   000057                     ___flmul@prod:
  1519                           	callstack 0
  1520                           
  1521                           ; 4 bytes @ 0x56
  1522   000057                     	ds	4
  1523   00005B                     ___flmul@temp:
  1524                           	callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x5A
  1527   00005B                     	ds	2
  1528   00005D                     ?___fltol:
  1529                           	callstack 0
  1530   00005D                     ___fltol@f1:
  1531                           	callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x5C
  1534   00005D                     	ds	4
  1535   000061                     ??___fltol:
  1536                           
  1537                           ; 1 bytes @ 0x60
  1538   000061                     	ds	4
  1539   000065                     ___fltol@sign1:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x64
  1543   000065                     	ds	1
  1544   000066                     ___fltol@exp1:
  1545                           	callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x65
  1548   000066                     	ds	1
  1549   000067                     
  1550                           ; 1 bytes @ 0x66
  1551 ;;
  1552 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1553 ;;
  1554 ;; *************** function _main *****************
  1555 ;; Defined at:
  1556 ;;		line 76 in file "main.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  i               1   11[BANK1 ] unsigned char 
  1561 ;;  i               1   12[BANK1 ] unsigned char 
  1562 ;;  i               1   13[BANK1 ] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2  120[None  ] int 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;Total ram usage:        4 bytes
  1577 ;; Hardware stack levels required when called: 9
  1578 ;; This function calls:
  1579 ;;		_ADC_get_conversion_blocking
  1580 ;;		_GPIO_pIN_TOGGLE_LOGIC
  1581 ;;		_GPIO_pIN_WRITE_LOGIC
  1582 ;;		___lldiv
  1583 ;;		___lmul
  1584 ;;		_ccp1_pwm_set_duty
  1585 ;;		_ccp2_pwm_set_duty
  1586 ;;		_convert_hex_to_dec
  1587 ;;		_ds1307_read_values
  1588 ;;		_intitialized_functions
  1589 ;;		_lcd_4bit_send_char_data_pos
  1590 ;;		_lcd_4bit_send_command
  1591 ;;		_lcd_4bit_send_string_pos
  1592 ;;		_morot_stop
  1593 ;;		_morot_turn_left
  1594 ;;		_morot_turn_right
  1595 ;;		_sprintf
  1596 ;;		_tc74_read_value
  1597 ;;		_usart_ASYNC_write_byte_blocking
  1598 ;; This function is called by:
  1599 ;;		Startup code after reset
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text0
  1604   001034                     __ptext0:
  1605                           	callstack 0
  1606   001034                     _main:
  1607                           	callstack 22
  1608   001034                     
  1609                           ;main.c: 78:     intitialized_functions();
  1610   001034  ECB6  F020         	call	_intitialized_functions	;wreg free
  1611   001038                     
  1612                           ;main.c: 81:     ret = lcd_4bit_send_string_pos(&lcd_4bit,1,2,"date : ");
  1613   001038  0EF0               	movlw	low _lcd_4bit
  1614   00103A  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1615   00103C  0E01               	movlw	1
  1616   00103E  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  1617   001040  0E02               	movlw	2
  1618   001042  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  1619   001044  0E20               	movlw	low STR_1
  1620   001046  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  1621   001048  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1622   00104A  A4D8               	btfss	status,2,c
  1623   00104C  0E10               	movlw	high __smallconst
  1624   00104E  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1625   001050  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  1626   001054  0100               	movlb	0	; () banked
  1627   001056  6FC4               	movwf	_ret& (0+255),b
  1628   001058                     
  1629                           ; BSR set to: 0
  1630                           ;main.c: 82:     ret = lcd_4bit_send_string_pos(&lcd_4bit,2,2,"temperature : ");
  1631   001058  0EF0               	movlw	low _lcd_4bit
  1632   00105A  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1633   00105C  0E02               	movlw	2
  1634   00105E  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  1635   001060  0E02               	movlw	2
  1636   001062  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  1637   001064  0E11               	movlw	low STR_2
  1638   001066  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  1639   001068  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1640   00106A  A4D8               	btfss	status,2,c
  1641   00106C  0E10               	movlw	high __smallconst
  1642   00106E  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1643   001070  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  1644   001074  0100               	movlb	0	; () banked
  1645   001076  6FC4               	movwf	_ret& (0+255),b
  1646   001078                     l11606:
  1647                           
  1648                           ;main.c: 89:         ret = ADC_get_conversion_blocking(&ADC_,ADC_CHANNEL_AN3,&ADC_VALUE)
      +                          ;
  1649   001078  0E53               	movlw	low _ADC_
  1650   00107A  6E15               	movwf	ADC_get_conversion_blocking@ADC_conf^0,c
  1651   00107C  0E01               	movlw	high _ADC_
  1652   00107E  6E16               	movwf	(ADC_get_conversion_blocking@ADC_conf+1)^0,c
  1653   001080  0E03               	movlw	3
  1654   001082  6E17               	movwf	ADC_get_conversion_blocking@ADC_CHANNAL_SELECT^0,c
  1655   001084  0ECE               	movlw	low _ADC_VALUE
  1656   001086  6E18               	movwf	ADC_get_conversion_blocking@conversion_status^0,c
  1657   001088  EC3D  F025         	call	_ADC_get_conversion_blocking	;wreg free
  1658   00108C  0100               	movlb	0	; () banked
  1659   00108E  6FC4               	movwf	_ret& (0+255),b
  1660   001090                     
  1661                           ; BSR set to: 0
  1662                           ;main.c: 90:         ADC_VALUE_convert = ADC_VALUE - 854;
  1663   001090  51CE               	movf	_ADC_VALUE& (0+255),w,b
  1664   001092  0FAA               	addlw	170
  1665   001094  6FC3               	movwf	_ADC_VALUE_convert& (0+255),b	;volatile
  1666   001096                     
  1667                           ; BSR set to: 0
  1668                           ;main.c: 91:         dataSendUART[0]= ADC_VALUE_convert;
  1669   001096  C0C3  F0BC         	movff	_ADC_VALUE_convert,_dataSendUART	;volatile
  1670   00109A                     
  1671                           ; BSR set to: 0
  1672                           ;main.c: 93:         ret = ADC_get_conversion_blocking(&ADC_,ADC_CHANNEL_AN0,&ADC_VALUE_
      +                          2);
  1673   00109A  0E53               	movlw	low _ADC_
  1674   00109C  6E15               	movwf	ADC_get_conversion_blocking@ADC_conf^0,c
  1675   00109E  0E01               	movlw	high _ADC_
  1676   0010A0  6E16               	movwf	(ADC_get_conversion_blocking@ADC_conf+1)^0,c
  1677   0010A2  0E00               	movlw	0
  1678   0010A4  6E17               	movwf	ADC_get_conversion_blocking@ADC_CHANNAL_SELECT^0,c
  1679   0010A6  0ECA               	movlw	low _ADC_VALUE_2
  1680   0010A8  6E18               	movwf	ADC_get_conversion_blocking@conversion_status^0,c
  1681   0010AA  EC3D  F025         	call	_ADC_get_conversion_blocking	;wreg free
  1682   0010AE  0100               	movlb	0	; () banked
  1683   0010B0  6FC4               	movwf	_ret& (0+255),b
  1684   0010B2                     
  1685                           ; BSR set to: 0
  1686                           ;main.c: 94:         ADC_VALUE_2 = ((ADC_VALUE_2*100)/1022);
  1687   0010B2  C0CA  F00D         	movff	_ADC_VALUE_2,___lmul@multiplier	;volatile
  1688   0010B6  C0CB  F00E         	movff	_ADC_VALUE_2+1,___lmul@multiplier+1	;volatile
  1689   0010BA  C0CC  F00F         	movff	_ADC_VALUE_2+2,___lmul@multiplier+2	;volatile
  1690   0010BE  C0CD  F010         	movff	_ADC_VALUE_2+3,___lmul@multiplier+3	;volatile
  1691   0010C2  0E64               	movlw	100
  1692   0010C4  6E11               	movwf	___lmul@multiplicand^0,c
  1693   0010C6  0E00               	movlw	0
  1694   0010C8  6E12               	movwf	(___lmul@multiplicand+1)^0,c
  1695   0010CA  0E00               	movlw	0
  1696   0010CC  6E13               	movwf	(___lmul@multiplicand+2)^0,c
  1697   0010CE  0E00               	movlw	0
  1698   0010D0  6E14               	movwf	(___lmul@multiplicand+3)^0,c
  1699   0010D2  EC91  F026         	call	___lmul	;wreg free
  1700   0010D6  C00D  F019         	movff	?___lmul,___lldiv@dividend
  1701   0010DA  C00E  F01A         	movff	?___lmul+1,___lldiv@dividend+1
  1702   0010DE  C00F  F01B         	movff	?___lmul+2,___lldiv@dividend+2
  1703   0010E2  C010  F01C         	movff	?___lmul+3,___lldiv@dividend+3
  1704   0010E6  0EFE               	movlw	254
  1705   0010E8  6E1D               	movwf	___lldiv@divisor^0,c
  1706   0010EA  0E03               	movlw	3
  1707   0010EC  6E1E               	movwf	(___lldiv@divisor+1)^0,c
  1708   0010EE  0E00               	movlw	0
  1709   0010F0  6E1F               	movwf	(___lldiv@divisor+2)^0,c
  1710   0010F2  0E00               	movlw	0
  1711   0010F4  6E20               	movwf	(___lldiv@divisor+3)^0,c
  1712   0010F6  EC12  F022         	call	___lldiv	;wreg free
  1713   0010FA  C019  F0CA         	movff	?___lldiv,_ADC_VALUE_2	;volatile
  1714   0010FE  C01A  F0CB         	movff	?___lldiv+1,_ADC_VALUE_2+1	;volatile
  1715   001102  C01B  F0CC         	movff	?___lldiv+2,_ADC_VALUE_2+2	;volatile
  1716   001106  C01C  F0CD         	movff	?___lldiv+3,_ADC_VALUE_2+3	;volatile
  1717   00110A                     
  1718                           ;main.c: 97:             ret = morot_turn_left(&motor_2);
  1719   00110A  0EF8               	movlw	low _motor_2
  1720   00110C  6E16               	movwf	morot_turn_left@motor_pin^0,c
  1721   00110E  EC36  F028         	call	_morot_turn_left	;wreg free
  1722   001112  0100               	movlb	0	; () banked
  1723   001114  6FC4               	movwf	_ret& (0+255),b
  1724   001116                     
  1725                           ; BSR set to: 0
  1726                           ;main.c: 98:             ccp2_pwm_set_duty(ADC_VALUE_2);
  1727   001116  51CA               	movf	_ADC_VALUE_2& (0+255),w,b	;volatile
  1728   001118  EC28  F01C         	call	_ccp2_pwm_set_duty
  1729   00111C                     
  1730                           ;main.c: 99:             (CCP2CONbits.CCP2M =0x0E);
  1731   00111C  50BA               	movf	186,w,c	;volatile
  1732   00111E  0BF0               	andlw	-16
  1733   001120  090E               	iorlw	14
  1734   001122  6EBA               	movwf	186,c	;volatile
  1735   001124                     
  1736                           ;main.c: 102:         tc74_read_value(&mssp_i2c,(uint8)0X9E,(uint8)0x00,&tc74,&i2c_ack);
  1737   001124  0E24               	movlw	low _mssp_i2c
  1738   001126  6E1A               	movwf	tc74_read_value@i2c_obj^0,c
  1739   001128  0E01               	movlw	high _mssp_i2c
  1740   00112A  6E1B               	movwf	(tc74_read_value@i2c_obj+1)^0,c
  1741   00112C  0E9E               	movlw	158
  1742   00112E  6E1C               	movwf	tc74_read_value@i2c_data_1^0,c
  1743   001130  0E00               	movlw	0
  1744   001132  6E1D               	movwf	tc74_read_value@i2c_data_2^0,c
  1745   001134  0ED1               	movlw	low _tc74
  1746   001136  6E1E               	movwf	tc74_read_value@ret_data^0,c
  1747   001138  0ED0               	movlw	low _i2c_ack
  1748   00113A  6E1F               	movwf	tc74_read_value@_ack^0,c
  1749   00113C  EC32  F029         	call	_tc74_read_value	;wreg free
  1750   001140                     
  1751                           ;main.c: 103:         dataSendUART[1]= tc74;
  1752   001140  C0D1  F0BD         	movff	_tc74,_dataSendUART+1	;volatile
  1753   001144                     
  1754                           ;main.c: 104:         sprintf(mes , "%i",tc74);
  1755   001144  0EC5               	movlw	low _mes
  1756   001146  6E26               	movwf	sprintf@s^0,c
  1757   001148  0E2E               	movlw	low STR_3
  1758   00114A  6E27               	movwf	sprintf@fmt^0,c
  1759   00114C  C0D1  F028         	movff	_tc74,?_sprintf+2	;volatile
  1760   001150  6A29               	clrf	(?_sprintf+3)^0,c
  1761   001152  ECA2  F029         	call	_sprintf	;wreg free
  1762   001156                     
  1763                           ;main.c: 105:         ret = lcd_4bit_send_string_pos(&lcd_4bit,2,15,mes);
  1764   001156  0EF0               	movlw	low _lcd_4bit
  1765   001158  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1766   00115A  0E02               	movlw	2
  1767   00115C  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  1768   00115E  0E0F               	movlw	15
  1769   001160  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  1770   001162  0EC5               	movlw	low _mes
  1771   001164  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  1772   001166  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1773   001168  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  1774   00116C  0100               	movlb	0	; () banked
  1775   00116E  6FC4               	movwf	_ret& (0+255),b
  1776   001170                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 106:         if((tc74 > 25) && (tc74 <= 27)){
  1779   001170  0E19               	movlw	25
  1780   001172  65D1               	cpfsgt	_tc74& (0+255),b	;volatile
  1781   001174  EFBE  F008         	goto	u11741
  1782   001178  EFC0  F008         	goto	u11740
  1783   00117C                     u11741:
  1784   00117C  EFD7  F008         	goto	l11640
  1785   001180                     u11740:
  1786   001180                     
  1787                           ; BSR set to: 0
  1788   001180  0E1C               	movlw	28
  1789   001182  61D1               	cpfslt	_tc74& (0+255),b	;volatile
  1790   001184  EFC6  F008         	goto	u11751
  1791   001188  EFC8  F008         	goto	u11750
  1792   00118C                     u11751:
  1793   00118C  EFD7  F008         	goto	l11640
  1794   001190                     u11750:
  1795   001190                     
  1796                           ; BSR set to: 0
  1797                           ;main.c: 107:             ret = morot_turn_right(&motor_1);
  1798   001190  0EF6               	movlw	low _motor_1
  1799   001192  6E16               	movwf	morot_turn_right@motor_pin^0,c
  1800   001194  EC14  F028         	call	_morot_turn_right	;wreg free
  1801   001198  0100               	movlb	0	; () banked
  1802   00119A  6FC4               	movwf	_ret& (0+255),b
  1803   00119C                     
  1804                           ; BSR set to: 0
  1805                           ;main.c: 108:             ccp1_pwm_set_duty(80);
  1806   00119C  0E50               	movlw	80
  1807   00119E  ECB5  F01C         	call	_ccp1_pwm_set_duty
  1808   0011A2                     
  1809                           ;main.c: 109:             (CCP1CONbits.CCP1M =0x0E);
  1810   0011A2  50BD               	movf	189,w,c	;volatile
  1811   0011A4  0BF0               	andlw	-16
  1812   0011A6  090E               	iorlw	14
  1813   0011A8  6EBD               	movwf	189,c	;volatile
  1814                           
  1815                           ;main.c: 110:            }else if((tc74 > 27) && (tc74 <= 30)){
  1816   0011AA  EF3A  F00A         	goto	l11726
  1817   0011AE                     l11640:
  1818                           
  1819                           ; BSR set to: 0
  1820   0011AE  0E1B               	movlw	27
  1821   0011B0  65D1               	cpfsgt	_tc74& (0+255),b	;volatile
  1822   0011B2  EFDD  F008         	goto	u11761
  1823   0011B6  EFDF  F008         	goto	u11760
  1824   0011BA                     u11761:
  1825   0011BA  EFF6  F008         	goto	l11650
  1826   0011BE                     u11760:
  1827   0011BE                     
  1828                           ; BSR set to: 0
  1829   0011BE  0E1F               	movlw	31
  1830   0011C0  61D1               	cpfslt	_tc74& (0+255),b	;volatile
  1831   0011C2  EFE5  F008         	goto	u11771
  1832   0011C6  EFE7  F008         	goto	u11770
  1833   0011CA                     u11771:
  1834   0011CA  EFF6  F008         	goto	l11650
  1835   0011CE                     u11770:
  1836   0011CE                     
  1837                           ; BSR set to: 0
  1838                           ;main.c: 111:             ret = morot_turn_right(&motor_1);
  1839   0011CE  0EF6               	movlw	low _motor_1
  1840   0011D0  6E16               	movwf	morot_turn_right@motor_pin^0,c
  1841   0011D2  EC14  F028         	call	_morot_turn_right	;wreg free
  1842   0011D6  0100               	movlb	0	; () banked
  1843   0011D8  6FC4               	movwf	_ret& (0+255),b
  1844   0011DA                     
  1845                           ; BSR set to: 0
  1846                           ;main.c: 112:             ccp1_pwm_set_duty(50);
  1847   0011DA  0E32               	movlw	50
  1848   0011DC  ECB5  F01C         	call	_ccp1_pwm_set_duty
  1849   0011E0                     
  1850                           ;main.c: 113:             (CCP1CONbits.CCP1M =0x0E);
  1851   0011E0  50BD               	movf	189,w,c	;volatile
  1852   0011E2  0BF0               	andlw	-16
  1853   0011E4  090E               	iorlw	14
  1854   0011E6  6EBD               	movwf	189,c	;volatile
  1855                           
  1856                           ;main.c: 114:             }
  1857   0011E8  EF3A  F00A         	goto	l11726
  1858   0011EC                     l11650:
  1859                           
  1860                           ; BSR set to: 0
  1861   0011EC  0E1E               	movlw	30
  1862   0011EE  65D1               	cpfsgt	_tc74& (0+255),b	;volatile
  1863   0011F0  EFFC  F008         	goto	u11781
  1864   0011F4  EFFE  F008         	goto	u11780
  1865   0011F8                     u11781:
  1866   0011F8  EF15  F009         	goto	l11660
  1867   0011FC                     u11780:
  1868   0011FC                     
  1869                           ; BSR set to: 0
  1870   0011FC  0E22               	movlw	34
  1871   0011FE  61D1               	cpfslt	_tc74& (0+255),b	;volatile
  1872   001200  EF04  F009         	goto	u11791
  1873   001204  EF06  F009         	goto	u11790
  1874   001208                     u11791:
  1875   001208  EF15  F009         	goto	l11660
  1876   00120C                     u11790:
  1877   00120C                     
  1878                           ; BSR set to: 0
  1879                           ;main.c: 116:             ret = morot_turn_right(&motor_1);
  1880   00120C  0EF6               	movlw	low _motor_1
  1881   00120E  6E16               	movwf	morot_turn_right@motor_pin^0,c
  1882   001210  EC14  F028         	call	_morot_turn_right	;wreg free
  1883   001214  0100               	movlb	0	; () banked
  1884   001216  6FC4               	movwf	_ret& (0+255),b
  1885   001218                     
  1886                           ; BSR set to: 0
  1887                           ;main.c: 117:             ccp1_pwm_set_duty(20);
  1888   001218  0E14               	movlw	20
  1889   00121A  ECB5  F01C         	call	_ccp1_pwm_set_duty
  1890   00121E                     
  1891                           ;main.c: 118:             (CCP1CONbits.CCP1M =0x0E);
  1892   00121E  50BD               	movf	189,w,c	;volatile
  1893   001220  0BF0               	andlw	-16
  1894   001222  090E               	iorlw	14
  1895   001224  6EBD               	movwf	189,c	;volatile
  1896                           
  1897                           ;main.c: 119:             }
  1898   001226  EF3A  F00A         	goto	l11726
  1899   00122A                     l11660:
  1900                           
  1901                           ; BSR set to: 0
  1902   00122A  0E21               	movlw	33
  1903   00122C  65D1               	cpfsgt	_tc74& (0+255),b	;volatile
  1904   00122E  EF1B  F009         	goto	u11801
  1905   001232  EF1D  F009         	goto	u11800
  1906   001236                     u11801:
  1907   001236  EF2C  F009         	goto	l11668
  1908   00123A                     u11800:
  1909   00123A                     
  1910                           ; BSR set to: 0
  1911                           ;main.c: 121:             ret = morot_turn_right(&motor_1);
  1912   00123A  0EF6               	movlw	low _motor_1
  1913   00123C  6E16               	movwf	morot_turn_right@motor_pin^0,c
  1914   00123E  EC14  F028         	call	_morot_turn_right	;wreg free
  1915   001242  0100               	movlb	0	; () banked
  1916   001244  6FC4               	movwf	_ret& (0+255),b
  1917   001246                     
  1918                           ; BSR set to: 0
  1919                           ;main.c: 122:             ccp1_pwm_set_duty(1);
  1920   001246  0E01               	movlw	1
  1921   001248  ECB5  F01C         	call	_ccp1_pwm_set_duty
  1922   00124C                     
  1923                           ;main.c: 123:             (CCP1CONbits.CCP1M =0x0E);
  1924   00124C  50BD               	movf	189,w,c	;volatile
  1925   00124E  0BF0               	andlw	-16
  1926   001250  090E               	iorlw	14
  1927   001252  6EBD               	movwf	189,c	;volatile
  1928                           
  1929                           ;main.c: 124:             }
  1930   001254  EF3A  F00A         	goto	l11726
  1931   001258                     l11668:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;main.c: 126:             ret = morot_stop(&motor_1);
  1935   001258  0EF6               	movlw	low _motor_1
  1936   00125A  6E16               	movwf	morot_stop@motor_pin^0,c
  1937   00125C  EC58  F028         	call	_morot_stop	;wreg free
  1938   001260  0100               	movlb	0	; () banked
  1939   001262  6FC4               	movwf	_ret& (0+255),b
  1940   001264                     
  1941                           ; BSR set to: 0
  1942                           ;main.c: 127:             (CCP1CONbits.CCP1M =0);
  1943   001264  0EF0               	movlw	-16
  1944   001266  16BD               	andwf	189,f,c	;volatile
  1945   001268  EF3A  F00A         	goto	l11726
  1946   00126C                     l11672:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;main.c: 132:             ret = GPIO_pIN_TOGGLE_LOGIC(&LED_ROOM_1);
  1950   00126C  0EFA               	movlw	low _LED_ROOM_1
  1951   00126E  6E0D               	movwf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,c
  1952   001270  EC72  F024         	call	_GPIO_pIN_TOGGLE_LOGIC	;wreg free
  1953   001274  0100               	movlb	0	; () banked
  1954   001276  6FC4               	movwf	_ret& (0+255),b
  1955                           
  1956                           ;main.c: 133:             lcd_4bit_send_command(&lcd_4bit,0X01);
  1957   001278  0EF0               	movlw	low _lcd_4bit
  1958   00127A  6E1A               	movwf	lcd_4bit_send_command@lcd^0,c
  1959   00127C  0E01               	movlw	1
  1960   00127E  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  1961   001280  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  1962   001284                     
  1963                           ;main.c: 134:             ret = lcd_4bit_send_string_pos(&lcd_4bit,1,2,"wrong");
  1964   001284  0EF0               	movlw	low _lcd_4bit
  1965   001286  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1966   001288  0E01               	movlw	1
  1967   00128A  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  1968   00128C  0E02               	movlw	2
  1969   00128E  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  1970   001290  0E28               	movlw	low STR_4
  1971   001292  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  1972   001294  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1973   001296  A4D8               	btfss	status,2,c
  1974   001298  0E10               	movlw	high __smallconst
  1975   00129A  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1976   00129C  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  1977   0012A0  0100               	movlb	0	; () banked
  1978   0012A2  6FC4               	movwf	_ret& (0+255),b
  1979   0012A4                     
  1980                           ; BSR set to: 0
  1981                           ;main.c: 135:             _delay((unsigned long)((1)*(8000000UL/4000.0)));
  1982   0012A4  0E03               	movlw	3
  1983   0012A6  0101               	movlb	1	; () banked
  1984   0012A8  6F9F               	movwf	??_main& (0+255),b
  1985   0012AA  0E97               	movlw	151
  1986   0012AC                     u12357:
  1987   0012AC  2EE8               	decfsz	wreg,f,c
  1988   0012AE  D7FE               	bra	u12357
  1989   0012B0  2F9F               	decfsz	??_main& (0+255),f,b
  1990   0012B2  D7FC               	bra	u12357
  1991   0012B4  D000               	nop2	
  1992   0012B6                     
  1993                           ;main.c: 136:             ret = lcd_4bit_send_string_pos(&lcd_4bit,1,8,"!");
  1994   0012B6  0EF0               	movlw	low _lcd_4bit
  1995   0012B8  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1996   0012BA  0E01               	movlw	1
  1997   0012BC  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  1998   0012BE  0E08               	movlw	8
  1999   0012C0  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2000   0012C2  0E31               	movlw	low STR_5
  2001   0012C4  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2002   0012C6  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2003   0012C8  A4D8               	btfss	status,2,c
  2004   0012CA  0E10               	movlw	high __smallconst
  2005   0012CC  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2006   0012CE  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2007   0012D2  0100               	movlb	0	; () banked
  2008   0012D4  6FC4               	movwf	_ret& (0+255),b
  2009   0012D6                     
  2010                           ; BSR set to: 0
  2011                           ;main.c: 137:             _delay((unsigned long)((1)*(8000000UL/4000.0)));
  2012   0012D6  0E03               	movlw	3
  2013   0012D8  0101               	movlb	1	; () banked
  2014   0012DA  6F9F               	movwf	??_main& (0+255),b
  2015   0012DC  0E97               	movlw	151
  2016   0012DE                     u12367:
  2017   0012DE  2EE8               	decfsz	wreg,f,c
  2018   0012E0  D7FE               	bra	u12367
  2019   0012E2  2F9F               	decfsz	??_main& (0+255),f,b
  2020   0012E4  D7FC               	bra	u12367
  2021   0012E6  D000               	nop2	
  2022   0012E8                     
  2023                           ;main.c: 138:             ret = lcd_4bit_send_string_pos(&lcd_4bit,1,9,"!");
  2024   0012E8  0EF0               	movlw	low _lcd_4bit
  2025   0012EA  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2026   0012EC  0E01               	movlw	1
  2027   0012EE  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2028   0012F0  0E09               	movlw	9
  2029   0012F2  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2030   0012F4  0E31               	movlw	low STR_5
  2031   0012F6  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2032   0012F8  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2033   0012FA  A4D8               	btfss	status,2,c
  2034   0012FC  0E10               	movlw	high __smallconst
  2035   0012FE  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2036   001300  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2037   001304  0100               	movlb	0	; () banked
  2038   001306  6FC4               	movwf	_ret& (0+255),b
  2039   001308                     
  2040                           ; BSR set to: 0
  2041                           ;main.c: 139:             _delay((unsigned long)((1)*(8000000UL/4000.0)));
  2042   001308  0E03               	movlw	3
  2043   00130A  0101               	movlb	1	; () banked
  2044   00130C  6F9F               	movwf	??_main& (0+255),b
  2045   00130E  0E97               	movlw	151
  2046   001310                     u12377:
  2047   001310  2EE8               	decfsz	wreg,f,c
  2048   001312  D7FE               	bra	u12377
  2049   001314  2F9F               	decfsz	??_main& (0+255),f,b
  2050   001316  D7FC               	bra	u12377
  2051   001318  D000               	nop2	
  2052   00131A                     
  2053                           ;main.c: 140:             ret = lcd_4bit_send_string_pos(&lcd_4bit,1,10,"!");
  2054   00131A  0EF0               	movlw	low _lcd_4bit
  2055   00131C  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2056   00131E  0E01               	movlw	1
  2057   001320  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2058   001322  0E0A               	movlw	10
  2059   001324  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2060   001326  0E31               	movlw	low STR_5
  2061   001328  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2062   00132A  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2063   00132C  A4D8               	btfss	status,2,c
  2064   00132E  0E10               	movlw	high __smallconst
  2065   001330  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2066   001332  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2067   001336  0100               	movlb	0	; () banked
  2068   001338  6FC4               	movwf	_ret& (0+255),b
  2069   00133A                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 141:             _delay((unsigned long)((1)*(8000000UL/4000.0)));
  2072   00133A  0E03               	movlw	3
  2073   00133C  0101               	movlb	1	; () banked
  2074   00133E  6F9F               	movwf	??_main& (0+255),b
  2075   001340  0E97               	movlw	151
  2076   001342                     u12387:
  2077   001342  2EE8               	decfsz	wreg,f,c
  2078   001344  D7FE               	bra	u12387
  2079   001346  2F9F               	decfsz	??_main& (0+255),f,b
  2080   001348  D7FC               	bra	u12387
  2081   00134A  D000               	nop2	
  2082   00134C                     
  2083                           ;main.c: 142:             ret = lcd_4bit_send_string_pos(&lcd_4bit,1,11,"!");
  2084   00134C  0EF0               	movlw	low _lcd_4bit
  2085   00134E  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2086   001350  0E01               	movlw	1
  2087   001352  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2088   001354  0E0B               	movlw	11
  2089   001356  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2090   001358  0E31               	movlw	low STR_5
  2091   00135A  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2092   00135C  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2093   00135E  A4D8               	btfss	status,2,c
  2094   001360  0E10               	movlw	high __smallconst
  2095   001362  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2096   001364  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2097   001368  0100               	movlb	0	; () banked
  2098   00136A  6FC4               	movwf	_ret& (0+255),b
  2099   00136C                     
  2100                           ; BSR set to: 0
  2101                           ;main.c: 143:             _delay((unsigned long)((1)*(8000000UL/4000.0)));
  2102   00136C  0E03               	movlw	3
  2103   00136E  0101               	movlb	1	; () banked
  2104   001370  6F9F               	movwf	??_main& (0+255),b
  2105   001372  0E97               	movlw	151
  2106   001374                     u12397:
  2107   001374  2EE8               	decfsz	wreg,f,c
  2108   001376  D7FE               	bra	u12397
  2109   001378  2F9F               	decfsz	??_main& (0+255),f,b
  2110   00137A  D7FC               	bra	u12397
  2111   00137C  D000               	nop2	
  2112   00137E                     
  2113                           ;main.c: 144:             ret = lcd_4bit_send_string_pos(&lcd_4bit,1,12,"!");
  2114   00137E  0EF0               	movlw	low _lcd_4bit
  2115   001380  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2116   001382  0E01               	movlw	1
  2117   001384  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2118   001386  0E0C               	movlw	12
  2119   001388  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2120   00138A  0E31               	movlw	low STR_5
  2121   00138C  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2122   00138E  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2123   001390  A4D8               	btfss	status,2,c
  2124   001392  0E10               	movlw	high __smallconst
  2125   001394  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2126   001396  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2127   00139A  0100               	movlb	0	; () banked
  2128   00139C  6FC4               	movwf	_ret& (0+255),b
  2129   00139E                     
  2130                           ; BSR set to: 0
  2131                           ;main.c: 145:             _delay((unsigned long)((1)*(8000000UL/4000.0)));
  2132   00139E  0E03               	movlw	3
  2133   0013A0  0101               	movlb	1	; () banked
  2134   0013A2  6F9F               	movwf	??_main& (0+255),b
  2135   0013A4  0E97               	movlw	151
  2136   0013A6                     u12407:
  2137   0013A6  2EE8               	decfsz	wreg,f,c
  2138   0013A8  D7FE               	bra	u12407
  2139   0013AA  2F9F               	decfsz	??_main& (0+255),f,b
  2140   0013AC  D7FC               	bra	u12407
  2141   0013AE  D000               	nop2	
  2142   0013B0                     
  2143                           ;main.c: 146:             ret = lcd_4bit_send_string_pos(&lcd_4bit,2,2,"temperature : ")
      +                          ;
  2144   0013B0  0EF0               	movlw	low _lcd_4bit
  2145   0013B2  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2146   0013B4  0E02               	movlw	2
  2147   0013B6  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2148   0013B8  0E02               	movlw	2
  2149   0013BA  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2150   0013BC  0E11               	movlw	low STR_2
  2151   0013BE  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2152   0013C0  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2153   0013C2  A4D8               	btfss	status,2,c
  2154   0013C4  0E10               	movlw	high __smallconst
  2155   0013C6  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2156   0013C8  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2157   0013CC  0100               	movlb	0	; () banked
  2158   0013CE  6FC4               	movwf	_ret& (0+255),b
  2159   0013D0                     
  2160                           ; BSR set to: 0
  2161                           ;main.c: 147:             ret = lcd_4bit_send_string_pos(&lcd_4bit,2,15,mes);
  2162   0013D0  0EF0               	movlw	low _lcd_4bit
  2163   0013D2  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2164   0013D4  0E02               	movlw	2
  2165   0013D6  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2166   0013D8  0E0F               	movlw	15
  2167   0013DA  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2168   0013DC  0EC5               	movlw	low _mes
  2169   0013DE  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2170   0013E0  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2171   0013E2  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2172   0013E6  0100               	movlb	0	; () banked
  2173   0013E8  6FC4               	movwf	_ret& (0+255),b
  2174   0013EA                     
  2175                           ; BSR set to: 0
  2176                           ;main.c: 148:             _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2177   0013EA  0E34               	movlw	52
  2178   0013EC  0101               	movlb	1	; () banked
  2179   0013EE  6F9F               	movwf	??_main& (0+255),b
  2180   0013F0  0EF1               	movlw	241
  2181   0013F2                     u12417:
  2182   0013F2  2EE8               	decfsz	wreg,f,c
  2183   0013F4  D7FE               	bra	u12417
  2184   0013F6  2F9F               	decfsz	??_main& (0+255),f,b
  2185   0013F8  D7FC               	bra	u12417
  2186   0013FA  D000               	nop2	
  2187   0013FC                     
  2188                           ;main.c: 149:             tc74_read_value(&mssp_i2c,(uint8)0X9E,(uint8)0x00,&tc74,&i2c_a
      +                          ck);
  2189   0013FC  0E24               	movlw	low _mssp_i2c
  2190   0013FE  6E1A               	movwf	tc74_read_value@i2c_obj^0,c
  2191   001400  0E01               	movlw	high _mssp_i2c
  2192   001402  6E1B               	movwf	(tc74_read_value@i2c_obj+1)^0,c
  2193   001404  0E9E               	movlw	158
  2194   001406  6E1C               	movwf	tc74_read_value@i2c_data_1^0,c
  2195   001408  0E00               	movlw	0
  2196   00140A  6E1D               	movwf	tc74_read_value@i2c_data_2^0,c
  2197   00140C  0ED1               	movlw	low _tc74
  2198   00140E  6E1E               	movwf	tc74_read_value@ret_data^0,c
  2199   001410  0ED0               	movlw	low _i2c_ack
  2200   001412  6E1F               	movwf	tc74_read_value@_ack^0,c
  2201   001414  EC32  F029         	call	_tc74_read_value	;wreg free
  2202   001418                     
  2203                           ;main.c: 150:             dataSendUART[1]= tc74;
  2204   001418  C0D1  F0BD         	movff	_tc74,_dataSendUART+1	;volatile
  2205   00141C                     
  2206                           ;main.c: 151:             sprintf(mes , "%i",tc74);
  2207   00141C  0EC5               	movlw	low _mes
  2208   00141E  6E26               	movwf	sprintf@s^0,c
  2209   001420  0E2E               	movlw	low STR_3
  2210   001422  6E27               	movwf	sprintf@fmt^0,c
  2211   001424  C0D1  F028         	movff	_tc74,?_sprintf+2	;volatile
  2212   001428  6A29               	clrf	(?_sprintf+3)^0,c
  2213   00142A  ECA2  F029         	call	_sprintf	;wreg free
  2214   00142E                     
  2215                           ;main.c: 152:             lcd_4bit_send_command(&lcd_4bit,0X01);
  2216   00142E  0EF0               	movlw	low _lcd_4bit
  2217   001430  6E1A               	movwf	lcd_4bit_send_command@lcd^0,c
  2218   001432  0E01               	movlw	1
  2219   001434  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  2220   001436  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  2221   00143A                     
  2222                           ;main.c: 153:             for(uint8 i = 0 ; i< sizeof(dataSendUART); i++){
  2223   00143A  0E00               	movlw	0
  2224   00143C  0101               	movlb	1	; () banked
  2225   00143E  6FA0               	movwf	main@i& (0+255),b
  2226   001440                     l11714:
  2227                           
  2228                           ; BSR set to: 1
  2229   001440  0E01               	movlw	1
  2230   001442  65A0               	cpfsgt	main@i& (0+255),b
  2231   001444  EF26  F00A         	goto	u11811
  2232   001448  EF28  F00A         	goto	u11810
  2233   00144C                     u11811:
  2234   00144C  EF2A  F00A         	goto	l11718
  2235   001450                     u11810:
  2236   001450  EF37  F00A         	goto	l11724
  2237   001454                     l11718:
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;main.c: 154:             ret = usart_ASYNC_write_byte_blocking(dataSendUART[i]);
  2241   001454  51A0               	movf	main@i& (0+255),w,b
  2242   001456  0FBC               	addlw	low _dataSendUART
  2243   001458  6ED9               	movwf	fsr2l,c
  2244   00145A  6ADA               	clrf	fsr2h,c
  2245   00145C  50DF               	movf	indf2,w,c
  2246   00145E  ECEC  F02A         	call	_usart_ASYNC_write_byte_blocking
  2247   001462  0100               	movlb	0	; () banked
  2248   001464  6FC4               	movwf	_ret& (0+255),b
  2249   001466                     
  2250                           ; BSR set to: 0
  2251                           ;main.c: 155:             }
  2252   001466  0101               	movlb	1	; () banked
  2253   001468  2BA0               	incf	main@i& (0+255),f,b
  2254   00146A  EF20  F00A         	goto	l11714
  2255   00146E                     l11724:
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;main.c: 156:             chick = 1;
  2259   00146E  0E01               	movlw	1
  2260   001470  0100               	movlb	0	; () banked
  2261   001472  6FC2               	movwf	_chick& (0+255),b
  2262   001474                     l11726:
  2263                           
  2264                           ;main.c: 131:         while(tc74 >= 40){
  2265   001474  0E28               	movlw	40
  2266   001476  0100               	movlb	0	; () banked
  2267   001478  61D1               	cpfslt	_tc74& (0+255),b	;volatile
  2268   00147A  EF41  F00A         	goto	u11821
  2269   00147E  EF43  F00A         	goto	u11820
  2270   001482                     u11821:
  2271   001482  EF36  F009         	goto	l11672
  2272   001486                     u11820:
  2273   001486                     
  2274                           ; BSR set to: 0
  2275                           ;main.c: 158:         if(1 == chick){
  2276   001486  05C2               	decf	_chick& (0+255),w,b
  2277   001488  A4D8               	btfss	status,2,c
  2278   00148A  EF49  F00A         	goto	u11831
  2279   00148E  EF4B  F00A         	goto	u11830
  2280   001492                     u11831:
  2281   001492  EF6D  F00A         	goto	l11736
  2282   001496                     u11830:
  2283   001496                     
  2284                           ; BSR set to: 0
  2285                           ;main.c: 159:             chick = 0;
  2286   001496  0E00               	movlw	0
  2287   001498  6FC2               	movwf	_chick& (0+255),b
  2288   00149A                     
  2289                           ; BSR set to: 0
  2290                           ;main.c: 160:             ret = lcd_4bit_send_string_pos(&lcd_4bit,1,2,"date : ");
  2291   00149A  0EF0               	movlw	low _lcd_4bit
  2292   00149C  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2293   00149E  0E01               	movlw	1
  2294   0014A0  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2295   0014A2  0E02               	movlw	2
  2296   0014A4  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2297   0014A6  0E20               	movlw	low STR_1
  2298   0014A8  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2299   0014AA  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2300   0014AC  A4D8               	btfss	status,2,c
  2301   0014AE  0E10               	movlw	high __smallconst
  2302   0014B0  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2303   0014B2  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2304   0014B6  0100               	movlb	0	; () banked
  2305   0014B8  6FC4               	movwf	_ret& (0+255),b
  2306   0014BA                     
  2307                           ; BSR set to: 0
  2308                           ;main.c: 161:             ret = lcd_4bit_send_string_pos(&lcd_4bit,2,2,"temperature : ")
      +                          ;
  2309   0014BA  0EF0               	movlw	low _lcd_4bit
  2310   0014BC  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2311   0014BE  0E02               	movlw	2
  2312   0014C0  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2313   0014C2  0E02               	movlw	2
  2314   0014C4  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2315   0014C6  0E11               	movlw	low STR_2
  2316   0014C8  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2317   0014CA  5026               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2318   0014CC  A4D8               	btfss	status,2,c
  2319   0014CE  0E10               	movlw	high __smallconst
  2320   0014D0  6E27               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2321   0014D2  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2322   0014D6  0100               	movlb	0	; () banked
  2323   0014D8  6FC4               	movwf	_ret& (0+255),b
  2324   0014DA                     l11736:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;main.c: 164:         ds1307_read_values(&mssp_i2c,0xD0,ds13_data,&i2c_ack);
  2328   0014DA  0E24               	movlw	low _mssp_i2c
  2329   0014DC  6E1A               	movwf	ds1307_read_values@i2c_obj^0,c
  2330   0014DE  0E01               	movlw	high _mssp_i2c
  2331   0014E0  6E1B               	movwf	(ds1307_read_values@i2c_obj+1)^0,c
  2332   0014E2  0ED0               	movlw	208
  2333   0014E4  6E1C               	movwf	ds1307_read_values@address_1^0,c
  2334   0014E6  0E8B               	movlw	low _ds13_data
  2335   0014E8  6E1D               	movwf	ds1307_read_values@return_data_array^0,c
  2336   0014EA  0E01               	movlw	high _ds13_data
  2337   0014EC  6E1E               	movwf	(ds1307_read_values@return_data_array+1)^0,c
  2338   0014EE  0ED0               	movlw	low _i2c_ack
  2339   0014F0  6E1F               	movwf	ds1307_read_values@_ack^0,c
  2340   0014F2  EC0B  F019         	call	_ds1307_read_values	;wreg free
  2341   0014F6                     
  2342                           ;main.c: 165:         for(uint8 i =0 ; i<6 ;i++){
  2343   0014F6  0E00               	movlw	0
  2344   0014F8  0101               	movlb	1	; () banked
  2345   0014FA  6FA2               	movwf	main@i_642& (0+255),b
  2346   0014FC                     l11740:
  2347                           
  2348                           ; BSR set to: 1
  2349   0014FC  0E05               	movlw	5
  2350   0014FE  65A2               	cpfsgt	main@i_642& (0+255),b
  2351   001500  EF84  F00A         	goto	u11841
  2352   001504  EF86  F00A         	goto	u11840
  2353   001508                     u11841:
  2354   001508  EF88  F00A         	goto	l11744
  2355   00150C                     u11840:
  2356   00150C  EF9C  F00A         	goto	l11750
  2357   001510                     l11744:
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;main.c: 166:             ds13_data_decimal[i] = convert_hex_to_dec(ds13_data[i]);
  2361   001510  0E85               	movlw	low _ds13_data_decimal
  2362   001512  25A2               	addwf	main@i_642& (0+255),w,b
  2363   001514  6ED9               	movwf	fsr2l,c
  2364   001516  6ADA               	clrf	fsr2h,c
  2365   001518  0E01               	movlw	high _ds13_data_decimal
  2366   00151A  22DA               	addwfc	fsr2h,f,c
  2367   00151C  0E8B               	movlw	low _ds13_data
  2368   00151E  25A2               	addwf	main@i_642& (0+255),w,b
  2369   001520  6EE1               	movwf	fsr1l,c
  2370   001522  6AE2               	clrf	fsr1h,c
  2371   001524  0E01               	movlw	high _ds13_data
  2372   001526  22E2               	addwfc	fsr1h,f,c
  2373   001528  50E7               	movf	indf1,w,c
  2374   00152A  EC2D  F02B         	call	_convert_hex_to_dec
  2375   00152E  6EDF               	movwf	indf2,c
  2376   001530                     
  2377                           ;main.c: 167:         }
  2378   001530  0101               	movlb	1	; () banked
  2379   001532  2BA2               	incf	main@i_642& (0+255),f,b
  2380   001534  EF7E  F00A         	goto	l11740
  2381   001538                     l11750:
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;main.c: 169:         sprintf(mes , "%i",ds13_data_decimal[3]);
  2385   001538  0EC5               	movlw	low _mes
  2386   00153A  6E26               	movwf	sprintf@s^0,c
  2387   00153C  0E2E               	movlw	low STR_3
  2388   00153E  6E27               	movwf	sprintf@fmt^0,c
  2389   001540  C188  F028         	movff	_ds13_data_decimal+3,?_sprintf+2
  2390   001544  6A29               	clrf	(?_sprintf+3)^0,c
  2391   001546  ECA2  F029         	call	_sprintf	;wreg free
  2392   00154A                     
  2393                           ;main.c: 170:         ret = lcd_4bit_send_string_pos(&lcd_4bit,1,8,mes);
  2394   00154A  0EF0               	movlw	low _lcd_4bit
  2395   00154C  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2396   00154E  0E01               	movlw	1
  2397   001550  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2398   001552  0E08               	movlw	8
  2399   001554  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2400   001556  0EC5               	movlw	low _mes
  2401   001558  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2402   00155A  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2403   00155C  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2404   001560  0100               	movlb	0	; () banked
  2405   001562  6FC4               	movwf	_ret& (0+255),b
  2406   001564                     
  2407                           ; BSR set to: 0
  2408                           ;main.c: 171:         ret = lcd_4bit_send_char_data_pos(&lcd_4bit,1,11,'/');
  2409   001564  0EF0               	movlw	low _lcd_4bit
  2410   001566  6E23               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2411   001568  0E01               	movlw	1
  2412   00156A  6E24               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2413   00156C  0E0B               	movlw	11
  2414   00156E  6E25               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2415   001570  0E2F               	movlw	47
  2416   001572  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2417   001574  ECBC  F028         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2418   001578  0100               	movlb	0	; () banked
  2419   00157A  6FC4               	movwf	_ret& (0+255),b
  2420   00157C                     
  2421                           ; BSR set to: 0
  2422                           ;main.c: 172:         sprintf(mes , "%i",ds13_data_decimal[4]);
  2423   00157C  0EC5               	movlw	low _mes
  2424   00157E  6E26               	movwf	sprintf@s^0,c
  2425   001580  0E2E               	movlw	low STR_3
  2426   001582  6E27               	movwf	sprintf@fmt^0,c
  2427   001584  C189  F028         	movff	_ds13_data_decimal+4,?_sprintf+2
  2428   001588  6A29               	clrf	(?_sprintf+3)^0,c
  2429   00158A  ECA2  F029         	call	_sprintf	;wreg free
  2430   00158E                     
  2431                           ;main.c: 173:         ret = lcd_4bit_send_string_pos(&lcd_4bit,1,12,mes);
  2432   00158E  0EF0               	movlw	low _lcd_4bit
  2433   001590  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2434   001592  0E01               	movlw	1
  2435   001594  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2436   001596  0E0C               	movlw	12
  2437   001598  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2438   00159A  0EC5               	movlw	low _mes
  2439   00159C  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2440   00159E  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2441   0015A0  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2442   0015A4  0100               	movlb	0	; () banked
  2443   0015A6  6FC4               	movwf	_ret& (0+255),b
  2444                           
  2445                           ;main.c: 174:         ret = lcd_4bit_send_char_data_pos(&lcd_4bit,1,14,'/');
  2446   0015A8  0EF0               	movlw	low _lcd_4bit
  2447   0015AA  6E23               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  2448   0015AC  0E01               	movlw	1
  2449   0015AE  6E24               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  2450   0015B0  0E0E               	movlw	14
  2451   0015B2  6E25               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  2452   0015B4  0E2F               	movlw	47
  2453   0015B6  6E26               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  2454   0015B8  ECBC  F028         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2455   0015BC  0100               	movlb	0	; () banked
  2456   0015BE  6FC4               	movwf	_ret& (0+255),b
  2457   0015C0                     
  2458                           ; BSR set to: 0
  2459                           ;main.c: 175:         sprintf(mes , "%i",ds13_data_decimal[5]);
  2460   0015C0  0EC5               	movlw	low _mes
  2461   0015C2  6E26               	movwf	sprintf@s^0,c
  2462   0015C4  0E2E               	movlw	low STR_3
  2463   0015C6  6E27               	movwf	sprintf@fmt^0,c
  2464   0015C8  C18A  F028         	movff	_ds13_data_decimal+5,?_sprintf+2
  2465   0015CC  6A29               	clrf	(?_sprintf+3)^0,c
  2466   0015CE  ECA2  F029         	call	_sprintf	;wreg free
  2467   0015D2                     
  2468                           ;main.c: 176:         ret = lcd_4bit_send_string_pos(&lcd_4bit,1,15,mes);
  2469   0015D2  0EF0               	movlw	low _lcd_4bit
  2470   0015D4  6E23               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2471   0015D6  0E01               	movlw	1
  2472   0015D8  6E24               	movwf	lcd_4bit_send_string_pos@row^0,c
  2473   0015DA  0E0F               	movlw	15
  2474   0015DC  6E25               	movwf	lcd_4bit_send_string_pos@column^0,c
  2475   0015DE  0EC5               	movlw	low _mes
  2476   0015E0  6E26               	movwf	lcd_4bit_send_string_pos@str^0,c
  2477   0015E2  6A27               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  2478   0015E4  EC99  F023         	call	_lcd_4bit_send_string_pos	;wreg free
  2479   0015E8  0100               	movlb	0	; () banked
  2480   0015EA  6FC4               	movwf	_ret& (0+255),b
  2481   0015EC                     
  2482                           ; BSR set to: 0
  2483                           ;main.c: 179:         for(uint8 i = 0 ; i< sizeof(dataSendUART); i++){
  2484   0015EC  0E00               	movlw	0
  2485   0015EE  0101               	movlb	1	; () banked
  2486   0015F0  6FA1               	movwf	main@i_646& (0+255),b
  2487   0015F2                     l11766:
  2488                           
  2489                           ; BSR set to: 1
  2490   0015F2  0E01               	movlw	1
  2491   0015F4  65A1               	cpfsgt	main@i_646& (0+255),b
  2492   0015F6  EFFF  F00A         	goto	u11851
  2493   0015FA  EF01  F00B         	goto	u11850
  2494   0015FE                     u11851:
  2495   0015FE  EF03  F00B         	goto	l11770
  2496   001602                     u11850:
  2497   001602  EF10  F00B         	goto	l11776
  2498   001606                     l11770:
  2499                           
  2500                           ; BSR set to: 1
  2501                           ;main.c: 180:             ret = usart_ASYNC_write_byte_blocking(dataSendUART[i]);
  2502   001606  51A1               	movf	main@i_646& (0+255),w,b
  2503   001608  0FBC               	addlw	low _dataSendUART
  2504   00160A  6ED9               	movwf	fsr2l,c
  2505   00160C  6ADA               	clrf	fsr2h,c
  2506   00160E  50DF               	movf	indf2,w,c
  2507   001610  ECEC  F02A         	call	_usart_ASYNC_write_byte_blocking
  2508   001614  0100               	movlb	0	; () banked
  2509   001616  6FC4               	movwf	_ret& (0+255),b
  2510   001618                     
  2511                           ; BSR set to: 0
  2512                           ;main.c: 181:         }
  2513   001618  0101               	movlb	1	; () banked
  2514   00161A  2BA1               	incf	main@i_646& (0+255),f,b
  2515   00161C  EFF9  F00A         	goto	l11766
  2516   001620                     l11776:
  2517                           
  2518                           ; BSR set to: 1
  2519                           ;main.c: 183:         if(ADC_VALUE_convert > 38 ){
  2520   001620  0E26               	movlw	38
  2521   001622  0100               	movlb	0	; () banked
  2522   001624  65C3               	cpfsgt	_ADC_VALUE_convert& (0+255),b	;volatile
  2523   001626  EF17  F00B         	goto	u11861
  2524   00162A  EF19  F00B         	goto	u11860
  2525   00162E                     u11861:
  2526   00162E  EF3C  F008         	goto	l11606
  2527   001632                     u11860:
  2528   001632                     
  2529                           ; BSR set to: 0
  2530                           ;main.c: 184:             GPIO_pIN_WRITE_LOGIC(&LED_ROOM_1,GPIO_LOW);
  2531   001632  0EFA               	movlw	low _LED_ROOM_1
  2532   001634  6E0D               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  2533   001636  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2534   001638  0E00               	movlw	0
  2535   00163A  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2536   00163C  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2537   001640  EF3C  F008         	goto	l11606
  2538   001644  EF07  F000         	goto	start
  2539   001648                     __end_of_main:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _usart_ASYNC_write_byte_blocking *****************
  2543 ;; Defined at:
  2544 ;;		line 78 in file "MKAL_layer/USART/hal_usart.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  data            1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  data            1   12[COMRAM] unsigned char 
  2549 ;;  ret             1    0        unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;Total ram usage:        1 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 4
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;;		_usart_ASYNC_write_string_blocking
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text1
  2575   0055D8                     __ptext1:
  2576                           	callstack 0
  2577   0055D8                     _usart_ASYNC_write_byte_blocking:
  2578                           	callstack 26
  2579                           
  2580                           ;incstack = 0
  2581                           ;usart_ASYNC_write_byte_blocking@data stored from wreg
  2582   0055D8  6E0D               	movwf	usart_ASYNC_write_byte_blocking@data^0,c
  2583   0055DA                     l1701:
  2584   0055DA  A2AC               	btfss	172,1,c	;volatile
  2585   0055DC  EFF2  F02A         	goto	u11661
  2586   0055E0  EFF4  F02A         	goto	u11660
  2587   0055E4                     u11661:
  2588   0055E4  EFED  F02A         	goto	l1701
  2589   0055E8                     u11660:
  2590   0055E8                     
  2591                           ;MKAL_layer/USART/hal_usart.c: 82:         (PIE1bits.TXIE = 1);
  2592   0055E8  889D               	bsf	157,4,c	;volatile
  2593   0055EA                     
  2594                           ;MKAL_layer/USART/hal_usart.c: 84:         TXREG = data;
  2595   0055EA  C00D  FFAD         	movff	usart_ASYNC_write_byte_blocking@data,4013	;volatile
  2596   0055EE                     
  2597                           ;MKAL_layer/USART/hal_usart.c: 86:     return ret;
  2598   0055EE  0E01               	movlw	1
  2599   0055F0  0012               	return		;funcret
  2600   0055F2                     __end_of_usart_ASYNC_write_byte_blocking:
  2601                           	callstack 0
  2602                           
  2603 ;; *************** function _tc74_read_value *****************
  2604 ;; Defined at:
  2605 ;;		line 11 in file "ECU_layer/TC74/hal_tc74.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  i2c_obj         2   25[COMRAM] PTR const struct .
  2608 ;;		 -> mssp_i2c(15), 
  2609 ;;  i2c_data_1      1   27[COMRAM] unsigned char 
  2610 ;;  i2c_data_2      1   28[COMRAM] unsigned char 
  2611 ;;  ret_data        1   29[COMRAM] PTR unsigned char 
  2612 ;;		 -> tc74(1), 
  2613 ;;  _ack            1   30[COMRAM] PTR unsigned char 
  2614 ;;		 -> i2c_ack(1), 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2626 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;Total ram usage:        6 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 6
  2633 ;; This function calls:
  2634 ;;		_MSSP_I2C_Master_Send_Start
  2635 ;;		_MSSP_I2C_Master_Send_Stop
  2636 ;;		_MSSP_I2C_Master_read_data_in_register
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text2
  2643   005264                     __ptext2:
  2644                           	callstack 0
  2645   005264                     _tc74_read_value:
  2646                           	callstack 24
  2647   005264                     
  2648                           ;ECU_layer/TC74/hal_tc74.c: 13:     MSSP_I2C_Master_Send_Start(i2c_obj);
  2649   005264  C01A  F00D         	movff	tc74_read_value@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  2650   005268  C01B  F00E         	movff	tc74_read_value@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  2651   00526C  EC6A  F029         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  2652   005270                     
  2653                           ;ECU_layer/TC74/hal_tc74.c: 14:     MSSP_I2C_Master_read_data_in_register(i2c_obj,i2c_da
      +                          ta_1,i2c_data_2,ret_data,_ack);
  2654   005270  C01A  F012         	movff	tc74_read_value@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  2655   005274  C01B  F013         	movff	tc74_read_value@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  2656   005278  C01C  F014         	movff	tc74_read_value@i2c_data_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  2657   00527C  C01D  F015         	movff	tc74_read_value@i2c_data_2,MSSP_I2C_Master_read_data_in_register@i2c_data_2
  2658   005280  C01E  F016         	movff	tc74_read_value@ret_data,MSSP_I2C_Master_read_data_in_register@ret_data
  2659   005284  6A17               	clrf	(MSSP_I2C_Master_read_data_in_register@ret_data+1)^0,c
  2660   005286  C01F  F018         	movff	tc74_read_value@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  2661   00528A  EC4D  F023         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  2662   00528E                     
  2663                           ;ECU_layer/TC74/hal_tc74.c: 15:     MSSP_I2C_Master_Send_Stop(i2c_obj);
  2664   00528E  C01A  F00D         	movff	tc74_read_value@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  2665   005292  C01B  F00E         	movff	tc74_read_value@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  2666   005296  EC4E  F029         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  2667   00529A  0012               	return		;funcret
  2668   00529C                     __end_of_tc74_read_value:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _sprintf *****************
  2672 ;; Defined at:
  2673 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  s               1   37[COMRAM] PTR unsigned char 
  2676 ;;		 -> convert_uint16_to_string@Temp_String(6), mes(5), 
  2677 ;;  fmt             1   38[COMRAM] PTR const unsigned char 
  2678 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(3), 
  2679 ;;		 -> STR_15(3), STR_14(3), STR_11(3), STR_3(3), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  f              12   44[COMRAM] struct _IO_FILE
  2682 ;;  ret             2    0        int 
  2683 ;;  ap              1   43[COMRAM] PTR void [1]
  2684 ;;		 -> ?_sprintf(2), 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  2   37[COMRAM] int 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:       19 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 8
  2701 ;; This function calls:
  2702 ;;		_vfprintf
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;;		_convert_uint8_to_string
  2706 ;;		_convert_uint16_to_string
  2707 ;;		_convert_uint32_to_string
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text3
  2712   005344                     __ptext3:
  2713                           	callstack 0
  2714   005344                     _sprintf:
  2715                           	callstack 22
  2716   005344  0E28               	movlw	low (?_sprintf+2)
  2717   005346  6E2C               	movwf	sprintf@ap^0,c
  2718   005348  C026  F02D         	movff	sprintf@s,sprintf@f
  2719   00534C  0E00               	movlw	0
  2720   00534E  6E31               	movwf	(sprintf@f+4)^0,c
  2721   005350  0E00               	movlw	0
  2722   005352  6E30               	movwf	(sprintf@f+3)^0,c
  2723   005354  0E00               	movlw	0
  2724   005356  6E38               	movwf	(sprintf@f+11)^0,c
  2725   005358  0E00               	movlw	0
  2726   00535A  6E37               	movwf	(sprintf@f+10)^0,c
  2727   00535C  0E2D               	movlw	low sprintf@f
  2728   00535E  6E22               	movwf	vfprintf@fp^0,c
  2729   005360  C027  F023         	movff	sprintf@fmt,vfprintf@fmt
  2730   005364  0E2C               	movlw	low sprintf@ap
  2731   005366  6E24               	movwf	vfprintf@ap^0,c
  2732   005368  EC9C  F028         	call	_vfprintf	;wreg free
  2733   00536C  5026               	movf	sprintf@s^0,w,c
  2734   00536E  2430               	addwf	(sprintf@f+3)^0,w,c
  2735   005370  6ED9               	movwf	fsr2l,c
  2736   005372  6ADA               	clrf	fsr2h,c
  2737   005374  6ADF               	clrf	indf2,c
  2738   005376  0012               	return		;funcret
  2739   005378                     __end_of_sprintf:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _vfprintf *****************
  2743 ;; Defined at:
  2744 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  2747 ;;		 -> sprintf@f(12), 
  2748 ;;  fmt             1   34[COMRAM] PTR const unsigned char 
  2749 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(3), 
  2750 ;;		 -> STR_15(3), STR_14(3), STR_11(3), STR_3(3), 
  2751 ;;  ap              1   35[COMRAM] PTR PTR void 
  2752 ;;		 -> sprintf@ap(1), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  cfmt            1   36[COMRAM] PTR unsigned char 
  2755 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(3), 
  2756 ;;		 -> STR_15(3), STR_14(3), STR_11(3), STR_3(3), 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  2   33[COMRAM] int 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;Total ram usage:        4 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 7
  2773 ;; This function calls:
  2774 ;;		_vfpfcnvrt
  2775 ;; This function is called by:
  2776 ;;		_sprintf
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text4
  2781   005138                     __ptext4:
  2782                           	callstack 0
  2783   005138                     _vfprintf:
  2784                           	callstack 22
  2785   005138                     
  2786                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2787   005138  C023  F025         	movff	vfprintf@fmt,vfprintf@cfmt
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2790   00513C  EFA8  F028         	goto	l11330
  2791   005140                     l11328:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2794   005140  C022  F017         	movff	vfprintf@fp,vfpfcnvrt@fp
  2795   005144  0E25               	movlw	low vfprintf@cfmt
  2796   005146  6E18               	movwf	vfpfcnvrt@fmt^0,c
  2797   005148  C024  F019         	movff	vfprintf@ap,vfpfcnvrt@ap
  2798   00514C  ECE2  F015         	call	_vfpfcnvrt	;wreg free
  2799   005150                     l11330:
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2802   005150  C025  FFF6         	movff	vfprintf@cfmt,tblptrl
  2803   005154                     	if	1	;There is more than 1 active tblptr byte
  2804   005154  0E10               	movlw	high __smallconst
  2805   005156  6EF7               	movwf	tblptrh,c
  2806   005158                     	endif
  2807   005158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2808   005158  6AF8               	clrf	tblptru,c
  2809   00515A                     	endif
  2810   00515A                     	if	0	;tblptru may be non-zero
  2811   00515A                     	endif
  2812   00515A  0008               	tblrd		*
  2813   00515C  50F5               	movf	tablat,w,c
  2814   00515E  0900               	iorlw	0
  2815   005160  A4D8               	btfss	status,2,c
  2816   005162  EFB5  F028         	goto	u11521
  2817   005166  EFB7  F028         	goto	u11520
  2818   00516A                     u11521:
  2819   00516A  EFA0  F028         	goto	l11328
  2820   00516E                     u11520:
  2821   00516E                     
  2822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2823   00516E  0E00               	movlw	0
  2824   005170  6E23               	movwf	(?_vfprintf+1)^0,c
  2825   005172  0E00               	movlw	0
  2826   005174  6E22               	movwf	?_vfprintf^0,c
  2827   005176  0012               	return		;funcret
  2828   005178                     __end_of_vfprintf:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _vfpfcnvrt *****************
  2832 ;; Defined at:
  2833 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  2836 ;;		 -> sprintf@f(12), 
  2837 ;;  fmt             1   23[COMRAM] PTR PTR unsigned char 
  2838 ;;		 -> vfprintf@cfmt(1), 
  2839 ;;  ap              1   24[COMRAM] PTR PTR void 
  2840 ;;		 -> sprintf@ap(1), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  convarg         4   28[COMRAM] struct .
  2843 ;;  c               1   32[COMRAM] unsigned char 
  2844 ;;  cp              1   27[COMRAM] PTR unsigned char 
  2845 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(3), 
  2846 ;;		 -> STR_15(3), STR_14(3), STR_11(3), STR_3(3), 
  2847 ;;  done            1   26[COMRAM] _Bool 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2857 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;Total ram usage:       11 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 6
  2864 ;; This function calls:
  2865 ;;		___awdiv
  2866 ;;		___awmod
  2867 ;;		_abs
  2868 ;;		_fputc
  2869 ;; This function is called by:
  2870 ;;		_vfprintf
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text5
  2875   002BC4                     __ptext5:
  2876                           	callstack 0
  2877   002BC4                     _vfpfcnvrt:
  2878                           	callstack 22
  2879   002BC4                     
  2880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2881   002BC4  5018               	movf	vfpfcnvrt@fmt^0,w,c
  2882   002BC6  6ED9               	movwf	fsr2l,c
  2883   002BC8  6ADA               	clrf	fsr2h,c
  2884   002BCA  CFDF FFF6          	movff	indf2,tblptrl
  2885   002BCE                     	if	1	;There is more than 1 active tblptr byte
  2886   002BCE  0E10               	movlw	high __smallconst
  2887   002BD0  6EF7               	movwf	tblptrh,c
  2888   002BD2                     	endif
  2889   002BD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2890   002BD2  6AF8               	clrf	tblptru,c
  2891   002BD4                     	endif
  2892   002BD4                     	if	0	;tblptru may be non-zero
  2893   002BD4                     	endif
  2894   002BD4  0008               	tblrd		*
  2895   002BD6  50F5               	movf	tablat,w,c
  2896   002BD8  0A25               	xorlw	37
  2897   002BDA  A4D8               	btfss	status,2,c
  2898   002BDC  EFF2  F015         	goto	u10741
  2899   002BE0  EFF4  F015         	goto	u10740
  2900   002BE4                     u10741:
  2901   002BE4  EFB6  F016         	goto	l10728
  2902   002BE8                     u10740:
  2903   002BE8                     
  2904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2905   002BE8  5018               	movf	vfpfcnvrt@fmt^0,w,c
  2906   002BEA  6ED9               	movwf	fsr2l,c
  2907   002BEC  6ADA               	clrf	fsr2h,c
  2908   002BEE  2ADF               	incf	indf2,f,c
  2909   002BF0                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2911   002BF0  0E00               	movlw	0
  2912   002BF2  0100               	movlb	0	; () banked
  2913   002BF4  6F81               	movwf	(_width+1)& (0+255),b
  2914   002BF6  0E00               	movlw	0
  2915   002BF8  6F80               	movwf	_width& (0+255),b
  2916   002BFA  C080  F0BE         	movff	_width,_flags
  2917   002BFE                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2920   002BFE  6982               	setf	_prec& (0+255),b
  2921   002C00  6983               	setf	(_prec+1)& (0+255),b
  2922   002C02                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2925   002C02  5018               	movf	vfpfcnvrt@fmt^0,w,c
  2926   002C04  6ED9               	movwf	fsr2l,c
  2927   002C06  6ADA               	clrf	fsr2h,c
  2928   002C08  50DF               	movf	indf2,w,c
  2929   002C0A  6E1C               	movwf	vfpfcnvrt@cp^0,c
  2930   002C0C                     
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2933   002C0C  C01C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2934   002C10                     	if	1	;There is more than 1 active tblptr byte
  2935   002C10  0E10               	movlw	high __smallconst
  2936   002C12  6EF7               	movwf	tblptrh,c
  2937   002C14                     	endif
  2938   002C14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2939   002C14  6AF8               	clrf	tblptru,c
  2940   002C16                     	endif
  2941   002C16                     	if	0	;tblptru may be non-zero
  2942   002C16                     	endif
  2943   002C16  0008               	tblrd		*
  2944   002C18  50F5               	movf	tablat,w,c
  2945   002C1A  0A64               	xorlw	100
  2946   002C1C  B4D8               	btfsc	status,2,c
  2947   002C1E  EF13  F016         	goto	u10751
  2948   002C22  EF15  F016         	goto	u10750
  2949   002C26                     u10751:
  2950   002C26  EF24  F016         	goto	l10698
  2951   002C2A                     u10750:
  2952   002C2A                     
  2953                           ; BSR set to: 0
  2954   002C2A  C01C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2955   002C2E                     	if	1	;There is more than 1 active tblptr byte
  2956   002C2E  0E10               	movlw	high __smallconst
  2957   002C30  6EF7               	movwf	tblptrh,c
  2958   002C32                     	endif
  2959   002C32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2960   002C32  6AF8               	clrf	tblptru,c
  2961   002C34                     	endif
  2962   002C34                     	if	0	;tblptru may be non-zero
  2963   002C34                     	endif
  2964   002C34  0008               	tblrd		*
  2965   002C36  50F5               	movf	tablat,w,c
  2966   002C38  0A69               	xorlw	105
  2967   002C3A  A4D8               	btfss	status,2,c
  2968   002C3C  EF22  F016         	goto	u10761
  2969   002C40  EF24  F016         	goto	u10760
  2970   002C44                     u10761:
  2971   002C44  EFB0  F016         	goto	l10724
  2972   002C48                     u10760:
  2973   002C48                     l10698:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2977   002C48  5019               	movf	vfpfcnvrt@ap^0,w,c
  2978   002C4A  6ED9               	movwf	fsr2l,c
  2979   002C4C  6ADA               	clrf	fsr2h,c
  2980   002C4E  0E02               	movlw	2
  2981   002C50  26DF               	addwf	indf2,f,c
  2982   002C52  5CDF               	subwf	indf2,w,c
  2983   002C54  6ED9               	movwf	fsr2l,c
  2984   002C56  6ADA               	clrf	fsr2h,c
  2985   002C58  CFDE F01D          	movff	postinc2,vfpfcnvrt@convarg
  2986   002C5C  CFDE F01E          	movff	postinc2,vfpfcnvrt@convarg+1
  2987   002C60                     
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2990   002C60  5018               	movf	vfpfcnvrt@fmt^0,w,c
  2991   002C62  6ED9               	movwf	fsr2l,c
  2992   002C64  6ADA               	clrf	fsr2h,c
  2993   002C66  281C               	incf	vfpfcnvrt@cp^0,w,c
  2994   002C68  6EDF               	movwf	indf2,c
  2995   002C6A                     
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2998   002C6A  0E20               	movlw	32
  2999   002C6C  6E21               	movwf	vfpfcnvrt@c^0,c
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3002   002C6E  BE1E               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3003   002C70  EF3C  F016         	goto	u10771
  3004   002C74  EF3F  F016         	goto	u10770
  3005   002C78                     u10771:
  3006   002C78  0E01               	movlw	1
  3007   002C7A  EF40  F016         	goto	u10780
  3008   002C7E                     u10770:
  3009   002C7E  0E00               	movlw	0
  3010   002C80                     u10780:
  3011   002C80  6E1B               	movwf	vfpfcnvrt@done^0,c
  3012   002C82                     l10704:
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3015   002C82  0621               	decf	vfpfcnvrt@c^0,f,c
  3016   002C84  0E59               	movlw	low _dbuf
  3017   002C86  2421               	addwf	vfpfcnvrt@c^0,w,c
  3018   002C88  6ED9               	movwf	fsr2l,c
  3019   002C8A  6ADA               	clrf	fsr2h,c
  3020   002C8C  0E01               	movlw	high _dbuf
  3021   002C8E  22DA               	addwfc	fsr2h,f,c
  3022   002C90  C01D  F00D         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3023   002C94  C01E  F00E         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3024   002C98  0E00               	movlw	0
  3025   002C9A  6E10               	movwf	(___awmod@divisor+1)^0,c
  3026   002C9C  0E0A               	movlw	10
  3027   002C9E  6E0F               	movwf	___awmod@divisor^0,c
  3028   002CA0  EC0F  F021         	call	___awmod	;wreg free
  3029   002CA4  C00D  F013         	movff	?___awmod,abs@a
  3030   002CA8  C00E  F014         	movff	?___awmod+1,abs@a+1
  3031   002CAC  ECBC  F029         	call	_abs	;wreg free
  3032   002CB0  5013               	movf	?_abs^0,w,c
  3033   002CB2  0F30               	addlw	48
  3034   002CB4  6EDF               	movwf	indf2,c
  3035   002CB6                     
  3036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3037   002CB6  C01D  F00D         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3038   002CBA  C01E  F00E         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3039   002CBE  0E00               	movlw	0
  3040   002CC0  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3041   002CC2  0E0A               	movlw	10
  3042   002CC4  6E0F               	movwf	___awdiv@divisor^0,c
  3043   002CC6  EC95  F01F         	call	___awdiv	;wreg free
  3044   002CCA  C00D  F01D         	movff	?___awdiv,vfpfcnvrt@convarg
  3045   002CCE  C00E  F01E         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3046   002CD2                     
  3047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3048   002CD2  501D               	movf	vfpfcnvrt@convarg^0,w,c
  3049   002CD4  101E               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3050   002CD6  B4D8               	btfsc	status,2,c
  3051   002CD8  EF70  F016         	goto	u10791
  3052   002CDC  EF72  F016         	goto	u10790
  3053   002CE0                     u10791:
  3054   002CE0  EF7A  F016         	goto	l10712
  3055   002CE4                     u10790:
  3056   002CE4  5021               	movf	vfpfcnvrt@c^0,w,c
  3057   002CE6  A4D8               	btfss	status,2,c
  3058   002CE8  EF78  F016         	goto	u10801
  3059   002CEC  EF7A  F016         	goto	u10800
  3060   002CF0                     u10801:
  3061   002CF0  EF41  F016         	goto	l10704
  3062   002CF4                     u10800:
  3063   002CF4                     l10712:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3066   002CF4  5021               	movf	vfpfcnvrt@c^0,w,c
  3067   002CF6  B4D8               	btfsc	status,2,c
  3068   002CF8  EF80  F016         	goto	u10811
  3069   002CFC  EF82  F016         	goto	u10810
  3070   002D00                     u10811:
  3071   002D00  EFA5  F016         	goto	l10722
  3072   002D04                     u10810:
  3073   002D04  501B               	movf	vfpfcnvrt@done^0,w,c
  3074   002D06  B4D8               	btfsc	status,2,c
  3075   002D08  EF88  F016         	goto	u10821
  3076   002D0C  EF8A  F016         	goto	u10820
  3077   002D10                     u10821:
  3078   002D10  EFA5  F016         	goto	l10722
  3079   002D14                     u10820:
  3080   002D14                     
  3081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3082   002D14  0621               	decf	vfpfcnvrt@c^0,f,c
  3083   002D16  0E59               	movlw	low _dbuf
  3084   002D18  2421               	addwf	vfpfcnvrt@c^0,w,c
  3085   002D1A  6ED9               	movwf	fsr2l,c
  3086   002D1C  6ADA               	clrf	fsr2h,c
  3087   002D1E  0E01               	movlw	high _dbuf
  3088   002D20  22DA               	addwfc	fsr2h,f,c
  3089   002D22  0E2D               	movlw	45
  3090   002D24  6EDF               	movwf	indf2,c
  3091   002D26  EFA5  F016         	goto	l10722
  3092   002D2A                     l10718:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3095   002D2A  0E59               	movlw	low _dbuf
  3096   002D2C  2421               	addwf	vfpfcnvrt@c^0,w,c
  3097   002D2E  6ED9               	movwf	fsr2l,c
  3098   002D30  6ADA               	clrf	fsr2h,c
  3099   002D32  0E01               	movlw	high _dbuf
  3100   002D34  22DA               	addwfc	fsr2h,f,c
  3101   002D36  50DF               	movf	indf2,w,c
  3102   002D38  6E1A               	movwf	??_vfpfcnvrt^0,c
  3103   002D3A  501A               	movf	??_vfpfcnvrt^0,w,c
  3104   002D3C  6E0D               	movwf	fputc@c^0,c
  3105   002D3E  6A0E               	clrf	(fputc@c+1)^0,c
  3106   002D40  C017  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  3107   002D44  ECBD  F021         	call	_fputc	;wreg free
  3108   002D48  2A21               	incf	vfpfcnvrt@c^0,f,c
  3109   002D4A                     l10722:
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3112   002D4A  0E20               	movlw	32
  3113   002D4C  1821               	xorwf	vfpfcnvrt@c^0,w,c
  3114   002D4E  A4D8               	btfss	status,2,c
  3115   002D50  EFAC  F016         	goto	u10831
  3116   002D54  EFAE  F016         	goto	u10830
  3117   002D58                     u10831:
  3118   002D58  EF95  F016         	goto	l10718
  3119   002D5C                     u10830:
  3120   002D5C  EFC8  F016         	goto	l2488
  3121   002D60                     l10724:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3124   002D60  5018               	movf	vfpfcnvrt@fmt^0,w,c
  3125   002D62  6ED9               	movwf	fsr2l,c
  3126   002D64  6ADA               	clrf	fsr2h,c
  3127   002D66  2ADF               	incf	indf2,f,c
  3128   002D68  EFC8  F016         	goto	l2488
  3129   002D6C                     l10728:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3132   002D6C  5018               	movf	vfpfcnvrt@fmt^0,w,c
  3133   002D6E  6ED9               	movwf	fsr2l,c
  3134   002D70  6ADA               	clrf	fsr2h,c
  3135   002D72  CFDF FFF6          	movff	indf2,tblptrl
  3136   002D76                     	if	1	;There is more than 1 active tblptr byte
  3137   002D76  0E10               	movlw	high __smallconst
  3138   002D78  6EF7               	movwf	tblptrh,c
  3139   002D7A                     	endif
  3140   002D7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3141   002D7A  6AF8               	clrf	tblptru,c
  3142   002D7C                     	endif
  3143   002D7C                     	if	0	;tblptru may be non-zero
  3144   002D7C                     	endif
  3145   002D7C  0008               	tblrd		*
  3146   002D7E  50F5               	movf	tablat,w,c
  3147   002D80  6E0D               	movwf	fputc@c^0,c
  3148   002D82  6A0E               	clrf	(fputc@c+1)^0,c
  3149   002D84  C017  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  3150   002D88  ECBD  F021         	call	_fputc	;wreg free
  3151   002D8C  EFB0  F016         	goto	l10724
  3152   002D90                     l2488:
  3153   002D90  0012               	return		;funcret
  3154   002D92                     __end_of_vfpfcnvrt:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _fputc *****************
  3158 ;; Defined at:
  3159 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  c               2   12[COMRAM] int 
  3162 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3163 ;;		 -> sprintf@f(12), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2   12[COMRAM] int 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3175 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;Total ram usage:        8 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 5
  3182 ;; This function calls:
  3183 ;;		_putch
  3184 ;; This function is called by:
  3185 ;;		_vfpfcnvrt
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text6
  3190   00437A                     __ptext6:
  3191                           	callstack 0
  3192   00437A                     _fputc:
  3193                           	callstack 22
  3194   00437A  500F               	movf	fputc@fp^0,w,c
  3195   00437C  B4D8               	btfsc	status,2,c
  3196   00437E  EFC3  F021         	goto	u10221
  3197   004382  EFC5  F021         	goto	u10220
  3198   004386                     u10221:
  3199   004386  EFCD  F021         	goto	l10256
  3200   00438A                     u10220:
  3201   00438A  500F               	movf	fputc@fp^0,w,c
  3202   00438C  A4D8               	btfss	status,2,c
  3203   00438E  EFCB  F021         	goto	u10231
  3204   004392  EFCD  F021         	goto	u10230
  3205   004396                     u10231:
  3206   004396  EFD2  F021         	goto	l10258
  3207   00439A                     u10230:
  3208   00439A                     l10256:
  3209   00439A  500D               	movf	fputc@c^0,w,c
  3210   00439C  EC69  F02B         	call	_putch
  3211   0043A0  EF11  F022         	goto	l2513
  3212   0043A4                     l10258:
  3213   0043A4  500F               	movf	fputc@fp^0,w,c
  3214   0043A6  6ED9               	movwf	fsr2l,c
  3215   0043A8  6ADA               	clrf	fsr2h,c
  3216   0043AA  0E0A               	movlw	10
  3217   0043AC  26D9               	addwf	fsr2l,f,c
  3218   0043AE  50DE               	movf	postinc2,w,c
  3219   0043B0  10DE               	iorwf	postinc2,w,c
  3220   0043B2  B4D8               	btfsc	status,2,c
  3221   0043B4  EFDE  F021         	goto	u10241
  3222   0043B8  EFE0  F021         	goto	u10240
  3223   0043BC                     u10241:
  3224   0043BC  EFF9  F021         	goto	l10262
  3225   0043C0                     u10240:
  3226   0043C0  500F               	movf	fputc@fp^0,w,c
  3227   0043C2  6ED9               	movwf	fsr2l,c
  3228   0043C4  6ADA               	clrf	fsr2h,c
  3229   0043C6  0E0A               	movlw	10
  3230   0043C8  26D9               	addwf	fsr2l,f,c
  3231   0043CA  500F               	movf	fputc@fp^0,w,c
  3232   0043CC  6EE1               	movwf	fsr1l,c
  3233   0043CE  6AE2               	clrf	fsr1h,c
  3234   0043D0  0E03               	movlw	3
  3235   0043D2  26E1               	addwf	fsr1l,f,c
  3236   0043D4  50DE               	movf	postinc2,w,c
  3237   0043D6  5CE6               	subwf	postinc1,w,c
  3238   0043D8  50E6               	movf	postinc1,w,c
  3239   0043DA  0A80               	xorlw	128
  3240   0043DC  6E14               	movwf	(??_fputc+4)^0,c
  3241   0043DE  50DE               	movf	postinc2,w,c
  3242   0043E0  0A80               	xorlw	128
  3243   0043E2  5814               	subwfb	(??_fputc+4)^0,w,c
  3244   0043E4  B0D8               	btfsc	status,0,c
  3245   0043E6  EFF7  F021         	goto	u10251
  3246   0043EA  EFF9  F021         	goto	u10250
  3247   0043EE                     u10251:
  3248   0043EE  EF11  F022         	goto	l2513
  3249   0043F2                     u10250:
  3250   0043F2                     l10262:
  3251   0043F2  500F               	movf	fputc@fp^0,w,c
  3252   0043F4  6ED9               	movwf	fsr2l,c
  3253   0043F6  6ADA               	clrf	fsr2h,c
  3254   0043F8  0E03               	movlw	3
  3255   0043FA  26D9               	addwf	fsr2l,f,c
  3256   0043FC  50DF               	movf	indf2,w,c
  3257   0043FE  6E10               	movwf	??_fputc^0,c
  3258   004400  500F               	movf	fputc@fp^0,w,c
  3259   004402  6ED9               	movwf	fsr2l,c
  3260   004404  6ADA               	clrf	fsr2h,c
  3261   004406  50DF               	movf	indf2,w,c
  3262   004408  2410               	addwf	??_fputc^0,w,c
  3263   00440A  6ED9               	movwf	fsr2l,c
  3264   00440C  6ADA               	clrf	fsr2h,c
  3265   00440E  C00D  FFDF         	movff	fputc@c,indf2
  3266   004412  500F               	movf	fputc@fp^0,w,c
  3267   004414  6ED9               	movwf	fsr2l,c
  3268   004416  6ADA               	clrf	fsr2h,c
  3269   004418  0E03               	movlw	3
  3270   00441A  26D9               	addwf	fsr2l,f,c
  3271   00441C  2ADE               	incf	postinc2,f,c
  3272   00441E  0E00               	movlw	0
  3273   004420  22DD               	addwfc	postdec2,f,c
  3274   004422                     l2513:
  3275   004422  0012               	return		;funcret
  3276   004424                     __end_of_fputc:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _putch *****************
  3280 ;; Defined at:
  3281 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  c               1    wreg     unsigned char 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  c               1    0[COMRAM] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 4
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_fputc
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text7
  3310   0056D2                     __ptext7:
  3311                           	callstack 0
  3312   0056D2                     _putch:
  3313                           	callstack 22
  3314   0056D2  0012               	return		;funcret
  3315   0056D4                     __end_of_putch:
  3316                           	callstack 0
  3317                           
  3318 ;; *************** function _abs *****************
  3319 ;; Defined at:
  3320 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  a               2   18[COMRAM] int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  2   18[COMRAM] int 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        4 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 4
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_vfpfcnvrt
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text8
  3349   005378                     __ptext8:
  3350                           	callstack 0
  3351   005378                     _abs:
  3352                           	callstack 23
  3353   005378  BE14               	btfsc	(abs@a+1)^0,7,c
  3354   00537A  EFC1  F029         	goto	u10261
  3355   00537E  EFC3  F029         	goto	u10260
  3356   005382                     u10261:
  3357   005382  EFC9  F029         	goto	l2498
  3358   005386                     u10260:
  3359   005386  C013  F013         	movff	abs@a,?_abs
  3360   00538A  C014  F014         	movff	abs@a+1,?_abs+1
  3361   00538E  EFD5  F029         	goto	l2501
  3362   005392                     l2498:
  3363   005392  C013  F015         	movff	abs@a,??_abs
  3364   005396  C014  F016         	movff	abs@a+1,??_abs+1
  3365   00539A  1E15               	comf	??_abs^0,f,c
  3366   00539C  1E16               	comf	(??_abs+1)^0,f,c
  3367   00539E  4A15               	infsnz	??_abs^0,f,c
  3368   0053A0  2A16               	incf	(??_abs+1)^0,f,c
  3369   0053A2  C015  F013         	movff	??_abs,?_abs
  3370   0053A6  C016  F014         	movff	??_abs+1,?_abs+1
  3371   0053AA                     l2501:
  3372   0053AA  0012               	return		;funcret
  3373   0053AC                     __end_of_abs:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function ___awmod *****************
  3377 ;; Defined at:
  3378 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  dividend        2   12[COMRAM] int 
  3381 ;;  divisor         2   14[COMRAM] int 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  sign            1   17[COMRAM] unsigned char 
  3384 ;;  counter         1   16[COMRAM] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  2   12[COMRAM] int 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        6 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 4
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_vfpfcnvrt
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text9
  3409   00421E                     __ptext9:
  3410                           	callstack 0
  3411   00421E                     ___awmod:
  3412                           	callstack 23
  3413   00421E  0E00               	movlw	0
  3414   004220  6E12               	movwf	___awmod@sign^0,c
  3415   004222  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  3416   004224  EF18  F021         	goto	u9990
  3417   004228  EF16  F021         	goto	u9991
  3418   00422C                     u9991:
  3419   00422C  EF1E  F021         	goto	l10134
  3420   004230                     u9990:
  3421   004230  6C0D               	negf	___awmod@dividend^0,c
  3422   004232  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3423   004234  B0D8               	btfsc	status,0,c
  3424   004236  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3425   004238  0E01               	movlw	1
  3426   00423A  6E12               	movwf	___awmod@sign^0,c
  3427   00423C                     l10134:
  3428   00423C  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  3429   00423E  EF25  F021         	goto	u10000
  3430   004242  EF23  F021         	goto	u10001
  3431   004246                     u10001:
  3432   004246  EF29  F021         	goto	l10138
  3433   00424A                     u10000:
  3434   00424A  6C0F               	negf	___awmod@divisor^0,c
  3435   00424C  1E10               	comf	(___awmod@divisor+1)^0,f,c
  3436   00424E  B0D8               	btfsc	status,0,c
  3437   004250  2A10               	incf	(___awmod@divisor+1)^0,f,c
  3438   004252                     l10138:
  3439   004252  500F               	movf	___awmod@divisor^0,w,c
  3440   004254  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  3441   004256  B4D8               	btfsc	status,2,c
  3442   004258  EF30  F021         	goto	u10011
  3443   00425C  EF32  F021         	goto	u10010
  3444   004260                     u10011:
  3445   004260  EF56  F021         	goto	l10154
  3446   004264                     u10010:
  3447   004264  0E01               	movlw	1
  3448   004266  6E11               	movwf	___awmod@counter^0,c
  3449   004268  EF3A  F021         	goto	l10144
  3450   00426C                     l10142:
  3451   00426C  90D8               	bcf	status,0,c
  3452   00426E  360F               	rlcf	___awmod@divisor^0,f,c
  3453   004270  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  3454   004272  2A11               	incf	___awmod@counter^0,f,c
  3455   004274                     l10144:
  3456   004274  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  3457   004276  EF3F  F021         	goto	u10021
  3458   00427A  EF41  F021         	goto	u10020
  3459   00427E                     u10021:
  3460   00427E  EF36  F021         	goto	l10142
  3461   004282                     u10020:
  3462   004282                     l10146:
  3463   004282  500F               	movf	___awmod@divisor^0,w,c
  3464   004284  5C0D               	subwf	___awmod@dividend^0,w,c
  3465   004286  5010               	movf	(___awmod@divisor+1)^0,w,c
  3466   004288  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  3467   00428A  A0D8               	btfss	status,0,c
  3468   00428C  EF4A  F021         	goto	u10031
  3469   004290  EF4C  F021         	goto	u10030
  3470   004294                     u10031:
  3471   004294  EF50  F021         	goto	l10150
  3472   004298                     u10030:
  3473   004298  500F               	movf	___awmod@divisor^0,w,c
  3474   00429A  5E0D               	subwf	___awmod@dividend^0,f,c
  3475   00429C  5010               	movf	(___awmod@divisor+1)^0,w,c
  3476   00429E  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  3477   0042A0                     l10150:
  3478   0042A0  90D8               	bcf	status,0,c
  3479   0042A2  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  3480   0042A4  320F               	rrcf	___awmod@divisor^0,f,c
  3481   0042A6  2E11               	decfsz	___awmod@counter^0,f,c
  3482   0042A8  EF41  F021         	goto	l10146
  3483   0042AC                     l10154:
  3484   0042AC  5012               	movf	___awmod@sign^0,w,c
  3485   0042AE  B4D8               	btfsc	status,2,c
  3486   0042B0  EF5C  F021         	goto	u10041
  3487   0042B4  EF5E  F021         	goto	u10040
  3488   0042B8                     u10041:
  3489   0042B8  EF62  F021         	goto	l10158
  3490   0042BC                     u10040:
  3491   0042BC  6C0D               	negf	___awmod@dividend^0,c
  3492   0042BE  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  3493   0042C0  B0D8               	btfsc	status,0,c
  3494   0042C2  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  3495   0042C4                     l10158:
  3496   0042C4  C00D  F00D         	movff	___awmod@dividend,?___awmod
  3497   0042C8  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  3498   0042CC  0012               	return		;funcret
  3499   0042CE                     __end_of___awmod:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function ___awdiv *****************
  3503 ;; Defined at:
  3504 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  dividend        2   12[COMRAM] int 
  3507 ;;  divisor         2   14[COMRAM] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  quotient        2   18[COMRAM] int 
  3510 ;;  sign            1   17[COMRAM] unsigned char 
  3511 ;;  counter         1   16[COMRAM] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2   12[COMRAM] int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        8 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 4
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_vfpfcnvrt
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text10
  3536   003F2A                     __ptext10:
  3537                           	callstack 0
  3538   003F2A                     ___awdiv:
  3539                           	callstack 23
  3540   003F2A  0E00               	movlw	0
  3541   003F2C  6E12               	movwf	___awdiv@sign^0,c
  3542   003F2E  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  3543   003F30  EF9E  F01F         	goto	u9930
  3544   003F34  EF9C  F01F         	goto	u9931
  3545   003F38                     u9931:
  3546   003F38  EFA4  F01F         	goto	l10090
  3547   003F3C                     u9930:
  3548   003F3C  6C0F               	negf	___awdiv@divisor^0,c
  3549   003F3E  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  3550   003F40  B0D8               	btfsc	status,0,c
  3551   003F42  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  3552   003F44  0E01               	movlw	1
  3553   003F46  6E12               	movwf	___awdiv@sign^0,c
  3554   003F48                     l10090:
  3555   003F48  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  3556   003F4A  EFAB  F01F         	goto	u9940
  3557   003F4E  EFA9  F01F         	goto	u9941
  3558   003F52                     u9941:
  3559   003F52  EFB1  F01F         	goto	l10096
  3560   003F56                     u9940:
  3561   003F56  6C0D               	negf	___awdiv@dividend^0,c
  3562   003F58  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  3563   003F5A  B0D8               	btfsc	status,0,c
  3564   003F5C  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  3565   003F5E  0E01               	movlw	1
  3566   003F60  1A12               	xorwf	___awdiv@sign^0,f,c
  3567   003F62                     l10096:
  3568   003F62  0E00               	movlw	0
  3569   003F64  6E14               	movwf	(___awdiv@quotient+1)^0,c
  3570   003F66  0E00               	movlw	0
  3571   003F68  6E13               	movwf	___awdiv@quotient^0,c
  3572   003F6A  500F               	movf	___awdiv@divisor^0,w,c
  3573   003F6C  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  3574   003F6E  B4D8               	btfsc	status,2,c
  3575   003F70  EFBC  F01F         	goto	u9951
  3576   003F74  EFBE  F01F         	goto	u9950
  3577   003F78                     u9951:
  3578   003F78  EFE6  F01F         	goto	l10118
  3579   003F7C                     u9950:
  3580   003F7C  0E01               	movlw	1
  3581   003F7E  6E11               	movwf	___awdiv@counter^0,c
  3582   003F80  EFC6  F01F         	goto	l10104
  3583   003F84                     l10102:
  3584   003F84  90D8               	bcf	status,0,c
  3585   003F86  360F               	rlcf	___awdiv@divisor^0,f,c
  3586   003F88  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  3587   003F8A  2A11               	incf	___awdiv@counter^0,f,c
  3588   003F8C                     l10104:
  3589   003F8C  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  3590   003F8E  EFCB  F01F         	goto	u9961
  3591   003F92  EFCD  F01F         	goto	u9960
  3592   003F96                     u9961:
  3593   003F96  EFC2  F01F         	goto	l10102
  3594   003F9A                     u9960:
  3595   003F9A                     l10106:
  3596   003F9A  90D8               	bcf	status,0,c
  3597   003F9C  3613               	rlcf	___awdiv@quotient^0,f,c
  3598   003F9E  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  3599   003FA0  500F               	movf	___awdiv@divisor^0,w,c
  3600   003FA2  5C0D               	subwf	___awdiv@dividend^0,w,c
  3601   003FA4  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3602   003FA6  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  3603   003FA8  A0D8               	btfss	status,0,c
  3604   003FAA  EFD9  F01F         	goto	u9971
  3605   003FAE  EFDB  F01F         	goto	u9970
  3606   003FB2                     u9971:
  3607   003FB2  EFE0  F01F         	goto	l10114
  3608   003FB6                     u9970:
  3609   003FB6  500F               	movf	___awdiv@divisor^0,w,c
  3610   003FB8  5E0D               	subwf	___awdiv@dividend^0,f,c
  3611   003FBA  5010               	movf	(___awdiv@divisor+1)^0,w,c
  3612   003FBC  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  3613   003FBE  8013               	bsf	___awdiv@quotient^0,0,c
  3614   003FC0                     l10114:
  3615   003FC0  90D8               	bcf	status,0,c
  3616   003FC2  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  3617   003FC4  320F               	rrcf	___awdiv@divisor^0,f,c
  3618   003FC6  2E11               	decfsz	___awdiv@counter^0,f,c
  3619   003FC8  EFCD  F01F         	goto	l10106
  3620   003FCC                     l10118:
  3621   003FCC  5012               	movf	___awdiv@sign^0,w,c
  3622   003FCE  B4D8               	btfsc	status,2,c
  3623   003FD0  EFEC  F01F         	goto	u9981
  3624   003FD4  EFEE  F01F         	goto	u9980
  3625   003FD8                     u9981:
  3626   003FD8  EFF2  F01F         	goto	l10122
  3627   003FDC                     u9980:
  3628   003FDC  6C13               	negf	___awdiv@quotient^0,c
  3629   003FDE  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  3630   003FE0  B0D8               	btfsc	status,0,c
  3631   003FE2  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  3632   003FE4                     l10122:
  3633   003FE4  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  3634   003FE8  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  3635   003FEC  0012               	return		;funcret
  3636   003FEE                     __end_of___awdiv:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function _morot_turn_right *****************
  3640 ;; Defined at:
  3641 ;;		line 20 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  motor_pin       1   21[COMRAM] PTR const struct .
  3644 ;;		 -> motor_1(2), 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  ret             1   23[COMRAM] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      unsigned char 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3656 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;Total ram usage:        3 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 5
  3663 ;; This function calls:
  3664 ;;		_GPIO_pIN_WRITE_LOGIC
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text11
  3671   005028                     __ptext11:
  3672                           	callstack 0
  3673   005028                     _morot_turn_right:
  3674                           	callstack 25
  3675   005028                     
  3676                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 22:     if (((void*)0) == motor_pin){
  3677   005028  5016               	movf	morot_turn_right@motor_pin^0,w,c
  3678   00502A  A4D8               	btfss	status,2,c
  3679   00502C  EF1A  F028         	goto	u11611
  3680   005030  EF1C  F028         	goto	u11610
  3681   005034                     u11611:
  3682   005034  EF20  F028         	goto	l11436
  3683   005038                     u11610:
  3684   005038                     
  3685                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 23:         ret =(Std_ReturnType)0x00;
  3686   005038  0E00               	movlw	0
  3687   00503A  6E18               	movwf	morot_turn_right@ret^0,c
  3688                           
  3689                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 24:     }
  3690   00503C  EF34  F028         	goto	l11438
  3691   005040                     l11436:
  3692                           
  3693                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 26:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 27:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_HIGH);
  3694   005040  C016  F00D         	movff	morot_turn_right@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  3695   005044  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3696   005046  0E01               	movlw	1
  3697   005048  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3698   00504A  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3699   00504E  6E18               	movwf	morot_turn_right@ret^0,c
  3700                           
  3701                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 28:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_LOW);
  3702   005050  C016  F017         	movff	morot_turn_right@motor_pin,??_morot_turn_right
  3703   005054  0E01               	movlw	1
  3704   005056  2617               	addwf	??_morot_turn_right^0,f,c
  3705   005058  C017  F00D         	movff	??_morot_turn_right,GPIO_pIN_WRITE_LOGIC@config_pin
  3706   00505C  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3707   00505E  0E00               	movlw	0
  3708   005060  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3709   005062  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3710   005066  6E18               	movwf	morot_turn_right@ret^0,c
  3711   005068                     l11438:
  3712                           
  3713                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 30:      return ret ;
  3714   005068  5018               	movf	morot_turn_right@ret^0,w,c
  3715   00506A  0012               	return		;funcret
  3716   00506C                     __end_of_morot_turn_right:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _morot_turn_left *****************
  3720 ;; Defined at:
  3721 ;;		line 33 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  motor_pin       1   21[COMRAM] PTR const struct .
  3724 ;;		 -> motor_2(2), 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  ret             1   23[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      unsigned char 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        3 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 5
  3743 ;; This function calls:
  3744 ;;		_GPIO_pIN_WRITE_LOGIC
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text12
  3751   00506C                     __ptext12:
  3752                           	callstack 0
  3753   00506C                     _morot_turn_left:
  3754                           	callstack 25
  3755   00506C                     
  3756                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 35:     if (((void*)0) == motor_pin){
  3757   00506C  5016               	movf	morot_turn_left@motor_pin^0,w,c
  3758   00506E  A4D8               	btfss	status,2,c
  3759   005070  EF3C  F028         	goto	u11601
  3760   005074  EF3E  F028         	goto	u11600
  3761   005078                     u11601:
  3762   005078  EF42  F028         	goto	l11390
  3763   00507C                     u11600:
  3764   00507C                     
  3765                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 36:         ret =(Std_ReturnType)0x00;
  3766   00507C  0E00               	movlw	0
  3767   00507E  6E18               	movwf	morot_turn_left@ret^0,c
  3768                           
  3769                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 37:     }
  3770   005080  EF56  F028         	goto	l11392
  3771   005084                     l11390:
  3772                           
  3773                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 39:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 40:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_LOW);
  3774   005084  C016  F00D         	movff	morot_turn_left@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  3775   005088  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3776   00508A  0E00               	movlw	0
  3777   00508C  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3778   00508E  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3779   005092  6E18               	movwf	morot_turn_left@ret^0,c
  3780                           
  3781                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 41:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_HIGH);
  3782   005094  C016  F017         	movff	morot_turn_left@motor_pin,??_morot_turn_left
  3783   005098  0E01               	movlw	1
  3784   00509A  2617               	addwf	??_morot_turn_left^0,f,c
  3785   00509C  C017  F00D         	movff	??_morot_turn_left,GPIO_pIN_WRITE_LOGIC@config_pin
  3786   0050A0  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3787   0050A2  0E01               	movlw	1
  3788   0050A4  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3789   0050A6  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3790   0050AA  6E18               	movwf	morot_turn_left@ret^0,c
  3791   0050AC                     l11392:
  3792                           
  3793                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 43:     return ret ;
  3794   0050AC  5018               	movf	morot_turn_left@ret^0,w,c
  3795   0050AE  0012               	return		;funcret
  3796   0050B0                     __end_of_morot_turn_left:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _morot_stop *****************
  3800 ;; Defined at:
  3801 ;;		line 46 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  motor_pin       1   21[COMRAM] PTR const struct .
  3804 ;;		 -> motor_1(2), 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  ret             1   23[COMRAM] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      unsigned char 
  3809 ;; Registers used:
  3810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3816 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;Total ram usage:        3 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 5
  3823 ;; This function calls:
  3824 ;;		_GPIO_pIN_WRITE_LOGIC
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text13
  3831   0050B0                     __ptext13:
  3832                           	callstack 0
  3833   0050B0                     _morot_stop:
  3834                           	callstack 25
  3835   0050B0                     
  3836                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 48:     if (((void*)0) == motor_pin){
  3837   0050B0  5016               	movf	morot_stop@motor_pin^0,w,c
  3838   0050B2  A4D8               	btfss	status,2,c
  3839   0050B4  EF5E  F028         	goto	u11621
  3840   0050B8  EF60  F028         	goto	u11620
  3841   0050BC                     u11621:
  3842   0050BC  EF64  F028         	goto	l11464
  3843   0050C0                     u11620:
  3844   0050C0                     
  3845                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 49:         ret =(Std_ReturnType)0x00;
  3846   0050C0  0E00               	movlw	0
  3847   0050C2  6E18               	movwf	morot_stop@ret^0,c
  3848                           
  3849                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 50:     }
  3850   0050C4  EF78  F028         	goto	l11466
  3851   0050C8                     l11464:
  3852                           
  3853                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 52:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 53:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_LOW);
  3854   0050C8  C016  F00D         	movff	morot_stop@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  3855   0050CC  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3856   0050CE  0E00               	movlw	0
  3857   0050D0  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3858   0050D2  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3859   0050D6  6E18               	movwf	morot_stop@ret^0,c
  3860                           
  3861                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 54:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_LOW);
  3862   0050D8  C016  F017         	movff	morot_stop@motor_pin,??_morot_stop
  3863   0050DC  0E01               	movlw	1
  3864   0050DE  2617               	addwf	??_morot_stop^0,f,c
  3865   0050E0  C017  F00D         	movff	??_morot_stop,GPIO_pIN_WRITE_LOGIC@config_pin
  3866   0050E4  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3867   0050E6  0E00               	movlw	0
  3868   0050E8  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3869   0050EA  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3870   0050EE  6E18               	movwf	morot_stop@ret^0,c
  3871   0050F0                     l11466:
  3872                           
  3873                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 56:     return ret ;
  3874   0050F0  5018               	movf	morot_stop@ret^0,w,c
  3875   0050F2  0012               	return		;funcret
  3876   0050F4                     __end_of_morot_stop:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function _lcd_4bit_send_string_pos *****************
  3880 ;; Defined at:
  3881 ;;		line 162 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  lcd             1   34[COMRAM] PTR const struct .
  3884 ;;		 -> lcd_4bit(6), 
  3885 ;;  row             1   35[COMRAM] unsigned char 
  3886 ;;  column          1   36[COMRAM] unsigned char 
  3887 ;;  str             2   37[COMRAM] PTR unsigned char 
  3888 ;;		 -> STR_13(15), STR_12(8), STR_10(15), STR_9(2), 
  3889 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  3890 ;;		 -> STR_4(6), mes(5), STR_2(15), STR_1(8), 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  ret             1   39[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      unsigned char 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:        6 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 8
  3909 ;; This function calls:
  3910 ;;		_lcd_4bit_send_char_data
  3911 ;;		_lcd_4bit_set_cursor
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text14
  3918   004732                     __ptext14:
  3919                           	callstack 0
  3920   004732                     _lcd_4bit_send_string_pos:
  3921                           	callstack 22
  3922   004732                     
  3923                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 164:     if(((void*)0) == lcd){
  3924   004732  5023               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  3925   004734  A4D8               	btfss	status,2,c
  3926   004736  EF9F  F023         	goto	u11531
  3927   00473A  EFA1  F023         	goto	u11530
  3928   00473E                     u11531:
  3929   00473E  EFA5  F023         	goto	l11358
  3930   004742                     u11530:
  3931   004742                     
  3932                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 165:         ret = 0;
  3933   004742  0E00               	movlw	0
  3934   004744  6E28               	movwf	lcd_4bit_send_string_pos@ret^0,c
  3935                           
  3936                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 166:     }
  3937   004746  EFE2  F023         	goto	l11366
  3938   00474A                     l11358:
  3939                           
  3940                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 168:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  3941   00474A  C023  F01D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  3942   00474E  C024  F01E         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  3943   004752  C025  F01F         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  3944   004756  EC01  F023         	call	_lcd_4bit_set_cursor	;wreg free
  3945   00475A  6E28               	movwf	lcd_4bit_send_string_pos@ret^0,c
  3946                           
  3947                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 169:         while(*str){
  3948   00475C  EFC9  F023         	goto	l11364
  3949   004760                     l11360:
  3950                           
  3951                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 170:             ret = lcd_4bit_send_char_data(lcd, *s
      +                          tr++);
  3952   004760  C023  F01A         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  3953   004764  C026  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  3954   004768  C027  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  3955   00476C  0E00               	movlw	low (__smallconst shr (0+16))
  3956   00476E  6EF8               	movwf	tblptru,c
  3957   004770  0E0F               	movlw	(high __ramtop+-1)
  3958   004772  64F7               	cpfsgt	tblptrh,c
  3959   004774  D003               	bra	u11547
  3960   004776  0008               	tblrd		*
  3961   004778  50F5               	movf	tablat,w,c
  3962   00477A  D005               	bra	u11540
  3963   00477C                     u11547:
  3964   00477C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3965   004780  CFF7 FFEA          	movff	tblptrh,fsr0h
  3966   004784  50EF               	movf	indf0,w,c
  3967   004786                     u11540:
  3968   004786  6E1B               	movwf	lcd_4bit_send_char_data@data^0,c
  3969   004788  ECF6  F026         	call	_lcd_4bit_send_char_data	;wreg free
  3970   00478C  6E28               	movwf	lcd_4bit_send_string_pos@ret^0,c
  3971   00478E  4A26               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  3972   004790  2A27               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  3973   004792                     l11364:
  3974                           
  3975                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 169:         while(*str){
  3976   004792  C026  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  3977   004796  C027  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  3978   00479A  0E00               	movlw	low (__smallconst shr (0+16))
  3979   00479C  6EF8               	movwf	tblptru,c
  3980   00479E  0E0F               	movlw	(high __ramtop+-1)
  3981   0047A0  64F7               	cpfsgt	tblptrh,c
  3982   0047A2  D003               	bra	u11557
  3983   0047A4  0008               	tblrd		*
  3984   0047A6  50F5               	movf	tablat,w,c
  3985   0047A8  D005               	bra	u11550
  3986   0047AA                     u11557:
  3987   0047AA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3988   0047AE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3989   0047B2  50EF               	movf	indf0,w,c
  3990   0047B4                     u11550:
  3991   0047B4  0900               	iorlw	0
  3992   0047B6  A4D8               	btfss	status,2,c
  3993   0047B8  EFE0  F023         	goto	u11561
  3994   0047BC  EFE2  F023         	goto	u11560
  3995   0047C0                     u11561:
  3996   0047C0  EFB0  F023         	goto	l11360
  3997   0047C4                     u11560:
  3998   0047C4                     l11366:
  3999                           
  4000                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 173:     return ret;
  4001   0047C4  5028               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  4002   0047C6  0012               	return		;funcret
  4003   0047C8                     __end_of_lcd_4bit_send_string_pos:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  4007 ;; Defined at:
  4008 ;;		line 119 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  lcd             1   34[COMRAM] PTR const struct .
  4011 ;;		 -> lcd_4bit(6), 
  4012 ;;  row             1   35[COMRAM] unsigned char 
  4013 ;;  column          1   36[COMRAM] unsigned char 
  4014 ;;  data            1   37[COMRAM] unsigned char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  ret             1   38[COMRAM] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      unsigned char 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;Total ram usage:        5 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 8
  4033 ;; This function calls:
  4034 ;;		_lcd_4bit_send_char_data
  4035 ;;		_lcd_4bit_set_cursor
  4036 ;; This function is called by:
  4037 ;;		_main
  4038 ;;		_lcd_4bit_send_custom_char
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text15
  4043   005178                     __ptext15:
  4044                           	callstack 0
  4045   005178                     _lcd_4bit_send_char_data_pos:
  4046                           	callstack 22
  4047   005178                     
  4048                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 121:     if(((void*)0) == lcd){
  4049   005178  5023               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  4050   00517A  A4D8               	btfss	status,2,c
  4051   00517C  EFC2  F028         	goto	u11671
  4052   005180  EFC4  F028         	goto	u11670
  4053   005184                     u11671:
  4054   005184  EFC8  F028         	goto	l11540
  4055   005188                     u11670:
  4056   005188                     
  4057                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 122:         ret = 0;
  4058   005188  0E00               	movlw	0
  4059   00518A  6E27               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  4060                           
  4061                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 123:     }
  4062   00518C  EFD8  F028         	goto	l11542
  4063   005190                     l11540:
  4064                           
  4065                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 125:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  4066   005190  C023  F01D         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  4067   005194  C024  F01E         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  4068   005198  C025  F01F         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@coulmn
  4069   00519C  EC01  F023         	call	_lcd_4bit_set_cursor	;wreg free
  4070   0051A0  6E27               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  4071                           
  4072                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 126:         ret = lcd_4bit_send_char_data(lcd, data);
  4073   0051A2  C023  F01A         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  4074   0051A6  C026  F01B         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  4075   0051AA  ECF6  F026         	call	_lcd_4bit_send_char_data	;wreg free
  4076   0051AE  6E27               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  4077   0051B0                     l11542:
  4078                           
  4079                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 128:     return ret;
  4080   0051B0  5027               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  4081   0051B2  0012               	return		;funcret
  4082   0051B4                     __end_of_lcd_4bit_send_char_data_pos:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _lcd_4bit_set_cursor *****************
  4086 ;; Defined at:
  4087 ;;		line 534 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  lcd             1   28[COMRAM] PTR const struct .
  4090 ;;		 -> lcd_4bit(6), 
  4091 ;;  row             1   29[COMRAM] unsigned char 
  4092 ;;  coulmn          1   30[COMRAM] unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  ret             1   33[COMRAM] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      unsigned char 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;Total ram usage:        6 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 7
  4111 ;; This function calls:
  4112 ;;		_lcd_4bit_send_command
  4113 ;; This function is called by:
  4114 ;;		_lcd_4bit_send_char_data_pos
  4115 ;;		_lcd_4bit_send_string_pos
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text16
  4120   004602                     __ptext16:
  4121                           	callstack 0
  4122   004602                     _lcd_4bit_set_cursor:
  4123                           	callstack 22
  4124   004602                     
  4125                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 535:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4126   004602  0E01               	movlw	1
  4127   004604  6E22               	movwf	lcd_4bit_set_cursor@ret^0,c
  4128   004606                     
  4129                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 536:     coulmn--;
  4130   004606  061F               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  4131                           
  4132                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 537:     switch(row){
  4133   004608  EF2E  F023         	goto	l11064
  4134   00460C                     l11056:
  4135   00460C  C01D  F01A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4136   004610  501F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4137   004612  0F80               	addlw	128
  4138   004614  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  4139   004616  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  4140   00461A  6E22               	movwf	lcd_4bit_set_cursor@ret^0,c
  4141   00461C  EF4B  F023         	goto	l11066
  4142   004620                     l11058:
  4143   004620  C01D  F01A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4144   004624  501F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4145   004626  0FC0               	addlw	192
  4146   004628  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  4147   00462A  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  4148   00462E  6E22               	movwf	lcd_4bit_set_cursor@ret^0,c
  4149   004630  EF4B  F023         	goto	l11066
  4150   004634                     l11060:
  4151   004634  C01D  F01A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4152   004638  501F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4153   00463A  0F94               	addlw	148
  4154   00463C  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  4155   00463E  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  4156   004642  6E22               	movwf	lcd_4bit_set_cursor@ret^0,c
  4157   004644  EF4B  F023         	goto	l11066
  4158   004648                     l11062:
  4159   004648  C01D  F01A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4160   00464C  501F               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  4161   00464E  0FD4               	addlw	212
  4162   004650  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  4163   004652  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  4164   004656  6E22               	movwf	lcd_4bit_set_cursor@ret^0,c
  4165   004658  EF4B  F023         	goto	l11066
  4166   00465C                     l11064:
  4167   00465C  501E               	movf	lcd_4bit_set_cursor@row^0,w,c
  4168   00465E  6E20               	movwf	??_lcd_4bit_set_cursor^0,c
  4169   004660  6A21               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  4170                           
  4171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4172                           ; Switch size 1, requested type "simple"
  4173                           ; Number of cases is 1, Range of values is 0 to 0
  4174                           ; switch strategies available:
  4175                           ; Name         Instructions Cycles
  4176                           ; simple_byte            4     3 (average)
  4177                           ;	Chosen strategy is simple_byte
  4178   004662  5021               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  4179   004664  0A00               	xorlw	0	; case 0
  4180   004666  B4D8               	btfsc	status,2,c
  4181   004668  EF38  F023         	goto	l12546
  4182   00466C  EF4B  F023         	goto	l11066
  4183   004670                     l12546:
  4184                           
  4185                           ; Switch size 1, requested type "simple"
  4186                           ; Number of cases is 4, Range of values is 1 to 4
  4187                           ; switch strategies available:
  4188                           ; Name         Instructions Cycles
  4189                           ; simple_byte           13     7 (average)
  4190                           ;	Chosen strategy is simple_byte
  4191   004670  5020               	movf	??_lcd_4bit_set_cursor^0,w,c
  4192   004672  0A01               	xorlw	1	; case 1
  4193   004674  B4D8               	btfsc	status,2,c
  4194   004676  EF06  F023         	goto	l11056
  4195   00467A  0A03               	xorlw	3	; case 2
  4196   00467C  B4D8               	btfsc	status,2,c
  4197   00467E  EF10  F023         	goto	l11058
  4198   004682  0A01               	xorlw	1	; case 3
  4199   004684  B4D8               	btfsc	status,2,c
  4200   004686  EF1A  F023         	goto	l11060
  4201   00468A  0A07               	xorlw	7	; case 4
  4202   00468C  B4D8               	btfsc	status,2,c
  4203   00468E  EF24  F023         	goto	l11062
  4204   004692  EF4B  F023         	goto	l11066
  4205   004696                     l11066:
  4206                           
  4207                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 544:     return ret;
  4208   004696  5022               	movf	lcd_4bit_set_cursor@ret^0,w,c
  4209   004698  0012               	return		;funcret
  4210   00469A                     __end_of_lcd_4bit_set_cursor:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _lcd_4bit_send_char_data *****************
  4214 ;; Defined at:
  4215 ;;		line 88 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  lcd             1   25[COMRAM] PTR const struct .
  4218 ;;		 -> lcd_4bit(6), 
  4219 ;;  data            1   26[COMRAM] unsigned char 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  ret             1   27[COMRAM] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      unsigned char 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:        3 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 6
  4238 ;; This function calls:
  4239 ;;		_GPIO_pIN_WRITE_LOGIC
  4240 ;;		_lcd_4bit_send_enable_signal
  4241 ;;		_lcd_send_4bits
  4242 ;; This function is called by:
  4243 ;;		_lcd_4bit_send_char_data_pos
  4244 ;;		_lcd_4bit_send_string_pos
  4245 ;;		_lcd_4bit_send_string
  4246 ;;		_lcd_4bit_send_custom_char
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text17
  4251   004DEC                     __ptext17:
  4252                           	callstack 0
  4253   004DEC                     _lcd_4bit_send_char_data:
  4254                           	callstack 23
  4255   004DEC                     
  4256                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 90:     if(((void*)0) == lcd){
  4257   004DEC  501A               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  4258   004DEE  A4D8               	btfss	status,2,c
  4259   004DF0  EFFC  F026         	goto	u11161
  4260   004DF4  EFFE  F026         	goto	u11160
  4261   004DF8                     u11161:
  4262   004DF8  EF02  F027         	goto	l11046
  4263   004DFC                     u11160:
  4264   004DFC                     
  4265                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 91:         ret = 0;
  4266   004DFC  0E00               	movlw	0
  4267   004DFE  6E1C               	movwf	lcd_4bit_send_char_data@ret^0,c
  4268                           
  4269                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 92:     }
  4270   004E00  EF23  F027         	goto	l11048
  4271   004E04                     l11046:
  4272                           
  4273                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 96:         ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  4274   004E04  C01A  F00D         	movff	lcd_4bit_send_char_data@lcd,GPIO_pIN_WRITE_LOGIC@config_pin
  4275   004E08  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4276   004E0A  0E01               	movlw	1
  4277   004E0C  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4278   004E0E  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4279   004E12  6E1C               	movwf	lcd_4bit_send_char_data@ret^0,c
  4280                           
  4281                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 98:         ret = lcd_send_4bits(lcd, data >> 4);
  4282   004E14  C01A  F016         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  4283   004E18  381B               	swapf	lcd_4bit_send_char_data@data^0,w,c
  4284   004E1A  0B0F               	andlw	15
  4285   004E1C  6E17               	movwf	lcd_send_4bits@_data_command^0,c
  4286   004E1E  ECEC  F025         	call	_lcd_send_4bits	;wreg free
  4287   004E22  6E1C               	movwf	lcd_4bit_send_char_data@ret^0,c
  4288                           
  4289                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 100:         ret = lcd_4bit_send_enable_signal(lcd);
  4290   004E24  C01A  F016         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  4291   004E28  ECF8  F028         	call	_lcd_4bit_send_enable_signal	;wreg free
  4292   004E2C  6E1C               	movwf	lcd_4bit_send_char_data@ret^0,c
  4293                           
  4294                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 102:         ret = lcd_send_4bits(lcd, data);
  4295   004E2E  C01A  F016         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  4296   004E32  C01B  F017         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  4297   004E36  ECEC  F025         	call	_lcd_send_4bits	;wreg free
  4298   004E3A  6E1C               	movwf	lcd_4bit_send_char_data@ret^0,c
  4299                           
  4300                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 104:         ret = lcd_4bit_send_enable_signal(lcd);
  4301   004E3C  C01A  F016         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  4302   004E40  ECF8  F028         	call	_lcd_4bit_send_enable_signal	;wreg free
  4303   004E44  6E1C               	movwf	lcd_4bit_send_char_data@ret^0,c
  4304   004E46                     l11048:
  4305                           
  4306                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 106:     return ret;
  4307   004E46  501C               	movf	lcd_4bit_send_char_data@ret^0,w,c
  4308   004E48  0012               	return		;funcret
  4309   004E4A                     __end_of_lcd_4bit_send_char_data:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _intitialized_functions *****************
  4313 ;; Defined at:
  4314 ;;		line 193 in file "main.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 8
  4335 ;; This function calls:
  4336 ;;		_ADC_inti
  4337 ;;		_GPIO_pIN_INTIALIZE
  4338 ;;		_Interrupt_Intx_Inti
  4339 ;;		_MSSP_I2C_Init
  4340 ;;		_Timer2_init
  4341 ;;		_ccp1_init
  4342 ;;		_ccp2_init
  4343 ;;		_lcd_4bit_intialize
  4344 ;;		_motor_intialize
  4345 ;;		_usart_ASYNC_init
  4346 ;; This function is called by:
  4347 ;;		_main
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text18
  4352   00416C                     __ptext18:
  4353                           	callstack 0
  4354   00416C                     _intitialized_functions:
  4355                           	callstack 22
  4356   00416C                     
  4357                           ;main.c: 194:     usart_ASYNC_init(&usart_1);
  4358   00416C  0E12               	movlw	low _usart_1
  4359   00416E  0101               	movlb	1	; () banked
  4360   004170  6F9D               	movwf	usart_ASYNC_init@usart& (0+255),b
  4361   004172  0E01               	movlw	high _usart_1
  4362   004174  6F9E               	movwf	(usart_ASYNC_init@usart+1)& (0+255),b
  4363   004176  ECF1  F027         	call	_usart_ASYNC_init	;wreg free
  4364                           
  4365                           ;main.c: 195:     ret = ADC_inti(&ADC_);
  4366   00417A  0E53               	movlw	low _ADC_
  4367   00417C  6E10               	movwf	ADC_inti@ADC_conf^0,c
  4368   00417E  0E01               	movlw	high _ADC_
  4369   004180  6E11               	movwf	(ADC_inti@ADC_conf+1)^0,c
  4370   004182  ECF7  F01F         	call	_ADC_inti	;wreg free
  4371   004186  0100               	movlb	0	; () banked
  4372   004188  6FC4               	movwf	_ret& (0+255),b
  4373                           
  4374                           ;main.c: 196:     ret = ADC_inti(&ADC_2);
  4375   00418A  0E4D               	movlw	low _ADC_2
  4376   00418C  6E10               	movwf	ADC_inti@ADC_conf^0,c
  4377   00418E  0E01               	movlw	high _ADC_2
  4378   004190  6E11               	movwf	(ADC_inti@ADC_conf+1)^0,c
  4379   004192  ECF7  F01F         	call	_ADC_inti	;wreg free
  4380   004196  0100               	movlb	0	; () banked
  4381   004198  6FC4               	movwf	_ret& (0+255),b
  4382   00419A                     
  4383                           ; BSR set to: 0
  4384                           ;main.c: 197:     ret = GPIO_pIN_INTIALIZE(&LED_ROOM_1);
  4385   00419A  0EFA               	movlw	low _LED_ROOM_1
  4386   00419C  6E16               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  4387   00419E  6A17               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  4388   0041A0  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  4389   0041A4  0100               	movlb	0	; () banked
  4390   0041A6  6FC4               	movwf	_ret& (0+255),b
  4391   0041A8                     
  4392                           ; BSR set to: 0
  4393                           ;main.c: 198:     ret = MSSP_I2C_Init(&mssp_i2c);
  4394   0041A8  0E24               	movlw	low _mssp_i2c
  4395   0041AA  6FFE               	movwf	MSSP_I2C_Init@i2c_obj& (0+255),b
  4396   0041AC  0E01               	movlw	high _mssp_i2c
  4397   0041AE  6FFF               	movwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),b
  4398   0041B0  ECBE  F019         	call	_MSSP_I2C_Init	;wreg free
  4399   0041B4  0100               	movlb	0	; () banked
  4400   0041B6  6FC4               	movwf	_ret& (0+255),b
  4401                           
  4402                           ;main.c: 199:     ret = lcd_4bit_intialize(&lcd_4bit);
  4403   0041B8  0EF0               	movlw	low _lcd_4bit
  4404   0041BA  6E1D               	movwf	lcd_4bit_intialize@lcd^0,c
  4405   0041BC  EC42  F01E         	call	_lcd_4bit_intialize	;wreg free
  4406   0041C0  0100               	movlb	0	; () banked
  4407   0041C2  6FC4               	movwf	_ret& (0+255),b
  4408   0041C4                     
  4409                           ; BSR set to: 0
  4410                           ;main.c: 200:     ret = Timer2_init(&Timer2);
  4411   0041C4  0E91               	movlw	low _Timer2
  4412   0041C6  6E0D               	movwf	Timer2_init@Timer2^0,c
  4413   0041C8  0E01               	movlw	high _Timer2
  4414   0041CA  6E0E               	movwf	(Timer2_init@Timer2+1)^0,c
  4415   0041CC  EC64  F022         	call	_Timer2_init	;wreg free
  4416   0041D0  0100               	movlb	0	; () banked
  4417   0041D2  6FC4               	movwf	_ret& (0+255),b
  4418   0041D4                     
  4419                           ; BSR set to: 0
  4420                           ;main.c: 201:     ret = ccp2_init(&ccp2_);
  4421   0041D4  0E3D               	movlw	low _ccp2_
  4422   0041D6  6E26               	movwf	ccp2_init@ccp2_^0,c
  4423   0041D8  0E01               	movlw	high _ccp2_
  4424   0041DA  6E27               	movwf	(ccp2_init@ccp2_+1)^0,c
  4425   0041DC  ECA3  F017         	call	_ccp2_init	;wreg free
  4426   0041E0  0100               	movlb	0	; () banked
  4427   0041E2  6FC4               	movwf	_ret& (0+255),b
  4428   0041E4                     
  4429                           ; BSR set to: 0
  4430                           ;main.c: 202:     ret = motor_intialize(&motor_2);
  4431   0041E4  0EF8               	movlw	low _motor_2
  4432   0041E6  6E1A               	movwf	motor_intialize@motor_pin^0,c
  4433   0041E8  ECDA  F028         	call	_motor_intialize	;wreg free
  4434   0041EC  0100               	movlb	0	; () banked
  4435   0041EE  6FC4               	movwf	_ret& (0+255),b
  4436   0041F0                     
  4437                           ; BSR set to: 0
  4438                           ;main.c: 203:     ret = Interrupt_Intx_Inti(&INT_0);
  4439   0041F0  0E47               	movlw	low _INT_0
  4440   0041F2  6E1D               	movwf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,c
  4441   0041F4  0E01               	movlw	high _INT_0
  4442   0041F6  6E1E               	movwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,c
  4443   0041F8  EC24  F026         	call	_Interrupt_Intx_Inti	;wreg free
  4444   0041FC  0100               	movlb	0	; () banked
  4445   0041FE  6FC4               	movwf	_ret& (0+255),b
  4446   004200                     
  4447                           ; BSR set to: 0
  4448                           ;main.c: 204:     ret = ccp1_init(&ccp1_);
  4449   004200  0E33               	movlw	low _ccp1_
  4450   004202  6E26               	movwf	ccp1_init@ccp1_^0,c
  4451   004204  0E01               	movlw	high _ccp1_
  4452   004206  6E27               	movwf	(ccp1_init@ccp1_+1)^0,c
  4453   004208  EC57  F018         	call	_ccp1_init	;wreg free
  4454   00420C  0100               	movlb	0	; () banked
  4455   00420E  6FC4               	movwf	_ret& (0+255),b
  4456   004210                     
  4457                           ; BSR set to: 0
  4458                           ;main.c: 205:     ret = motor_intialize(&motor_1);
  4459   004210  0EF6               	movlw	low _motor_1
  4460   004212  6E1A               	movwf	motor_intialize@motor_pin^0,c
  4461   004214  ECDA  F028         	call	_motor_intialize	;wreg free
  4462   004218  0100               	movlb	0	; () banked
  4463   00421A  6FC4               	movwf	_ret& (0+255),b
  4464   00421C                     
  4465                           ; BSR set to: 0
  4466   00421C  0012               	return		;funcret
  4467   00421E                     __end_of_intitialized_functions:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _usart_ASYNC_init *****************
  4471 ;; Defined at:
  4472 ;;		line 21 in file "MKAL_layer/USART/hal_usart.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  usart           2    8[BANK1 ] PTR const struct .
  4475 ;;		 -> usart_1(18), 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  ret             1    0        unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      unsigned char 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4487 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;Total ram usage:        2 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 6
  4494 ;; This function calls:
  4495 ;;		_baudrate_calculate
  4496 ;;		_usart_async_rx_int
  4497 ;;		_usart_async_tx_int
  4498 ;; This function is called by:
  4499 ;;		_intitialized_functions
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text19
  4504   004FE2                     __ptext19:
  4505                           	callstack 0
  4506   004FE2                     _usart_ASYNC_init:
  4507                           	callstack 23
  4508   004FE2                     
  4509                           ;MKAL_layer/USART/hal_usart.c: 23:     if (((void*)0) == usart){
  4510   004FE2  0101               	movlb	1	; () banked
  4511   004FE4  519D               	movf	usart_ASYNC_init@usart& (0+255),w,b
  4512   004FE6  119E               	iorwf	(usart_ASYNC_init@usart+1)& (0+255),w,b
  4513   004FE8  A4D8               	btfss	status,2,c
  4514   004FEA  EFF9  F027         	goto	u10841
  4515   004FEE  EFFB  F027         	goto	u10840
  4516   004FF2                     u10841:
  4517   004FF2  EFFD  F027         	goto	l1680
  4518   004FF6                     u10840:
  4519   004FF6                     
  4520                           ; BSR set to: 1
  4521                           ;MKAL_layer/USART/hal_usart.c: 25:     }
  4522   004FF6  EF13  F028         	goto	l1682
  4523   004FFA                     l1680:
  4524                           
  4525                           ; BSR set to: 1
  4526                           ;MKAL_layer/USART/hal_usart.c: 27:     {;MKAL_layer/USART/hal_usart.c: 29:         RCSTA
      +                          bits.SPEN =0;
  4527   004FFA  9EAB               	bcf	171,7,c	;volatile
  4528   004FFC                     
  4529                           ; BSR set to: 1
  4530                           ;MKAL_layer/USART/hal_usart.c: 31:         baudrate_calculate(usart);
  4531   004FFC  C19D  F0FB         	movff	usart_ASYNC_init@usart,baudrate_calculate@usart
  4532   005000  C19E  F0FC         	movff	usart_ASYNC_init@usart+1,baudrate_calculate@usart+1
  4533   005004  EC24  F00B         	call	_baudrate_calculate	;wreg free
  4534   005008                     
  4535                           ;MKAL_layer/USART/hal_usart.c: 33:         TRISCbits.RC6 = GPIO_INPUT;
  4536   005008  8C94               	bsf	148,6,c	;volatile
  4537   00500A                     
  4538                           ;MKAL_layer/USART/hal_usart.c: 34:         TRISCbits.RC7 = GPIO_INPUT;
  4539   00500A  8E94               	bsf	148,7,c	;volatile
  4540                           
  4541                           ;MKAL_layer/USART/hal_usart.c: 35:         usart_async_tx_int(usart);
  4542   00500C  C19D  F00D         	movff	usart_ASYNC_init@usart,usart_async_tx_int@usart
  4543   005010  C19E  F00E         	movff	usart_ASYNC_init@usart+1,usart_async_tx_int@usart+1
  4544   005014  EC2B  F01F         	call	_usart_async_tx_int	;wreg free
  4545                           
  4546                           ;MKAL_layer/USART/hal_usart.c: 36:         usart_async_rx_int(usart);
  4547   005018  C19D  F00D         	movff	usart_ASYNC_init@usart,usart_async_rx_int@usart
  4548   00501C  C19E  F00E         	movff	usart_ASYNC_init@usart+1,usart_async_rx_int@usart+1
  4549   005020  ECC5  F01D         	call	_usart_async_rx_int	;wreg free
  4550   005024                     
  4551                           ;MKAL_layer/USART/hal_usart.c: 38:         RCSTAbits.SPEN =1;
  4552   005024  8EAB               	bsf	171,7,c	;volatile
  4553   005026                     l1682:
  4554   005026  0012               	return		;funcret
  4555   005028                     __end_of_usart_ASYNC_init:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _usart_async_tx_int *****************
  4559 ;; Defined at:
  4560 ;;		line 168 in file "MKAL_layer/USART/hal_usart.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  usart           2   12[COMRAM] PTR const struct .
  4563 ;;		 -> usart_1(18), 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;Total ram usage:        2 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 4
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_usart_ASYNC_init
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text20
  4590   003E56                     __ptext20:
  4591                           	callstack 0
  4592   003E56                     _usart_async_tx_int:
  4593                           	callstack 24
  4594   003E56                     
  4595                           ;MKAL_layer/USART/hal_usart.c: 169:     if(usart->usart_tx.usart_tx_enable == 1){
  4596   003E56  EE20 F005          	lfsr	2,5
  4597   003E5A  500D               	movf	usart_async_tx_int@usart^0,w,c
  4598   003E5C  26D9               	addwf	fsr2l,f,c
  4599   003E5E  500E               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4600   003E60  22DA               	addwfc	fsr2h,f,c
  4601   003E62  AADF               	btfss	indf2,5,c
  4602   003E64  EF36  F01F         	goto	u10571
  4603   003E68  EF38  F01F         	goto	u10570
  4604   003E6C                     u10571:
  4605   003E6C  EF86  F01F         	goto	l10618
  4606   003E70                     u10570:
  4607   003E70                     
  4608                           ;MKAL_layer/USART/hal_usart.c: 170:         TXSTAbits.TXEN =1;
  4609   003E70  8AAC               	bsf	172,5,c	;volatile
  4610   003E72                     
  4611                           ;MKAL_layer/USART/hal_usart.c: 171:         if(usart->usart_tx.usart_tx_interrupt_enable
      +                           == 1){
  4612   003E72  EE20 F005          	lfsr	2,5
  4613   003E76  500D               	movf	usart_async_tx_int@usart^0,w,c
  4614   003E78  26D9               	addwf	fsr2l,f,c
  4615   003E7A  500E               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4616   003E7C  22DA               	addwfc	fsr2h,f,c
  4617   003E7E  ACDF               	btfss	indf2,6,c
  4618   003E80  EF44  F01F         	goto	u10581
  4619   003E84  EF46  F01F         	goto	u10580
  4620   003E88                     u10581:
  4621   003E88  EF56  F01F         	goto	l10606
  4622   003E8C                     u10580:
  4623   003E8C                     
  4624                           ;MKAL_layer/USART/hal_usart.c: 172:             (PIE1bits.TXIE = 1);
  4625   003E8C  889D               	bsf	157,4,c	;volatile
  4626   003E8E                     
  4627                           ;MKAL_layer/USART/hal_usart.c: 173:             USART_TX_Interrupthandler = usart->USART
      +                          _TX_INTERRUPT_HANDLER;
  4628   003E8E  EE20 F00A          	lfsr	2,10
  4629   003E92  500D               	movf	usart_async_tx_int@usart^0,w,c
  4630   003E94  26D9               	addwf	fsr2l,f,c
  4631   003E96  500E               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4632   003E98  22DA               	addwfc	fsr2h,f,c
  4633   003E9A  CFDE F08A          	movff	postinc2,_USART_TX_Interrupthandler
  4634   003E9E  CFDD F08B          	movff	postdec2,_USART_TX_Interrupthandler+1
  4635   003EA2                     
  4636                           ;MKAL_layer/USART/hal_usart.c: 175:             (PIE1bits.TXIE = 1);
  4637   003EA2  889D               	bsf	157,4,c	;volatile
  4638   003EA4                     
  4639                           ;MKAL_layer/USART/hal_usart.c: 188:         (INTCONbits.GIE =1);
  4640   003EA4  8EF2               	bsf	242,7,c	;volatile
  4641   003EA6                     
  4642                           ;MKAL_layer/USART/hal_usart.c: 189:         (INTCONbits.PEIE =1);
  4643   003EA6  8CF2               	bsf	242,6,c	;volatile
  4644                           
  4645                           ;MKAL_layer/USART/hal_usart.c: 193:         }
  4646   003EA8  EF64  F01F         	goto	l10610
  4647   003EAC                     l10606:
  4648   003EAC  EE20 F005          	lfsr	2,5
  4649   003EB0  500D               	movf	usart_async_tx_int@usart^0,w,c
  4650   003EB2  26D9               	addwf	fsr2l,f,c
  4651   003EB4  500E               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4652   003EB6  22DA               	addwfc	fsr2h,f,c
  4653   003EB8  BCDF               	btfsc	indf2,6,c
  4654   003EBA  EF61  F01F         	goto	u10591
  4655   003EBE  EF63  F01F         	goto	u10590
  4656   003EC2                     u10591:
  4657   003EC2  EF64  F01F         	goto	l10610
  4658   003EC6                     u10590:
  4659   003EC6                     
  4660                           ;MKAL_layer/USART/hal_usart.c: 195:             (PIE1bits.TXIE = 0);
  4661   003EC6  989D               	bcf	157,4,c	;volatile
  4662   003EC8                     l10610:
  4663                           
  4664                           ;MKAL_layer/USART/hal_usart.c: 198:         if(usart->usart_tx.usart_tx_9bits_enable == 
      +                          1){
  4665   003EC8  EE20 F005          	lfsr	2,5
  4666   003ECC  500D               	movf	usart_async_tx_int@usart^0,w,c
  4667   003ECE  26D9               	addwf	fsr2l,f,c
  4668   003ED0  500E               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4669   003ED2  22DA               	addwfc	fsr2h,f,c
  4670   003ED4  AEDF               	btfss	indf2,7,c
  4671   003ED6  EF6F  F01F         	goto	u10601
  4672   003EDA  EF71  F01F         	goto	u10600
  4673   003EDE                     u10601:
  4674   003EDE  EF74  F01F         	goto	l10614
  4675   003EE2                     u10600:
  4676   003EE2                     
  4677                           ;MKAL_layer/USART/hal_usart.c: 199:             TXSTAbits.TX9 = 1;
  4678   003EE2  8CAC               	bsf	172,6,c	;volatile
  4679                           
  4680                           ;MKAL_layer/USART/hal_usart.c: 200:         }
  4681   003EE4  EF94  F01F         	goto	l1738
  4682   003EE8                     l10614:
  4683   003EE8  EE20 F005          	lfsr	2,5
  4684   003EEC  500D               	movf	usart_async_tx_int@usart^0,w,c
  4685   003EEE  26D9               	addwf	fsr2l,f,c
  4686   003EF0  500E               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4687   003EF2  22DA               	addwfc	fsr2h,f,c
  4688   003EF4  BCDF               	btfsc	indf2,6,c
  4689   003EF6  EF7F  F01F         	goto	u10611
  4690   003EFA  EF81  F01F         	goto	u10610
  4691   003EFE                     u10611:
  4692   003EFE  EF84  F01F         	goto	l1732
  4693   003F02                     u10610:
  4694   003F02                     
  4695                           ;MKAL_layer/USART/hal_usart.c: 202:             TXSTAbits.TX9 = 0;
  4696   003F02  9CAC               	bcf	172,6,c	;volatile
  4697                           
  4698                           ;MKAL_layer/USART/hal_usart.c: 203:         }
  4699   003F04  EF94  F01F         	goto	l1738
  4700   003F08                     l1732:
  4701                           
  4702                           ;MKAL_layer/USART/hal_usart.c: 205:     }
  4703   003F08  EF94  F01F         	goto	l1738
  4704   003F0C                     l10618:
  4705   003F0C  EE20 F005          	lfsr	2,5
  4706   003F10  500D               	movf	usart_async_tx_int@usart^0,w,c
  4707   003F12  26D9               	addwf	fsr2l,f,c
  4708   003F14  500E               	movf	(usart_async_tx_int@usart+1)^0,w,c
  4709   003F16  22DA               	addwfc	fsr2h,f,c
  4710   003F18  AADF               	btfss	indf2,5,c
  4711   003F1A  EF91  F01F         	goto	u10621
  4712   003F1E  EF93  F01F         	goto	u10620
  4713   003F22                     u10621:
  4714   003F22  EF94  F01F         	goto	l1738
  4715   003F26                     u10620:
  4716   003F26                     
  4717                           ;MKAL_layer/USART/hal_usart.c: 207:         TXSTAbits.TXEN =1;
  4718   003F26  8AAC               	bsf	172,5,c	;volatile
  4719   003F28                     l1738:
  4720   003F28  0012               	return		;funcret
  4721   003F2A                     __end_of_usart_async_tx_int:
  4722                           	callstack 0
  4723                           
  4724 ;; *************** function _usart_async_rx_int *****************
  4725 ;; Defined at:
  4726 ;;		line 212 in file "MKAL_layer/USART/hal_usart.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  usart           2   12[COMRAM] PTR const struct .
  4729 ;;		 -> usart_1(18), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;Total ram usage:        2 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 4
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_usart_ASYNC_init
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text21
  4756   003B8A                     __ptext21:
  4757                           	callstack 0
  4758   003B8A                     _usart_async_rx_int:
  4759                           	callstack 24
  4760   003B8A                     
  4761                           ;MKAL_layer/USART/hal_usart.c: 213:     if(usart->usart_rx.usart_rx_enable == 1){
  4762   003B8A  EE20 F007          	lfsr	2,7
  4763   003B8E  500D               	movf	usart_async_rx_int@usart^0,w,c
  4764   003B90  26D9               	addwf	fsr2l,f,c
  4765   003B92  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4766   003B94  22DA               	addwfc	fsr2h,f,c
  4767   003B96  AADF               	btfss	indf2,5,c
  4768   003B98  EFD0  F01D         	goto	u10631
  4769   003B9C  EFD2  F01D         	goto	u10630
  4770   003BA0                     u10631:
  4771   003BA0  EF33  F01E         	goto	l10648
  4772   003BA4                     u10630:
  4773   003BA4                     
  4774                           ;MKAL_layer/USART/hal_usart.c: 214:         RCSTAbits.CREN =1;
  4775   003BA4  88AB               	bsf	171,4,c	;volatile
  4776   003BA6                     
  4777                           ;MKAL_layer/USART/hal_usart.c: 215:         if(usart->usart_rx.usart_rx_interrupt_enable
      +                           == 1){
  4778   003BA6  EE20 F007          	lfsr	2,7
  4779   003BAA  500D               	movf	usart_async_rx_int@usart^0,w,c
  4780   003BAC  26D9               	addwf	fsr2l,f,c
  4781   003BAE  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4782   003BB0  22DA               	addwfc	fsr2h,f,c
  4783   003BB2  ACDF               	btfss	indf2,6,c
  4784   003BB4  EFDE  F01D         	goto	u10641
  4785   003BB8  EFE0  F01D         	goto	u10640
  4786   003BBC                     u10641:
  4787   003BBC  EF03  F01E         	goto	l10636
  4788   003BC0                     u10640:
  4789   003BC0                     
  4790                           ;MKAL_layer/USART/hal_usart.c: 216:             (PIE1bits.RCIE = 1);
  4791   003BC0  8A9D               	bsf	157,5,c	;volatile
  4792   003BC2                     
  4793                           ;MKAL_layer/USART/hal_usart.c: 218:             USART_RX_Interrupthandler = usart->USART
      +                          _RX_INTERRUPT_HANDLER;
  4794   003BC2  EE20 F00C          	lfsr	2,12
  4795   003BC6  500D               	movf	usart_async_rx_int@usart^0,w,c
  4796   003BC8  26D9               	addwf	fsr2l,f,c
  4797   003BCA  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4798   003BCC  22DA               	addwfc	fsr2h,f,c
  4799   003BCE  CFDE F088          	movff	postinc2,_USART_RX_Interrupthandler
  4800   003BD2  CFDD F089          	movff	postdec2,_USART_RX_Interrupthandler+1
  4801                           
  4802                           ;MKAL_layer/USART/hal_usart.c: 219:             USART_FRAMERROR_Interrupthandler = usart
      +                          ->USART_FRAMING_ERROR_INTERRUPT_HANDLER;
  4803   003BD6  EE20 F00E          	lfsr	2,14
  4804   003BDA  500D               	movf	usart_async_rx_int@usart^0,w,c
  4805   003BDC  26D9               	addwf	fsr2l,f,c
  4806   003BDE  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4807   003BE0  22DA               	addwfc	fsr2h,f,c
  4808   003BE2  CFDE F086          	movff	postinc2,_USART_FRAMERROR_Interrupthandler
  4809   003BE6  CFDD F087          	movff	postdec2,_USART_FRAMERROR_Interrupthandler+1
  4810                           
  4811                           ;MKAL_layer/USART/hal_usart.c: 220:             USART_OVERRUN_Interrupthandler = usart->
      +                          USART_OVERRUN_ERROR_INTERRUPT_HANDLER;
  4812   003BEA  EE20 F010          	lfsr	2,16
  4813   003BEE  500D               	movf	usart_async_rx_int@usart^0,w,c
  4814   003BF0  26D9               	addwf	fsr2l,f,c
  4815   003BF2  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4816   003BF4  22DA               	addwfc	fsr2h,f,c
  4817   003BF6  CFDE F084          	movff	postinc2,_USART_OVERRUN_Interrupthandler
  4818   003BFA  CFDD F085          	movff	postdec2,_USART_OVERRUN_Interrupthandler+1
  4819   003BFE                     
  4820                           ;MKAL_layer/USART/hal_usart.c: 233:         (INTCONbits.GIE =1);
  4821   003BFE  8EF2               	bsf	242,7,c	;volatile
  4822   003C00                     
  4823                           ;MKAL_layer/USART/hal_usart.c: 234:         (INTCONbits.PEIE =1);
  4824   003C00  8CF2               	bsf	242,6,c	;volatile
  4825                           
  4826                           ;MKAL_layer/USART/hal_usart.c: 238:         }
  4827   003C02  EF11  F01E         	goto	l10640
  4828   003C06                     l10636:
  4829   003C06  EE20 F007          	lfsr	2,7
  4830   003C0A  500D               	movf	usart_async_rx_int@usart^0,w,c
  4831   003C0C  26D9               	addwf	fsr2l,f,c
  4832   003C0E  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4833   003C10  22DA               	addwfc	fsr2h,f,c
  4834   003C12  BCDF               	btfsc	indf2,6,c
  4835   003C14  EF0E  F01E         	goto	u10651
  4836   003C18  EF10  F01E         	goto	u10650
  4837   003C1C                     u10651:
  4838   003C1C  EF11  F01E         	goto	l10640
  4839   003C20                     u10650:
  4840   003C20                     
  4841                           ;MKAL_layer/USART/hal_usart.c: 240:             (PIE1bits.RCIE = 0);
  4842   003C20  9A9D               	bcf	157,5,c	;volatile
  4843   003C22                     l10640:
  4844                           
  4845                           ;MKAL_layer/USART/hal_usart.c: 243:         if(usart->usart_rx.usart_rx_9bits_enable == 
      +                          1){
  4846   003C22  EE20 F007          	lfsr	2,7
  4847   003C26  500D               	movf	usart_async_rx_int@usart^0,w,c
  4848   003C28  26D9               	addwf	fsr2l,f,c
  4849   003C2A  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4850   003C2C  22DA               	addwfc	fsr2h,f,c
  4851   003C2E  AEDF               	btfss	indf2,7,c
  4852   003C30  EF1C  F01E         	goto	u10661
  4853   003C34  EF1E  F01E         	goto	u10660
  4854   003C38                     u10661:
  4855   003C38  EF21  F01E         	goto	l10644
  4856   003C3C                     u10660:
  4857   003C3C                     
  4858                           ;MKAL_layer/USART/hal_usart.c: 244:             RCSTAbits.RX9 = 1;
  4859   003C3C  8CAB               	bsf	171,6,c	;volatile
  4860                           
  4861                           ;MKAL_layer/USART/hal_usart.c: 245:         }
  4862   003C3E  EF41  F01E         	goto	l1753
  4863   003C42                     l10644:
  4864   003C42  EE20 F007          	lfsr	2,7
  4865   003C46  500D               	movf	usart_async_rx_int@usart^0,w,c
  4866   003C48  26D9               	addwf	fsr2l,f,c
  4867   003C4A  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4868   003C4C  22DA               	addwfc	fsr2h,f,c
  4869   003C4E  BCDF               	btfsc	indf2,6,c
  4870   003C50  EF2C  F01E         	goto	u10671
  4871   003C54  EF2E  F01E         	goto	u10670
  4872   003C58                     u10671:
  4873   003C58  EF31  F01E         	goto	l1747
  4874   003C5C                     u10670:
  4875   003C5C                     
  4876                           ;MKAL_layer/USART/hal_usart.c: 247:             RCSTAbits.RX9 = 0;
  4877   003C5C  9CAB               	bcf	171,6,c	;volatile
  4878                           
  4879                           ;MKAL_layer/USART/hal_usart.c: 248:         }
  4880   003C5E  EF41  F01E         	goto	l1753
  4881   003C62                     l1747:
  4882                           
  4883                           ;MKAL_layer/USART/hal_usart.c: 250:     }
  4884   003C62  EF41  F01E         	goto	l1753
  4885   003C66                     l10648:
  4886   003C66  EE20 F007          	lfsr	2,7
  4887   003C6A  500D               	movf	usart_async_rx_int@usart^0,w,c
  4888   003C6C  26D9               	addwf	fsr2l,f,c
  4889   003C6E  500E               	movf	(usart_async_rx_int@usart+1)^0,w,c
  4890   003C70  22DA               	addwfc	fsr2h,f,c
  4891   003C72  AADF               	btfss	indf2,5,c
  4892   003C74  EF3E  F01E         	goto	u10681
  4893   003C78  EF40  F01E         	goto	u10680
  4894   003C7C                     u10681:
  4895   003C7C  EF41  F01E         	goto	l1753
  4896   003C80                     u10680:
  4897   003C80                     
  4898                           ;MKAL_layer/USART/hal_usart.c: 252:         RCSTAbits.CREN =1;
  4899   003C80  88AB               	bsf	171,4,c	;volatile
  4900   003C82                     l1753:
  4901   003C82  0012               	return		;funcret
  4902   003C84                     __end_of_usart_async_rx_int:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _baudrate_calculate *****************
  4906 ;; Defined at:
  4907 ;;		line 104 in file "MKAL_layer/USART/hal_usart.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  usart           2    0[BANK0 ] PTR const struct .
  4910 ;;		 -> usart_1(18), 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  baud_rate       4    0[BANK1 ] float 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:       12 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 5
  4929 ;; This function calls:
  4930 ;;		___fladd
  4931 ;;		___fldiv
  4932 ;;		___fltol
  4933 ;;		___xxtofl
  4934 ;; This function is called by:
  4935 ;;		_usart_ASYNC_init
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text22
  4940   001648                     __ptext22:
  4941                           	callstack 0
  4942   001648                     _baudrate_calculate:
  4943                           	callstack 23
  4944   001648                     
  4945                           ;MKAL_layer/USART/hal_usart.c: 105:     float baud_rate =0;
  4946   001648  0E00               	movlw	0
  4947   00164A  0101               	movlb	1	; () banked
  4948   00164C  6F95               	movwf	baudrate_calculate@baud_rate& (0+255),b
  4949   00164E  0E00               	movlw	0
  4950   001650  6F96               	movwf	(baudrate_calculate@baud_rate+1)& (0+255),b
  4951   001652  0E00               	movlw	0
  4952   001654  6F97               	movwf	(baudrate_calculate@baud_rate+2)& (0+255),b
  4953   001656  0E00               	movlw	0
  4954   001658  6F98               	movwf	(baudrate_calculate@baud_rate+3)& (0+255),b
  4955                           
  4956                           ;MKAL_layer/USART/hal_usart.c: 106:     switch (usart->buadrate_gen){
  4957   00165A  EF49  F00D         	goto	l10580
  4958   00165E                     l1716:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;MKAL_layer/USART/hal_usart.c: 109:             TXSTAbits.SYNC = 0;
  4962   00165E  98AC               	bcf	172,4,c	;volatile
  4963                           
  4964                           ;MKAL_layer/USART/hal_usart.c: 111:             TXSTAbits.BRGH = 0;
  4965   001660  94AC               	bcf	172,2,c	;volatile
  4966                           
  4967                           ;MKAL_layer/USART/hal_usart.c: 113:             BAUDCONbits.BRG16 = 0;
  4968   001662  96B8               	bcf	184,3,c	;volatile
  4969   001664                     
  4970                           ; BSR set to: 0
  4971                           ;MKAL_layer/USART/hal_usart.c: 115:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/64)-1);
  4972   001664  C0FB  FFD9         	movff	baudrate_calculate@usart,fsr2l
  4973   001668  C0FC  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  4974   00166C  CFDE F00D          	movff	postinc2,___xxtofl@val
  4975   001670  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  4976   001674  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  4977   001678  CFDE F010          	movff	postinc2,___xxtofl@val+3
  4978   00167C  0E00               	movlw	0
  4979   00167E  ECC9  F016         	call	___xxtofl
  4980   001682  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  4981   001686  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  4982   00168A  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  4983   00168E  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  4984   001692  0E00               	movlw	0
  4985   001694  6E1B               	movwf	___fldiv@b^0,c
  4986   001696  0E24               	movlw	36
  4987   001698  6E1C               	movwf	(___fldiv@b+1)^0,c
  4988   00169A  0EF4               	movlw	244
  4989   00169C  6E1D               	movwf	(___fldiv@b+2)^0,c
  4990   00169E  0E4A               	movlw	74
  4991   0016A0  6E1E               	movwf	(___fldiv@b+3)^0,c
  4992   0016A2  EC15  F014         	call	___fldiv	;wreg free
  4993   0016A6  C01B  F199         	movff	?___fldiv,_baudrate_calculate$5695
  4994   0016AA  C01C  F19A         	movff	?___fldiv+1,_baudrate_calculate$5695+1
  4995   0016AE  C01D  F19B         	movff	?___fldiv+2,_baudrate_calculate$5695+2
  4996   0016B2  C01E  F19C         	movff	?___fldiv+3,_baudrate_calculate$5695+3
  4997   0016B6                     
  4998                           ;MKAL_layer/USART/hal_usart.c: 115:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/64)-1);
  4999   0016B6  0E00               	movlw	0
  5000   0016B8  6E1F               	movwf	___fldiv@a^0,c
  5001   0016BA  0E00               	movlw	0
  5002   0016BC  6E20               	movwf	(___fldiv@a+1)^0,c
  5003   0016BE  0E80               	movlw	128
  5004   0016C0  6E21               	movwf	(___fldiv@a+2)^0,c
  5005   0016C2  0E42               	movlw	66
  5006   0016C4  6E22               	movwf	(___fldiv@a+3)^0,c
  5007   0016C6  C199  F01B         	movff	_baudrate_calculate$5695,___fldiv@b
  5008   0016CA  C19A  F01C         	movff	_baudrate_calculate$5695+1,___fldiv@b+1
  5009   0016CE  C19B  F01D         	movff	_baudrate_calculate$5695+2,___fldiv@b+2
  5010   0016D2  C19C  F01E         	movff	_baudrate_calculate$5695+3,___fldiv@b+3
  5011   0016D6  EC15  F014         	call	___fldiv	;wreg free
  5012   0016DA  C01B  F034         	movff	?___fldiv,___fladd@b
  5013   0016DE  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  5014   0016E2  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  5015   0016E6  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  5016   0016EA  0E00               	movlw	0
  5017   0016EC  6E38               	movwf	___fladd@a^0,c
  5018   0016EE  0E00               	movlw	0
  5019   0016F0  6E39               	movwf	(___fladd@a+1)^0,c
  5020   0016F2  0E80               	movlw	128
  5021   0016F4  6E3A               	movwf	(___fladd@a+2)^0,c
  5022   0016F6  0EBF               	movlw	191
  5023   0016F8  6E3B               	movwf	(___fladd@a+3)^0,c
  5024   0016FA  EC95  F00D         	call	___fladd	;wreg free
  5025   0016FE  C034  F195         	movff	?___fladd,baudrate_calculate@baud_rate
  5026   001702  C035  F196         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5027   001706  C036  F197         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5028   00170A  C037  F198         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5029                           
  5030                           ;MKAL_layer/USART/hal_usart.c: 116:             break;
  5031   00170E  EF75  F00D         	goto	l10582
  5032   001712                     l1718:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;MKAL_layer/USART/hal_usart.c: 119:             TXSTAbits.SYNC = 0;
  5036   001712  98AC               	bcf	172,4,c	;volatile
  5037                           
  5038                           ;MKAL_layer/USART/hal_usart.c: 121:             TXSTAbits.BRGH = 1;
  5039   001714  84AC               	bsf	172,2,c	;volatile
  5040                           
  5041                           ;MKAL_layer/USART/hal_usart.c: 123:             BAUDCONbits.BRG16 = 0;
  5042   001716  96B8               	bcf	184,3,c	;volatile
  5043   001718                     
  5044                           ; BSR set to: 0
  5045                           ;MKAL_layer/USART/hal_usart.c: 125:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5046   001718  C0FB  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5047   00171C  C0FC  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5048   001720  CFDE F00D          	movff	postinc2,___xxtofl@val
  5049   001724  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  5050   001728  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  5051   00172C  CFDE F010          	movff	postinc2,___xxtofl@val+3
  5052   001730  0E00               	movlw	0
  5053   001732  ECC9  F016         	call	___xxtofl
  5054   001736  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  5055   00173A  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  5056   00173E  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  5057   001742  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  5058   001746  0E00               	movlw	0
  5059   001748  6E1B               	movwf	___fldiv@b^0,c
  5060   00174A  0E24               	movlw	36
  5061   00174C  6E1C               	movwf	(___fldiv@b+1)^0,c
  5062   00174E  0EF4               	movlw	244
  5063   001750  6E1D               	movwf	(___fldiv@b+2)^0,c
  5064   001752  0E4A               	movlw	74
  5065   001754  6E1E               	movwf	(___fldiv@b+3)^0,c
  5066   001756  EC15  F014         	call	___fldiv	;wreg free
  5067   00175A  C01B  F199         	movff	?___fldiv,_baudrate_calculate$5695
  5068   00175E  C01C  F19A         	movff	?___fldiv+1,_baudrate_calculate$5695+1
  5069   001762  C01D  F19B         	movff	?___fldiv+2,_baudrate_calculate$5695+2
  5070   001766  C01E  F19C         	movff	?___fldiv+3,_baudrate_calculate$5695+3
  5071   00176A                     
  5072                           ;MKAL_layer/USART/hal_usart.c: 125:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5073   00176A  0E00               	movlw	0
  5074   00176C  6E1F               	movwf	___fldiv@a^0,c
  5075   00176E  0E00               	movlw	0
  5076   001770  6E20               	movwf	(___fldiv@a+1)^0,c
  5077   001772  0E80               	movlw	128
  5078   001774  6E21               	movwf	(___fldiv@a+2)^0,c
  5079   001776  0E41               	movlw	65
  5080   001778  6E22               	movwf	(___fldiv@a+3)^0,c
  5081   00177A  C199  F01B         	movff	_baudrate_calculate$5695,___fldiv@b
  5082   00177E  C19A  F01C         	movff	_baudrate_calculate$5695+1,___fldiv@b+1
  5083   001782  C19B  F01D         	movff	_baudrate_calculate$5695+2,___fldiv@b+2
  5084   001786  C19C  F01E         	movff	_baudrate_calculate$5695+3,___fldiv@b+3
  5085   00178A  EC15  F014         	call	___fldiv	;wreg free
  5086   00178E  C01B  F034         	movff	?___fldiv,___fladd@b
  5087   001792  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  5088   001796  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  5089   00179A  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  5090   00179E  0E00               	movlw	0
  5091   0017A0  6E38               	movwf	___fladd@a^0,c
  5092   0017A2  0E00               	movlw	0
  5093   0017A4  6E39               	movwf	(___fladd@a+1)^0,c
  5094   0017A6  0E80               	movlw	128
  5095   0017A8  6E3A               	movwf	(___fladd@a+2)^0,c
  5096   0017AA  0EBF               	movlw	191
  5097   0017AC  6E3B               	movwf	(___fladd@a+3)^0,c
  5098   0017AE  EC95  F00D         	call	___fladd	;wreg free
  5099   0017B2  C034  F195         	movff	?___fladd,baudrate_calculate@baud_rate
  5100   0017B6  C035  F196         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5101   0017BA  C036  F197         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5102   0017BE  C037  F198         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5103                           
  5104                           ;MKAL_layer/USART/hal_usart.c: 126:             break;
  5105   0017C2  EF75  F00D         	goto	l10582
  5106   0017C6                     l1719:
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;MKAL_layer/USART/hal_usart.c: 129:             TXSTAbits.SYNC = 0;
  5110   0017C6  98AC               	bcf	172,4,c	;volatile
  5111                           
  5112                           ;MKAL_layer/USART/hal_usart.c: 131:             TXSTAbits.BRGH = 0;
  5113   0017C8  94AC               	bcf	172,2,c	;volatile
  5114                           
  5115                           ;MKAL_layer/USART/hal_usart.c: 133:             BAUDCONbits.BRG16 = 1;
  5116   0017CA  86B8               	bsf	184,3,c	;volatile
  5117   0017CC                     
  5118                           ; BSR set to: 0
  5119                           ;MKAL_layer/USART/hal_usart.c: 135:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5120   0017CC  C0FB  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5121   0017D0  C0FC  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5122   0017D4  CFDE F00D          	movff	postinc2,___xxtofl@val
  5123   0017D8  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  5124   0017DC  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  5125   0017E0  CFDE F010          	movff	postinc2,___xxtofl@val+3
  5126   0017E4  0E00               	movlw	0
  5127   0017E6  ECC9  F016         	call	___xxtofl
  5128   0017EA  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  5129   0017EE  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  5130   0017F2  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  5131   0017F6  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  5132   0017FA  0E00               	movlw	0
  5133   0017FC  6E1B               	movwf	___fldiv@b^0,c
  5134   0017FE  0E24               	movlw	36
  5135   001800  6E1C               	movwf	(___fldiv@b+1)^0,c
  5136   001802  0EF4               	movlw	244
  5137   001804  6E1D               	movwf	(___fldiv@b+2)^0,c
  5138   001806  0E4A               	movlw	74
  5139   001808  6E1E               	movwf	(___fldiv@b+3)^0,c
  5140   00180A  EC15  F014         	call	___fldiv	;wreg free
  5141   00180E  C01B  F199         	movff	?___fldiv,_baudrate_calculate$5695
  5142   001812  C01C  F19A         	movff	?___fldiv+1,_baudrate_calculate$5695+1
  5143   001816  C01D  F19B         	movff	?___fldiv+2,_baudrate_calculate$5695+2
  5144   00181A  C01E  F19C         	movff	?___fldiv+3,_baudrate_calculate$5695+3
  5145   00181E                     
  5146                           ;MKAL_layer/USART/hal_usart.c: 135:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/16)-1);
  5147   00181E  0E00               	movlw	0
  5148   001820  6E1F               	movwf	___fldiv@a^0,c
  5149   001822  0E00               	movlw	0
  5150   001824  6E20               	movwf	(___fldiv@a+1)^0,c
  5151   001826  0E80               	movlw	128
  5152   001828  6E21               	movwf	(___fldiv@a+2)^0,c
  5153   00182A  0E41               	movlw	65
  5154   00182C  6E22               	movwf	(___fldiv@a+3)^0,c
  5155   00182E  C199  F01B         	movff	_baudrate_calculate$5695,___fldiv@b
  5156   001832  C19A  F01C         	movff	_baudrate_calculate$5695+1,___fldiv@b+1
  5157   001836  C19B  F01D         	movff	_baudrate_calculate$5695+2,___fldiv@b+2
  5158   00183A  C19C  F01E         	movff	_baudrate_calculate$5695+3,___fldiv@b+3
  5159   00183E  EC15  F014         	call	___fldiv	;wreg free
  5160   001842  C01B  F034         	movff	?___fldiv,___fladd@b
  5161   001846  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  5162   00184A  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  5163   00184E  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  5164   001852  0E00               	movlw	0
  5165   001854  6E38               	movwf	___fladd@a^0,c
  5166   001856  0E00               	movlw	0
  5167   001858  6E39               	movwf	(___fladd@a+1)^0,c
  5168   00185A  0E80               	movlw	128
  5169   00185C  6E3A               	movwf	(___fladd@a+2)^0,c
  5170   00185E  0EBF               	movlw	191
  5171   001860  6E3B               	movwf	(___fladd@a+3)^0,c
  5172   001862  EC95  F00D         	call	___fladd	;wreg free
  5173   001866  C034  F195         	movff	?___fladd,baudrate_calculate@baud_rate
  5174   00186A  C035  F196         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5175   00186E  C036  F197         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5176   001872  C037  F198         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5177                           
  5178                           ;MKAL_layer/USART/hal_usart.c: 136:             break;
  5179   001876  EF75  F00D         	goto	l10582
  5180   00187A                     l1720:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;MKAL_layer/USART/hal_usart.c: 139:             TXSTAbits.SYNC = 0;
  5184   00187A  98AC               	bcf	172,4,c	;volatile
  5185                           
  5186                           ;MKAL_layer/USART/hal_usart.c: 141:             TXSTAbits.BRGH = 1;
  5187   00187C  84AC               	bsf	172,2,c	;volatile
  5188                           
  5189                           ;MKAL_layer/USART/hal_usart.c: 143:             BAUDCONbits.BRG16 = 1;
  5190   00187E  86B8               	bsf	184,3,c	;volatile
  5191   001880                     
  5192                           ; BSR set to: 0
  5193                           ;MKAL_layer/USART/hal_usart.c: 145:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5194   001880  C0FB  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5195   001884  C0FC  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5196   001888  CFDE F00D          	movff	postinc2,___xxtofl@val
  5197   00188C  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  5198   001890  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  5199   001894  CFDE F010          	movff	postinc2,___xxtofl@val+3
  5200   001898  0E00               	movlw	0
  5201   00189A  ECC9  F016         	call	___xxtofl
  5202   00189E  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  5203   0018A2  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  5204   0018A6  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  5205   0018AA  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  5206   0018AE  0E00               	movlw	0
  5207   0018B0  6E1B               	movwf	___fldiv@b^0,c
  5208   0018B2  0E24               	movlw	36
  5209   0018B4  6E1C               	movwf	(___fldiv@b+1)^0,c
  5210   0018B6  0EF4               	movlw	244
  5211   0018B8  6E1D               	movwf	(___fldiv@b+2)^0,c
  5212   0018BA  0E4A               	movlw	74
  5213   0018BC  6E1E               	movwf	(___fldiv@b+3)^0,c
  5214   0018BE  EC15  F014         	call	___fldiv	;wreg free
  5215   0018C2  C01B  F199         	movff	?___fldiv,_baudrate_calculate$5695
  5216   0018C6  C01C  F19A         	movff	?___fldiv+1,_baudrate_calculate$5695+1
  5217   0018CA  C01D  F19B         	movff	?___fldiv+2,_baudrate_calculate$5695+2
  5218   0018CE  C01E  F19C         	movff	?___fldiv+3,_baudrate_calculate$5695+3
  5219   0018D2                     
  5220                           ;MKAL_layer/USART/hal_usart.c: 145:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5221   0018D2  0E00               	movlw	0
  5222   0018D4  6E1F               	movwf	___fldiv@a^0,c
  5223   0018D6  0E00               	movlw	0
  5224   0018D8  6E20               	movwf	(___fldiv@a+1)^0,c
  5225   0018DA  0E80               	movlw	128
  5226   0018DC  6E21               	movwf	(___fldiv@a+2)^0,c
  5227   0018DE  0E40               	movlw	64
  5228   0018E0  6E22               	movwf	(___fldiv@a+3)^0,c
  5229   0018E2  C199  F01B         	movff	_baudrate_calculate$5695,___fldiv@b
  5230   0018E6  C19A  F01C         	movff	_baudrate_calculate$5695+1,___fldiv@b+1
  5231   0018EA  C19B  F01D         	movff	_baudrate_calculate$5695+2,___fldiv@b+2
  5232   0018EE  C19C  F01E         	movff	_baudrate_calculate$5695+3,___fldiv@b+3
  5233   0018F2  EC15  F014         	call	___fldiv	;wreg free
  5234   0018F6  C01B  F034         	movff	?___fldiv,___fladd@b
  5235   0018FA  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  5236   0018FE  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  5237   001902  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  5238   001906  0E00               	movlw	0
  5239   001908  6E38               	movwf	___fladd@a^0,c
  5240   00190A  0E00               	movlw	0
  5241   00190C  6E39               	movwf	(___fladd@a+1)^0,c
  5242   00190E  0E80               	movlw	128
  5243   001910  6E3A               	movwf	(___fladd@a+2)^0,c
  5244   001912  0EBF               	movlw	191
  5245   001914  6E3B               	movwf	(___fladd@a+3)^0,c
  5246   001916  EC95  F00D         	call	___fladd	;wreg free
  5247   00191A  C034  F195         	movff	?___fladd,baudrate_calculate@baud_rate
  5248   00191E  C035  F196         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5249   001922  C036  F197         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5250   001926  C037  F198         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5251                           
  5252                           ;MKAL_layer/USART/hal_usart.c: 146:             break;
  5253   00192A  EF75  F00D         	goto	l10582
  5254   00192E                     l1721:
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;MKAL_layer/USART/hal_usart.c: 149:             TXSTAbits.SYNC = 1;
  5258   00192E  88AC               	bsf	172,4,c	;volatile
  5259                           
  5260                           ;MKAL_layer/USART/hal_usart.c: 151:             TXSTAbits.BRGH = 0;
  5261   001930  94AC               	bcf	172,2,c	;volatile
  5262   001932                     
  5263                           ; BSR set to: 0
  5264                           ;MKAL_layer/USART/hal_usart.c: 153:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5265   001932  C0FB  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5266   001936  C0FC  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5267   00193A  CFDE F00D          	movff	postinc2,___xxtofl@val
  5268   00193E  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  5269   001942  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  5270   001946  CFDE F010          	movff	postinc2,___xxtofl@val+3
  5271   00194A  0E00               	movlw	0
  5272   00194C  ECC9  F016         	call	___xxtofl
  5273   001950  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  5274   001954  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  5275   001958  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  5276   00195C  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  5277   001960  0E00               	movlw	0
  5278   001962  6E1B               	movwf	___fldiv@b^0,c
  5279   001964  0E24               	movlw	36
  5280   001966  6E1C               	movwf	(___fldiv@b+1)^0,c
  5281   001968  0EF4               	movlw	244
  5282   00196A  6E1D               	movwf	(___fldiv@b+2)^0,c
  5283   00196C  0E4A               	movlw	74
  5284   00196E  6E1E               	movwf	(___fldiv@b+3)^0,c
  5285   001970  EC15  F014         	call	___fldiv	;wreg free
  5286   001974  C01B  F199         	movff	?___fldiv,_baudrate_calculate$5695
  5287   001978  C01C  F19A         	movff	?___fldiv+1,_baudrate_calculate$5695+1
  5288   00197C  C01D  F19B         	movff	?___fldiv+2,_baudrate_calculate$5695+2
  5289   001980  C01E  F19C         	movff	?___fldiv+3,_baudrate_calculate$5695+3
  5290   001984                     
  5291                           ;MKAL_layer/USART/hal_usart.c: 153:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5292   001984  0E00               	movlw	0
  5293   001986  6E1F               	movwf	___fldiv@a^0,c
  5294   001988  0E00               	movlw	0
  5295   00198A  6E20               	movwf	(___fldiv@a+1)^0,c
  5296   00198C  0E80               	movlw	128
  5297   00198E  6E21               	movwf	(___fldiv@a+2)^0,c
  5298   001990  0E40               	movlw	64
  5299   001992  6E22               	movwf	(___fldiv@a+3)^0,c
  5300   001994  C199  F01B         	movff	_baudrate_calculate$5695,___fldiv@b
  5301   001998  C19A  F01C         	movff	_baudrate_calculate$5695+1,___fldiv@b+1
  5302   00199C  C19B  F01D         	movff	_baudrate_calculate$5695+2,___fldiv@b+2
  5303   0019A0  C19C  F01E         	movff	_baudrate_calculate$5695+3,___fldiv@b+3
  5304   0019A4  EC15  F014         	call	___fldiv	;wreg free
  5305   0019A8  C01B  F034         	movff	?___fldiv,___fladd@b
  5306   0019AC  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  5307   0019B0  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  5308   0019B4  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  5309   0019B8  0E00               	movlw	0
  5310   0019BA  6E38               	movwf	___fladd@a^0,c
  5311   0019BC  0E00               	movlw	0
  5312   0019BE  6E39               	movwf	(___fladd@a+1)^0,c
  5313   0019C0  0E80               	movlw	128
  5314   0019C2  6E3A               	movwf	(___fladd@a+2)^0,c
  5315   0019C4  0EBF               	movlw	191
  5316   0019C6  6E3B               	movwf	(___fladd@a+3)^0,c
  5317   0019C8  EC95  F00D         	call	___fladd	;wreg free
  5318   0019CC  C034  F195         	movff	?___fladd,baudrate_calculate@baud_rate
  5319   0019D0  C035  F196         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5320   0019D4  C036  F197         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5321   0019D8  C037  F198         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5322                           
  5323                           ;MKAL_layer/USART/hal_usart.c: 154:             break;
  5324   0019DC  EF75  F00D         	goto	l10582
  5325   0019E0                     l1722:
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;MKAL_layer/USART/hal_usart.c: 157:             TXSTAbits.SYNC = 1;
  5329   0019E0  88AC               	bsf	172,4,c	;volatile
  5330                           
  5331                           ;MKAL_layer/USART/hal_usart.c: 159:             BAUDCONbits.BRG16 = 0;
  5332   0019E2  96B8               	bcf	184,3,c	;volatile
  5333   0019E4                     
  5334                           ; BSR set to: 0
  5335                           ;MKAL_layer/USART/hal_usart.c: 161:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5336   0019E4  C0FB  FFD9         	movff	baudrate_calculate@usart,fsr2l
  5337   0019E8  C0FC  FFDA         	movff	baudrate_calculate@usart+1,fsr2h
  5338   0019EC  CFDE F00D          	movff	postinc2,___xxtofl@val
  5339   0019F0  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  5340   0019F4  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  5341   0019F8  CFDE F010          	movff	postinc2,___xxtofl@val+3
  5342   0019FC  0E00               	movlw	0
  5343   0019FE  ECC9  F016         	call	___xxtofl
  5344   001A02  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  5345   001A06  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  5346   001A0A  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  5347   001A0E  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  5348   001A12  0E00               	movlw	0
  5349   001A14  6E1B               	movwf	___fldiv@b^0,c
  5350   001A16  0E24               	movlw	36
  5351   001A18  6E1C               	movwf	(___fldiv@b+1)^0,c
  5352   001A1A  0EF4               	movlw	244
  5353   001A1C  6E1D               	movwf	(___fldiv@b+2)^0,c
  5354   001A1E  0E4A               	movlw	74
  5355   001A20  6E1E               	movwf	(___fldiv@b+3)^0,c
  5356   001A22  EC15  F014         	call	___fldiv	;wreg free
  5357   001A26  C01B  F199         	movff	?___fldiv,_baudrate_calculate$5695
  5358   001A2A  C01C  F19A         	movff	?___fldiv+1,_baudrate_calculate$5695+1
  5359   001A2E  C01D  F19B         	movff	?___fldiv+2,_baudrate_calculate$5695+2
  5360   001A32  C01E  F19C         	movff	?___fldiv+3,_baudrate_calculate$5695+3
  5361   001A36                     
  5362                           ;MKAL_layer/USART/hal_usart.c: 161:             baud_rate = (((8000000UL/(float)usart->b
      +                          audrate)/4)-1);
  5363   001A36  0E00               	movlw	0
  5364   001A38  6E1F               	movwf	___fldiv@a^0,c
  5365   001A3A  0E00               	movlw	0
  5366   001A3C  6E20               	movwf	(___fldiv@a+1)^0,c
  5367   001A3E  0E80               	movlw	128
  5368   001A40  6E21               	movwf	(___fldiv@a+2)^0,c
  5369   001A42  0E40               	movlw	64
  5370   001A44  6E22               	movwf	(___fldiv@a+3)^0,c
  5371   001A46  C199  F01B         	movff	_baudrate_calculate$5695,___fldiv@b
  5372   001A4A  C19A  F01C         	movff	_baudrate_calculate$5695+1,___fldiv@b+1
  5373   001A4E  C19B  F01D         	movff	_baudrate_calculate$5695+2,___fldiv@b+2
  5374   001A52  C19C  F01E         	movff	_baudrate_calculate$5695+3,___fldiv@b+3
  5375   001A56  EC15  F014         	call	___fldiv	;wreg free
  5376   001A5A  C01B  F034         	movff	?___fldiv,___fladd@b
  5377   001A5E  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  5378   001A62  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  5379   001A66  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  5380   001A6A  0E00               	movlw	0
  5381   001A6C  6E38               	movwf	___fladd@a^0,c
  5382   001A6E  0E00               	movlw	0
  5383   001A70  6E39               	movwf	(___fladd@a+1)^0,c
  5384   001A72  0E80               	movlw	128
  5385   001A74  6E3A               	movwf	(___fladd@a+2)^0,c
  5386   001A76  0EBF               	movlw	191
  5387   001A78  6E3B               	movwf	(___fladd@a+3)^0,c
  5388   001A7A  EC95  F00D         	call	___fladd	;wreg free
  5389   001A7E  C034  F195         	movff	?___fladd,baudrate_calculate@baud_rate
  5390   001A82  C035  F196         	movff	?___fladd+1,baudrate_calculate@baud_rate+1
  5391   001A86  C036  F197         	movff	?___fladd+2,baudrate_calculate@baud_rate+2
  5392   001A8A  C037  F198         	movff	?___fladd+3,baudrate_calculate@baud_rate+3
  5393                           
  5394                           ;MKAL_layer/USART/hal_usart.c: 162:             break;
  5395   001A8E  EF75  F00D         	goto	l10582
  5396   001A92                     l10580:
  5397                           
  5398                           ; BSR set to: 1
  5399   001A92  0100               	movlb	0	; () banked
  5400   001A94  EE20 F004          	lfsr	2,4
  5401   001A98  51FB               	movf	baudrate_calculate@usart& (0+255),w,b
  5402   001A9A  26D9               	addwf	fsr2l,f,c
  5403   001A9C  51FC               	movf	(baudrate_calculate@usart+1)& (0+255),w,b
  5404   001A9E  22DA               	addwfc	fsr2h,f,c
  5405   001AA0  50DF               	movf	indf2,w,c
  5406   001AA2  6FFD               	movwf	??_baudrate_calculate& (0+255),b
  5407   001AA4  6BFE               	clrf	(??_baudrate_calculate+1)& (0+255),b
  5408                           
  5409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5410                           ; Switch size 1, requested type "simple"
  5411                           ; Number of cases is 1, Range of values is 0 to 0
  5412                           ; switch strategies available:
  5413                           ; Name         Instructions Cycles
  5414                           ; simple_byte            4     3 (average)
  5415                           ;	Chosen strategy is simple_byte
  5416   001AA6  51FE               	movf	(??_baudrate_calculate+1)& (0+255),w,b
  5417   001AA8  0A00               	xorlw	0	; case 0
  5418   001AAA  B4D8               	btfsc	status,2,c
  5419   001AAC  EF5A  F00D         	goto	l12548
  5420   001AB0  EF75  F00D         	goto	l10582
  5421   001AB4                     l12548:
  5422                           
  5423                           ; BSR set to: 0
  5424                           ; Switch size 1, requested type "simple"
  5425                           ; Number of cases is 6, Range of values is 0 to 5
  5426                           ; switch strategies available:
  5427                           ; Name         Instructions Cycles
  5428                           ; simple_byte           19    10 (average)
  5429                           ;	Chosen strategy is simple_byte
  5430   001AB4  51FD               	movf	??_baudrate_calculate& (0+255),w,b
  5431   001AB6  0A00               	xorlw	0	; case 0
  5432   001AB8  B4D8               	btfsc	status,2,c
  5433   001ABA  EF2F  F00B         	goto	l1716
  5434   001ABE  0A01               	xorlw	1	; case 1
  5435   001AC0  B4D8               	btfsc	status,2,c
  5436   001AC2  EF89  F00B         	goto	l1718
  5437   001AC6  0A03               	xorlw	3	; case 2
  5438   001AC8  B4D8               	btfsc	status,2,c
  5439   001ACA  EFE3  F00B         	goto	l1719
  5440   001ACE  0A01               	xorlw	1	; case 3
  5441   001AD0  B4D8               	btfsc	status,2,c
  5442   001AD2  EF3D  F00C         	goto	l1720
  5443   001AD6  0A07               	xorlw	7	; case 4
  5444   001AD8  B4D8               	btfsc	status,2,c
  5445   001ADA  EF97  F00C         	goto	l1721
  5446   001ADE  0A01               	xorlw	1	; case 5
  5447   001AE0  B4D8               	btfsc	status,2,c
  5448   001AE2  EFF0  F00C         	goto	l1722
  5449   001AE6  EF75  F00D         	goto	l10582
  5450   001AEA                     l10582:
  5451                           
  5452                           ;MKAL_layer/USART/hal_usart.c: 164:     SPBRG =(uint8)((uint32)baud_rate);
  5453   001AEA  C195  F05D         	movff	baudrate_calculate@baud_rate,___fltol@f1
  5454   001AEE  C196  F05E         	movff	baudrate_calculate@baud_rate+1,___fltol@f1+1
  5455   001AF2  C197  F05F         	movff	baudrate_calculate@baud_rate+2,___fltol@f1+2
  5456   001AF6  C198  F060         	movff	baudrate_calculate@baud_rate+3,___fltol@f1+3
  5457   001AFA  EC42  F01D         	call	___fltol	;wreg free
  5458   001AFE  505D               	movf	?___fltol^0,w,c
  5459   001B00  6EAF               	movwf	175,c	;volatile
  5460                           
  5461                           ;MKAL_layer/USART/hal_usart.c: 165:     SPBRGH =(uint8)(((uint32)baud_rate) >> 8);
  5462   001B02  C195  F05D         	movff	baudrate_calculate@baud_rate,___fltol@f1
  5463   001B06  C196  F05E         	movff	baudrate_calculate@baud_rate+1,___fltol@f1+1
  5464   001B0A  C197  F05F         	movff	baudrate_calculate@baud_rate+2,___fltol@f1+2
  5465   001B0E  C198  F060         	movff	baudrate_calculate@baud_rate+3,___fltol@f1+3
  5466   001B12  EC42  F01D         	call	___fltol	;wreg free
  5467   001B16  C05E  F05D         	movff	?___fltol+1,?___fltol
  5468   001B1A  C05F  F05E         	movff	?___fltol+2,?___fltol+1
  5469   001B1E  C060  F05F         	movff	?___fltol+3,?___fltol+2
  5470   001B22  6A60               	clrf	(?___fltol+3)^0,c
  5471   001B24  505D               	movf	?___fltol^0,w,c
  5472   001B26  6EB0               	movwf	176,c	;volatile
  5473   001B28  0012               	return		;funcret
  5474   001B2A                     __end_of_baudrate_calculate:
  5475                           	callstack 0
  5476                           
  5477 ;; *************** function _motor_intialize *****************
  5478 ;; Defined at:
  5479 ;;		line 7 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  motor_pin       1   25[COMRAM] PTR const struct .
  5482 ;;		 -> motor_1(2), motor_2(2), 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  ret             1   27[COMRAM] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      unsigned char 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        3 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 6
  5501 ;; This function calls:
  5502 ;;		_GPIO_pIN_INTIALIZE
  5503 ;; This function is called by:
  5504 ;;		_intitialized_functions
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text23
  5509   0051B4                     __ptext23:
  5510                           	callstack 0
  5511   0051B4                     _motor_intialize:
  5512                           	callstack 23
  5513   0051B4                     
  5514                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 9:     if (((void*)0) == motor_pin){
  5515   0051B4  501A               	movf	motor_intialize@motor_pin^0,w,c
  5516   0051B6  A4D8               	btfss	status,2,c
  5517   0051B8  EFE0  F028         	goto	u11031
  5518   0051BC  EFE2  F028         	goto	u11030
  5519   0051C0                     u11031:
  5520   0051C0  EFE6  F028         	goto	l10952
  5521   0051C4                     u11030:
  5522   0051C4                     
  5523                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 10:         ret =(Std_ReturnType)0x00;
  5524   0051C4  0E00               	movlw	0
  5525   0051C6  6E1C               	movwf	motor_intialize@ret^0,c
  5526                           
  5527                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 11:     }
  5528   0051C8  EFF6  F028         	goto	l10954
  5529   0051CC                     l10952:
  5530                           
  5531                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 13:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 14:    
      +                               ret =GPIO_pIN_INTIALIZE(&(motor_pin->motor_pin_config[0]));
  5532   0051CC  C01A  F016         	movff	motor_intialize@motor_pin,GPIO_pIN_INTIALIZE@config_pin
  5533   0051D0  6A17               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5534   0051D2  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5535   0051D6  6E1C               	movwf	motor_intialize@ret^0,c
  5536                           
  5537                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 15:         ret =GPIO_pIN_INTIALIZE(&(motor_pin->mot
      +                          or_pin_config[1]));
  5538   0051D8  C01A  F01B         	movff	motor_intialize@motor_pin,??_motor_intialize
  5539   0051DC  0E01               	movlw	1
  5540   0051DE  261B               	addwf	??_motor_intialize^0,f,c
  5541   0051E0  C01B  F016         	movff	??_motor_intialize,GPIO_pIN_INTIALIZE@config_pin
  5542   0051E4  6A17               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5543   0051E6  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5544   0051EA  6E1C               	movwf	motor_intialize@ret^0,c
  5545   0051EC                     l10954:
  5546                           
  5547                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 17:      return ret ;
  5548   0051EC  501C               	movf	motor_intialize@ret^0,w,c
  5549   0051EE  0012               	return		;funcret
  5550   0051F0                     __end_of_motor_intialize:
  5551                           	callstack 0
  5552                           
  5553 ;; *************** function _lcd_4bit_intialize *****************
  5554 ;; Defined at:
  5555 ;;		line 22 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  lcd             1   28[COMRAM] PTR const struct .
  5558 ;;		 -> lcd_4bit(6), 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  ret             1   31[COMRAM] unsigned char 
  5561 ;;  l_data_pins_    1   30[COMRAM] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      unsigned char 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5571 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;Total ram usage:        4 bytes
  5576 ;; Hardware stack levels used: 1
  5577 ;; Hardware stack levels required when called: 7
  5578 ;; This function calls:
  5579 ;;		_GPIO_pIN_INTIALIZE
  5580 ;;		_lcd_4bit_send_command
  5581 ;; This function is called by:
  5582 ;;		_intitialized_functions
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text24
  5587   003C84                     __ptext24:
  5588                           	callstack 0
  5589   003C84                     _lcd_4bit_intialize:
  5590                           	callstack 22
  5591   003C84                     
  5592                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 24:     uint8 l_data_pins_counter = 0;
  5593   003C84  0E00               	movlw	0
  5594   003C86  6E1F               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  5595                           
  5596                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 25:     if(((void*)0) == lcd){
  5597   003C88  501D               	movf	lcd_4bit_intialize@lcd^0,w,c
  5598   003C8A  A4D8               	btfss	status,2,c
  5599   003C8C  EF4A  F01E         	goto	u10951
  5600   003C90  EF4C  F01E         	goto	u10950
  5601   003C94                     u10951:
  5602   003C94  EF50  F01E         	goto	l10840
  5603   003C98                     u10950:
  5604   003C98                     
  5605                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 26:         ret = 0;
  5606   003C98  0E00               	movlw	0
  5607   003C9A  6E20               	movwf	lcd_4bit_intialize@ret^0,c
  5608                           
  5609                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 27:     }
  5610   003C9C  EFBD  F01E         	goto	l10876
  5611   003CA0                     l10840:
  5612                           
  5613                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 29:         ret = GPIO_pIN_INTIALIZE(&(lcd->lcd_rs));
  5614   003CA0  C01D  F016         	movff	lcd_4bit_intialize@lcd,GPIO_pIN_INTIALIZE@config_pin
  5615   003CA4  6A17               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5616   003CA6  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5617   003CAA  6E20               	movwf	lcd_4bit_intialize@ret^0,c
  5618                           
  5619                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 30:         ret = GPIO_pIN_INTIALIZE(&(lcd->lcd_en));
  5620   003CAC  C01D  F01E         	movff	lcd_4bit_intialize@lcd,??_lcd_4bit_intialize
  5621   003CB0  0E01               	movlw	1
  5622   003CB2  261E               	addwf	??_lcd_4bit_intialize^0,f,c
  5623   003CB4  C01E  F016         	movff	??_lcd_4bit_intialize,GPIO_pIN_INTIALIZE@config_pin
  5624   003CB8  6A17               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5625   003CBA  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5626   003CBE  6E20               	movwf	lcd_4bit_intialize@ret^0,c
  5627   003CC0                     
  5628                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 31:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  5629   003CC0  0E00               	movlw	0
  5630   003CC2  6E1F               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  5631   003CC4                     l10848:
  5632   003CC4  501D               	movf	lcd_4bit_intialize@lcd^0,w,c
  5633   003CC6  241F               	addwf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  5634   003CC8  6E1E               	movwf	??_lcd_4bit_intialize^0,c
  5635   003CCA  0E02               	movlw	2
  5636   003CCC  261E               	addwf	??_lcd_4bit_intialize^0,f,c
  5637   003CCE  C01E  F016         	movff	??_lcd_4bit_intialize,GPIO_pIN_INTIALIZE@config_pin
  5638   003CD2  6A17               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5639   003CD4  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5640   003CD8                     
  5641                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 33:         }
  5642   003CD8  2A1F               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  5643   003CDA  0E03               	movlw	3
  5644   003CDC  641F               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  5645   003CDE  EF73  F01E         	goto	u10961
  5646   003CE2  EF75  F01E         	goto	u10960
  5647   003CE6                     u10961:
  5648   003CE6  EF62  F01E         	goto	l10848
  5649   003CEA                     u10960:
  5650   003CEA                     
  5651                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 34:         _delay((unsigned long)((20)*(8000000UL/400
      +                          0.0)));
  5652   003CEA  0E34               	movlw	52
  5653   003CEC  6E1E               	movwf	??_lcd_4bit_intialize^0,c
  5654   003CEE  0EF2               	movlw	242
  5655   003CF0                     u12427:
  5656   003CF0  2EE8               	decfsz	wreg,f,c
  5657   003CF2  D7FE               	bra	u12427
  5658   003CF4  2E1E               	decfsz	??_lcd_4bit_intialize^0,f,c
  5659   003CF6  D7FC               	bra	u12427
  5660   003CF8  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5661   003CFC  0E38               	movlw	56
  5662   003CFE  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5663   003D00  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5664   003D04                     
  5665                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 36:         _delay((unsigned long)((5)*(8000000UL/4000
      +                          .0)));
  5666   003D04  0E0D               	movlw	13
  5667   003D06  6E1E               	movwf	??_lcd_4bit_intialize^0,c
  5668   003D08  0EFC               	movlw	252
  5669   003D0A                     u12437:
  5670   003D0A  2EE8               	decfsz	wreg,f,c
  5671   003D0C  D7FE               	bra	u12437
  5672   003D0E  2E1E               	decfsz	??_lcd_4bit_intialize^0,f,c
  5673   003D10  D7FC               	bra	u12437
  5674   003D12  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5675   003D16  0E38               	movlw	56
  5676   003D18  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5677   003D1A  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5678   003D1E                     
  5679                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 38:         _delay((unsigned long)((150)*(8000000UL/40
      +                          00000.0)));
  5680   003D1E  0E64               	movlw	100
  5681   003D20                     u12447:
  5682   003D20  2EE8               	decfsz	wreg,f,c
  5683   003D22  D7FE               	bra	u12447
  5684   003D24  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5685   003D28  0E38               	movlw	56
  5686   003D2A  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5687   003D2C  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5688   003D30  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5689   003D34  0E01               	movlw	1
  5690   003D36  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5691   003D38  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5692   003D3C  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5693   003D40  0E02               	movlw	2
  5694   003D42  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5695   003D44  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5696   003D48  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5697   003D4C  0E06               	movlw	6
  5698   003D4E  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5699   003D50  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5700   003D54  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5701   003D58  0E0C               	movlw	12
  5702   003D5A  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5703   003D5C  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5704   003D60  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5705   003D64  0E28               	movlw	40
  5706   003D66  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5707   003D68  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5708   003D6C                     
  5709                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 46:         ret = lcd_4bit_send_command(lcd, 0x80);
  5710   003D6C  C01D  F01A         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  5711   003D70  0E80               	movlw	128
  5712   003D72  6E1B               	movwf	lcd_4bit_send_command@command^0,c
  5713   003D74  EC25  F027         	call	_lcd_4bit_send_command	;wreg free
  5714   003D78  6E20               	movwf	lcd_4bit_intialize@ret^0,c
  5715   003D7A                     l10876:
  5716                           
  5717                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 48:     return ret;
  5718   003D7A  5020               	movf	lcd_4bit_intialize@ret^0,w,c
  5719   003D7C  0012               	return		;funcret
  5720   003D7E                     __end_of_lcd_4bit_intialize:
  5721                           	callstack 0
  5722                           
  5723 ;; *************** function _lcd_4bit_send_command *****************
  5724 ;; Defined at:
  5725 ;;		line 59 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  lcd             1   25[COMRAM] PTR const struct .
  5728 ;;		 -> lcd_4bit(6), 
  5729 ;;  command         1   26[COMRAM] unsigned char 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  ret             1   27[COMRAM] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      unsigned char 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:        3 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 6
  5748 ;; This function calls:
  5749 ;;		_GPIO_pIN_WRITE_LOGIC
  5750 ;;		_lcd_4bit_send_enable_signal
  5751 ;;		_lcd_send_4bits
  5752 ;; This function is called by:
  5753 ;;		_main
  5754 ;;		_lcd_4bit_intialize
  5755 ;;		_lcd_4bit_set_cursor
  5756 ;;		_lcd_4bit_send_custom_char
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text25
  5761   004E4A                     __ptext25:
  5762                           	callstack 0
  5763   004E4A                     _lcd_4bit_send_command:
  5764                           	callstack 22
  5765   004E4A                     
  5766                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 61:     if(((void*)0) == lcd){
  5767   004E4A  501A               	movf	lcd_4bit_send_command@lcd^0,w,c
  5768   004E4C  A4D8               	btfss	status,2,c
  5769   004E4E  EF2B  F027         	goto	u10271
  5770   004E52  EF2D  F027         	goto	u10270
  5771   004E56                     u10271:
  5772   004E56  EF31  F027         	goto	l10274
  5773   004E5A                     u10270:
  5774   004E5A                     
  5775                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 62:         ret = 0;
  5776   004E5A  0E00               	movlw	0
  5777   004E5C  6E1C               	movwf	lcd_4bit_send_command@ret^0,c
  5778                           
  5779                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 63:     }
  5780   004E5E  EF52  F027         	goto	l10276
  5781   004E62                     l10274:
  5782                           
  5783                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 67:         ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  5784   004E62  C01A  F00D         	movff	lcd_4bit_send_command@lcd,GPIO_pIN_WRITE_LOGIC@config_pin
  5785   004E66  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  5786   004E68  0E00               	movlw	0
  5787   004E6A  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  5788   004E6C  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  5789   004E70  6E1C               	movwf	lcd_4bit_send_command@ret^0,c
  5790                           
  5791                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 69:         ret = lcd_send_4bits(lcd, command >> 4);
  5792   004E72  C01A  F016         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  5793   004E76  381B               	swapf	lcd_4bit_send_command@command^0,w,c
  5794   004E78  0B0F               	andlw	15
  5795   004E7A  6E17               	movwf	lcd_send_4bits@_data_command^0,c
  5796   004E7C  ECEC  F025         	call	_lcd_send_4bits	;wreg free
  5797   004E80  6E1C               	movwf	lcd_4bit_send_command@ret^0,c
  5798                           
  5799                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
  5800   004E82  C01A  F016         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  5801   004E86  ECF8  F028         	call	_lcd_4bit_send_enable_signal	;wreg free
  5802   004E8A  6E1C               	movwf	lcd_4bit_send_command@ret^0,c
  5803                           
  5804                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 73:         ret = lcd_send_4bits(lcd, command);
  5805   004E8C  C01A  F016         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  5806   004E90  C01B  F017         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  5807   004E94  ECEC  F025         	call	_lcd_send_4bits	;wreg free
  5808   004E98  6E1C               	movwf	lcd_4bit_send_command@ret^0,c
  5809                           
  5810                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 75:         ret = lcd_4bit_send_enable_signal(lcd);
  5811   004E9A  C01A  F016         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  5812   004E9E  ECF8  F028         	call	_lcd_4bit_send_enable_signal	;wreg free
  5813   004EA2  6E1C               	movwf	lcd_4bit_send_command@ret^0,c
  5814   004EA4                     l10276:
  5815                           
  5816                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 77:     return ret;
  5817   004EA4  501C               	movf	lcd_4bit_send_command@ret^0,w,c
  5818   004EA6  0012               	return		;funcret
  5819   004EA8                     __end_of_lcd_4bit_send_command:
  5820                           	callstack 0
  5821                           
  5822 ;; *************** function _lcd_send_4bits *****************
  5823 ;; Defined at:
  5824 ;;		line 464 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  lcd             1   21[COMRAM] PTR const struct .
  5827 ;;		 -> lcd_4bit(6), 
  5828 ;;  _data_comman    1   22[COMRAM] unsigned char 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  ret             1   24[COMRAM] unsigned char 
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      unsigned char 
  5833 ;; Registers used:
  5834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;Total ram usage:        4 bytes
  5845 ;; Hardware stack levels used: 1
  5846 ;; Hardware stack levels required when called: 5
  5847 ;; This function calls:
  5848 ;;		_GPIO_pIN_WRITE_LOGIC
  5849 ;; This function is called by:
  5850 ;;		_lcd_4bit_send_command
  5851 ;;		_lcd_4bit_send_char_data
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text26
  5856   004BD8                     __ptext26:
  5857                           	callstack 0
  5858   004BD8                     _lcd_send_4bits:
  5859                           	callstack 22
  5860   004BD8  C016  F018         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  5861   004BDC  0E02               	movlw	2
  5862   004BDE  2618               	addwf	??_lcd_send_4bits^0,f,c
  5863   004BE0  C018  F00D         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  5864   004BE4  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  5865   004BE6  5017               	movf	lcd_send_4bits@_data_command^0,w,c
  5866   004BE8  0B01               	andlw	1
  5867   004BEA  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  5868   004BEC  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  5869   004BF0  C016  F018         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  5870   004BF4  0E03               	movlw	3
  5871   004BF6  2618               	addwf	??_lcd_send_4bits^0,f,c
  5872   004BF8  C018  F00D         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  5873   004BFC  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  5874   004BFE  90D8               	bcf	status,0,c
  5875   004C00  3017               	rrcf	lcd_send_4bits@_data_command^0,w,c
  5876   004C02  0B01               	andlw	1
  5877   004C04  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  5878   004C06  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  5879   004C0A  C016  F018         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  5880   004C0E  0E04               	movlw	4
  5881   004C10  2618               	addwf	??_lcd_send_4bits^0,f,c
  5882   004C12  C018  F00D         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  5883   004C16  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  5884   004C18  4017               	rrncf	lcd_send_4bits@_data_command^0,w,c
  5885   004C1A  42E8               	rrncf	wreg,f,c
  5886   004C1C  0B3F               	andlw	63
  5887   004C1E  0B01               	andlw	1
  5888   004C20  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  5889   004C22  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  5890   004C26                     
  5891                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 469:     ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  5892   004C26  C016  F018         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  5893   004C2A  0E05               	movlw	5
  5894   004C2C  2618               	addwf	??_lcd_send_4bits^0,f,c
  5895   004C2E  C018  F00D         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  5896   004C32  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  5897   004C34  3817               	swapf	lcd_send_4bits@_data_command^0,w,c
  5898   004C36  46E8               	rlncf	wreg,f,c
  5899   004C38  0B1F               	andlw	31
  5900   004C3A  0B01               	andlw	1
  5901   004C3C  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  5902   004C3E  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  5903   004C42  6E19               	movwf	lcd_send_4bits@ret^0,c
  5904                           
  5905                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 470:     return ret;
  5906   004C44  5019               	movf	lcd_send_4bits@ret^0,w,c
  5907   004C46  0012               	return		;funcret
  5908   004C48                     __end_of_lcd_send_4bits:
  5909                           	callstack 0
  5910                           
  5911 ;; *************** function _lcd_4bit_send_enable_signal *****************
  5912 ;; Defined at:
  5913 ;;		line 480 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  lcd             1   21[COMRAM] PTR const struct .
  5916 ;;		 -> lcd_4bit(6), 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  ret             1   23[COMRAM] unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      unsigned char 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;Total ram usage:        3 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 5
  5935 ;; This function calls:
  5936 ;;		_GPIO_pIN_WRITE_LOGIC
  5937 ;; This function is called by:
  5938 ;;		_lcd_4bit_send_command
  5939 ;;		_lcd_4bit_send_char_data
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text27
  5944   0051F0                     __ptext27:
  5945                           	callstack 0
  5946   0051F0                     _lcd_4bit_send_enable_signal:
  5947                           	callstack 22
  5948   0051F0  C016  F017         	movff	lcd_4bit_send_enable_signal@lcd,??_lcd_4bit_send_enable_signal
  5949   0051F4  0E01               	movlw	1
  5950   0051F6  2617               	addwf	??_lcd_4bit_send_enable_signal^0,f,c
  5951   0051F8  C017  F00D         	movff	??_lcd_4bit_send_enable_signal,GPIO_pIN_WRITE_LOGIC@config_pin
  5952   0051FC  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  5953   0051FE  0E01               	movlw	1
  5954   005200  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  5955   005202  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  5956   005206                     
  5957                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 483:     _delay((unsigned long)((5)*(8000000UL/4000000
      +                          .0)));
  5958   005206  0E03               	movlw	3
  5959   005208                     u12457:
  5960   005208  2EE8               	decfsz	wreg,f,c
  5961   00520A  D7FE               	bra	u12457
  5962   00520C  0000               	nop	
  5963   00520E                     
  5964                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 484:     ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_en), GP
      +                          IO_LOW);
  5965   00520E  C016  F017         	movff	lcd_4bit_send_enable_signal@lcd,??_lcd_4bit_send_enable_signal
  5966   005212  0E01               	movlw	1
  5967   005214  2617               	addwf	??_lcd_4bit_send_enable_signal^0,f,c
  5968   005216  C017  F00D         	movff	??_lcd_4bit_send_enable_signal,GPIO_pIN_WRITE_LOGIC@config_pin
  5969   00521A  6A0E               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  5970   00521C  0E00               	movlw	0
  5971   00521E  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  5972   005220  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  5973   005224  6E18               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  5974   005226                     
  5975                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 485:     return ret;
  5976   005226  5018               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  5977   005228  0012               	return		;funcret
  5978   00522A                     __end_of_lcd_4bit_send_enable_signal:
  5979                           	callstack 0
  5980                           
  5981 ;; *************** function _ccp2_init *****************
  5982 ;; Defined at:
  5983 ;;		line 12 in file "MKAL_layer/CCP2/hal_ccp2.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  ccp2_           2   37[COMRAM] PTR const struct .
  5986 ;;		 -> ccp2_(10), 
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  ret             1   43[COMRAM] unsigned char 
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  1    wreg      unsigned char 
  5991 ;; Registers used:
  5992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;Total ram usage:        7 bytes
  6003 ;; Hardware stack levels used: 1
  6004 ;; Hardware stack levels required when called: 6
  6005 ;; This function calls:
  6006 ;;		_GPIO_pIN_INTIALIZE
  6007 ;;		___lldiv
  6008 ;;		___lmul
  6009 ;; This function is called by:
  6010 ;;		_intitialized_functions
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text28
  6015   002F46                     __ptext28:
  6016                           	callstack 0
  6017   002F46                     _ccp2_init:
  6018                           	callstack 23
  6019   002F46                     
  6020                           ;MKAL_layer/CCP2/hal_ccp2.c: 14:     if (((void*)0) == ccp2_){
  6021   002F46  5026               	movf	ccp2_init@ccp2_^0,w,c
  6022   002F48  1027               	iorwf	(ccp2_init@ccp2_+1)^0,w,c
  6023   002F4A  A4D8               	btfss	status,2,c
  6024   002F4C  EFAA  F017         	goto	u10981
  6025   002F50  EFAC  F017         	goto	u10980
  6026   002F54                     u10981:
  6027   002F54  EFB0  F017         	goto	l10912
  6028   002F58                     u10980:
  6029   002F58                     
  6030                           ;MKAL_layer/CCP2/hal_ccp2.c: 15:         ret =(Std_ReturnType)0x00;
  6031   002F58  0E00               	movlw	0
  6032   002F5A  6E2C               	movwf	ccp2_init@ret^0,c
  6033                           
  6034                           ;MKAL_layer/CCP2/hal_ccp2.c: 16:     }
  6035   002F5C  EF55  F018         	goto	l10944
  6036   002F60                     l10912:
  6037                           
  6038                           ;MKAL_layer/CCP2/hal_ccp2.c: 18:     {;MKAL_layer/CCP2/hal_ccp2.c: 19:         (CCP2CONb
      +                          its.CCP2M =0);
  6039   002F60  0EF0               	movlw	-16
  6040   002F62  16BA               	andwf	186,f,c	;volatile
  6041   002F64                     
  6042                           ;MKAL_layer/CCP2/hal_ccp2.c: 20:         if(ccp2_->ccp2_mode == ccp2_capture_mode_select
      +                          )
  6043   002F64  EE20 F002          	lfsr	2,2
  6044   002F68  5026               	movf	ccp2_init@ccp2_^0,w,c
  6045   002F6A  26D9               	addwf	fsr2l,f,c
  6046   002F6C  5027               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6047   002F6E  22DA               	addwfc	fsr2h,f,c
  6048   002F70  50DF               	movf	indf2,w,c
  6049   002F72  A4D8               	btfss	status,2,c
  6050   002F74  EFBE  F017         	goto	u10991
  6051   002F78  EFC0  F017         	goto	u10990
  6052   002F7C                     u10991:
  6053   002F7C  EFC2  F017         	goto	l10918
  6054   002F80                     u10990:
  6055   002F80  EF3F  F018         	goto	l10930
  6056   002F84                     l10918:
  6057   002F84  EE20 F002          	lfsr	2,2
  6058   002F88  5026               	movf	ccp2_init@ccp2_^0,w,c
  6059   002F8A  26D9               	addwf	fsr2l,f,c
  6060   002F8C  5027               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6061   002F8E  22DA               	addwfc	fsr2h,f,c
  6062   002F90  04DE               	decf	postinc2,w,c
  6063   002F92  A4D8               	btfss	status,2,c
  6064   002F94  EFCE  F017         	goto	u11001
  6065   002F98  EFD0  F017         	goto	u11000
  6066   002F9C                     u11001:
  6067   002F9C  EFD2  F017         	goto	l10922
  6068   002FA0                     u11000:
  6069   002FA0  EF3F  F018         	goto	l10930
  6070   002FA4                     l10922:
  6071   002FA4  EE20 F002          	lfsr	2,2
  6072   002FA8  5026               	movf	ccp2_init@ccp2_^0,w,c
  6073   002FAA  26D9               	addwf	fsr2l,f,c
  6074   002FAC  5027               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6075   002FAE  22DA               	addwfc	fsr2h,f,c
  6076   002FB0  0E02               	movlw	2
  6077   002FB2  18DE               	xorwf	postinc2,w,c
  6078   002FB4  A4D8               	btfss	status,2,c
  6079   002FB6  EFDF  F017         	goto	u11011
  6080   002FBA  EFE1  F017         	goto	u11010
  6081   002FBE                     u11011:
  6082   002FBE  EF3F  F018         	goto	l10930
  6083   002FC2                     u11010:
  6084   002FC2                     
  6085                           ;MKAL_layer/CCP2/hal_ccp2.c: 57:         {;MKAL_layer/CCP2/hal_ccp2.c: 58:             i
      +                          f(ccp2_->ccp2_mode_variant == 0x0E){
  6086   002FC2  EE20 F003          	lfsr	2,3
  6087   002FC6  5026               	movf	ccp2_init@ccp2_^0,w,c
  6088   002FC8  26D9               	addwf	fsr2l,f,c
  6089   002FCA  5027               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6090   002FCC  22DA               	addwfc	fsr2h,f,c
  6091   002FCE  0E0E               	movlw	14
  6092   002FD0  18DE               	xorwf	postinc2,w,c
  6093   002FD2  A4D8               	btfss	status,2,c
  6094   002FD4  EFEE  F017         	goto	u11021
  6095   002FD8  EFF0  F017         	goto	u11020
  6096   002FDC                     u11021:
  6097   002FDC  EFF4  F017         	goto	l10928
  6098   002FE0                     u11020:
  6099   002FE0                     
  6100                           ;MKAL_layer/CCP2/hal_ccp2.c: 59:                 (CCP2CONbits.CCP2M =0x0E);
  6101   002FE0  50BA               	movf	186,w,c	;volatile
  6102   002FE2  0BF0               	andlw	-16
  6103   002FE4  090E               	iorlw	14
  6104   002FE6  6EBA               	movwf	186,c	;volatile
  6105   002FE8                     l10928:
  6106                           
  6107                           ;MKAL_layer/CCP2/hal_ccp2.c: 63:                 PR2 = (uint8)((8000000UL/(4 *ccp2_->ccp
      +                          2_timer2_postscaler_cfg *ccp2_->ccp2_timer2_prescaler_cfg * ccp2_->ccp2_pwm_frequence))-
      +                          1);
  6108   002FE8  0E00               	movlw	0
  6109   002FEA  6E19               	movwf	___lldiv@dividend^0,c
  6110   002FEC  0E12               	movlw	18
  6111   002FEE  6E1A               	movwf	(___lldiv@dividend+1)^0,c
  6112   002FF0  0E7A               	movlw	122
  6113   002FF2  6E1B               	movwf	(___lldiv@dividend+2)^0,c
  6114   002FF4  0E00               	movlw	0
  6115   002FF6  6E1C               	movwf	(___lldiv@dividend+3)^0,c
  6116   002FF8  EE20 F009          	lfsr	2,9
  6117   002FFC  5026               	movf	ccp2_init@ccp2_^0,w,c
  6118   002FFE  26D9               	addwf	fsr2l,f,c
  6119   003000  5027               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6120   003002  22DA               	addwfc	fsr2h,f,c
  6121   003004  38DF               	swapf	223,w,c
  6122   003006  0B03               	andlw	3
  6123   003008  6E28               	movwf	??_ccp2_init^0,c
  6124   00300A  EE20 F009          	lfsr	2,9
  6125   00300E  5026               	movf	ccp2_init@ccp2_^0,w,c
  6126   003010  26D9               	addwf	fsr2l,f,c
  6127   003012  5027               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6128   003014  22DA               	addwfc	fsr2h,f,c
  6129   003016  50DF               	movf	223,w,c
  6130   003018  0B0F               	andlw	15
  6131   00301A  6E29               	movwf	(??_ccp2_init+1)^0,c
  6132   00301C  5029               	movf	(??_ccp2_init+1)^0,w,c
  6133   00301E  0228               	mulwf	??_ccp2_init^0,c
  6134   003020  CFF3 F02A          	movff	prodl,??_ccp2_init+2
  6135   003024  CFF4 F02B          	movff	prodh,??_ccp2_init+3
  6136   003028  90D8               	bcf	status,0,c
  6137   00302A  362A               	rlcf	(??_ccp2_init+2)^0,f,c
  6138   00302C  362B               	rlcf	(??_ccp2_init+3)^0,f,c
  6139   00302E  90D8               	bcf	status,0,c
  6140   003030  362A               	rlcf	(??_ccp2_init+2)^0,f,c
  6141   003032  362B               	rlcf	(??_ccp2_init+3)^0,f,c
  6142   003034  C02A  F00D         	movff	??_ccp2_init+2,___lmul@multiplier
  6143   003038  C02B  F00E         	movff	??_ccp2_init+3,___lmul@multiplier+1
  6144   00303C  0E00               	movlw	0
  6145   00303E  BE0E               	btfsc	(___lmul@multiplier+1)^0,7,c
  6146   003040  0EFF               	movlw	-1
  6147   003042  6E0F               	movwf	(___lmul@multiplier+2)^0,c
  6148   003044  6E10               	movwf	(___lmul@multiplier+3)^0,c
  6149   003046  EE20 F005          	lfsr	2,5
  6150   00304A  5026               	movf	ccp2_init@ccp2_^0,w,c
  6151   00304C  26D9               	addwf	fsr2l,f,c
  6152   00304E  5027               	movf	(ccp2_init@ccp2_+1)^0,w,c
  6153   003050  22DA               	addwfc	fsr2h,f,c
  6154   003052  CFDE F011          	movff	postinc2,___lmul@multiplicand
  6155   003056  CFDE F012          	movff	postinc2,___lmul@multiplicand+1
  6156   00305A  CFDE F013          	movff	postinc2,___lmul@multiplicand+2
  6157   00305E  CFDE F014          	movff	postinc2,___lmul@multiplicand+3
  6158   003062  EC91  F026         	call	___lmul	;wreg free
  6159   003066  C00D  F01D         	movff	?___lmul,___lldiv@divisor
  6160   00306A  C00E  F01E         	movff	?___lmul+1,___lldiv@divisor+1
  6161   00306E  C00F  F01F         	movff	?___lmul+2,___lldiv@divisor+2
  6162   003072  C010  F020         	movff	?___lmul+3,___lldiv@divisor+3
  6163   003076  EC12  F022         	call	___lldiv	;wreg free
  6164   00307A  0419               	decf	?___lldiv^0,w,c
  6165   00307C  6ECB               	movwf	203,c	;volatile
  6166   00307E                     l10930:
  6167   00307E  0E04               	movlw	4
  6168   003080  2426               	addwf	ccp2_init@ccp2_^0,w,c
  6169   003082  6E16               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  6170   003084  0E00               	movlw	0
  6171   003086  2027               	addwfc	(ccp2_init@ccp2_+1)^0,w,c
  6172   003088  6E17               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  6173   00308A  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  6174   00308E                     
  6175                           ;MKAL_layer/CCP2/hal_ccp2.c: 74:         (PIE2bits.CCP2IE = 1);
  6176   00308E  80A0               	bsf	160,0,c	;volatile
  6177   003090                     
  6178                           ;MKAL_layer/CCP2/hal_ccp2.c: 75:         (PIR2bits.CCP2IF = 0);
  6179   003090  90A1               	bcf	161,0,c	;volatile
  6180   003092                     
  6181                           ;MKAL_layer/CCP2/hal_ccp2.c: 76:         CCP2_Interrupthandler = ccp2_->CCP2_handler;
  6182   003092  C026  FFD9         	movff	ccp2_init@ccp2_,fsr2l
  6183   003096  C027  FFDA         	movff	ccp2_init@ccp2_+1,fsr2h
  6184   00309A  CFDE F0B6          	movff	postinc2,_CCP2_Interrupthandler
  6185   00309E  CFDD F0B7          	movff	postdec2,_CCP2_Interrupthandler+1
  6186   0030A2                     
  6187                           ;MKAL_layer/CCP2/hal_ccp2.c: 90:         (INTCONbits.GIE =1);
  6188   0030A2  8EF2               	bsf	242,7,c	;volatile
  6189   0030A4                     
  6190                           ;MKAL_layer/CCP2/hal_ccp2.c: 91:         (INTCONbits.PEIE =1);
  6191   0030A4  8CF2               	bsf	242,6,c	;volatile
  6192   0030A6                     
  6193                           ;MKAL_layer/CCP2/hal_ccp2.c: 95:         ret =(Std_ReturnType)0x01;
  6194   0030A6  0E01               	movlw	1
  6195   0030A8  6E2C               	movwf	ccp2_init@ret^0,c
  6196   0030AA                     l10944:
  6197                           
  6198                           ;MKAL_layer/CCP2/hal_ccp2.c: 97:     return ret;
  6199   0030AA  502C               	movf	ccp2_init@ret^0,w,c
  6200   0030AC  0012               	return		;funcret
  6201   0030AE                     __end_of_ccp2_init:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _ccp1_init *****************
  6205 ;; Defined at:
  6206 ;;		line 12 in file "MKAL_layer/CCP1/hal_ccp1.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  ccp1_           2   37[COMRAM] PTR const struct .
  6209 ;;		 -> ccp1_(10), 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  ret             1   43[COMRAM] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      unsigned char 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:        7 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 6
  6228 ;; This function calls:
  6229 ;;		_GPIO_pIN_INTIALIZE
  6230 ;;		___lldiv
  6231 ;;		___lmul
  6232 ;; This function is called by:
  6233 ;;		_intitialized_functions
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text29
  6238   0030AE                     __ptext29:
  6239                           	callstack 0
  6240   0030AE                     _ccp1_init:
  6241                           	callstack 23
  6242   0030AE                     
  6243                           ;MKAL_layer/CCP1/hal_ccp1.c: 14:     if (((void*)0) == ccp1_){
  6244   0030AE  5026               	movf	ccp1_init@ccp1_^0,w,c
  6245   0030B0  1027               	iorwf	(ccp1_init@ccp1_+1)^0,w,c
  6246   0030B2  A4D8               	btfss	status,2,c
  6247   0030B4  EF5E  F018         	goto	u11051
  6248   0030B8  EF60  F018         	goto	u11050
  6249   0030BC                     u11051:
  6250   0030BC  EF64  F018         	goto	l10982
  6251   0030C0                     u11050:
  6252   0030C0                     
  6253                           ;MKAL_layer/CCP1/hal_ccp1.c: 15:         ret =(Std_ReturnType)0x00;
  6254   0030C0  0E00               	movlw	0
  6255   0030C2  6E2C               	movwf	ccp1_init@ret^0,c
  6256                           
  6257                           ;MKAL_layer/CCP1/hal_ccp1.c: 16:     }
  6258   0030C4  EF09  F019         	goto	l11014
  6259   0030C8                     l10982:
  6260                           
  6261                           ;MKAL_layer/CCP1/hal_ccp1.c: 18:     {;MKAL_layer/CCP1/hal_ccp1.c: 19:         (CCP1CONb
      +                          its.CCP1M =0);
  6262   0030C8  0EF0               	movlw	-16
  6263   0030CA  16BD               	andwf	189,f,c	;volatile
  6264   0030CC                     
  6265                           ;MKAL_layer/CCP1/hal_ccp1.c: 20:         if(ccp1_->ccp1_mode == ccp1_capture_mode_select
      +                          )
  6266   0030CC  EE20 F002          	lfsr	2,2
  6267   0030D0  5026               	movf	ccp1_init@ccp1_^0,w,c
  6268   0030D2  26D9               	addwf	fsr2l,f,c
  6269   0030D4  5027               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6270   0030D6  22DA               	addwfc	fsr2h,f,c
  6271   0030D8  50DF               	movf	indf2,w,c
  6272   0030DA  A4D8               	btfss	status,2,c
  6273   0030DC  EF72  F018         	goto	u11061
  6274   0030E0  EF74  F018         	goto	u11060
  6275   0030E4                     u11061:
  6276   0030E4  EF76  F018         	goto	l10988
  6277   0030E8                     u11060:
  6278   0030E8  EFF3  F018         	goto	l11000
  6279   0030EC                     l10988:
  6280   0030EC  EE20 F002          	lfsr	2,2
  6281   0030F0  5026               	movf	ccp1_init@ccp1_^0,w,c
  6282   0030F2  26D9               	addwf	fsr2l,f,c
  6283   0030F4  5027               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6284   0030F6  22DA               	addwfc	fsr2h,f,c
  6285   0030F8  04DE               	decf	postinc2,w,c
  6286   0030FA  A4D8               	btfss	status,2,c
  6287   0030FC  EF82  F018         	goto	u11071
  6288   003100  EF84  F018         	goto	u11070
  6289   003104                     u11071:
  6290   003104  EF86  F018         	goto	l10992
  6291   003108                     u11070:
  6292   003108  EFF3  F018         	goto	l11000
  6293   00310C                     l10992:
  6294   00310C  EE20 F002          	lfsr	2,2
  6295   003110  5026               	movf	ccp1_init@ccp1_^0,w,c
  6296   003112  26D9               	addwf	fsr2l,f,c
  6297   003114  5027               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6298   003116  22DA               	addwfc	fsr2h,f,c
  6299   003118  0E02               	movlw	2
  6300   00311A  18DE               	xorwf	postinc2,w,c
  6301   00311C  A4D8               	btfss	status,2,c
  6302   00311E  EF93  F018         	goto	u11081
  6303   003122  EF95  F018         	goto	u11080
  6304   003126                     u11081:
  6305   003126  EFF3  F018         	goto	l11000
  6306   00312A                     u11080:
  6307   00312A                     
  6308                           ;MKAL_layer/CCP1/hal_ccp1.c: 57:         {;MKAL_layer/CCP1/hal_ccp1.c: 58:             i
      +                          f(ccp1_->ccp1_mode_variant == 0x0E){
  6309   00312A  EE20 F003          	lfsr	2,3
  6310   00312E  5026               	movf	ccp1_init@ccp1_^0,w,c
  6311   003130  26D9               	addwf	fsr2l,f,c
  6312   003132  5027               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6313   003134  22DA               	addwfc	fsr2h,f,c
  6314   003136  0E0E               	movlw	14
  6315   003138  18DE               	xorwf	postinc2,w,c
  6316   00313A  A4D8               	btfss	status,2,c
  6317   00313C  EFA2  F018         	goto	u11091
  6318   003140  EFA4  F018         	goto	u11090
  6319   003144                     u11091:
  6320   003144  EFA8  F018         	goto	l10998
  6321   003148                     u11090:
  6322   003148                     
  6323                           ;MKAL_layer/CCP1/hal_ccp1.c: 59:                 (CCP1CONbits.CCP1M =0x0E);
  6324   003148  50BD               	movf	189,w,c	;volatile
  6325   00314A  0BF0               	andlw	-16
  6326   00314C  090E               	iorlw	14
  6327   00314E  6EBD               	movwf	189,c	;volatile
  6328   003150                     l10998:
  6329                           
  6330                           ;MKAL_layer/CCP1/hal_ccp1.c: 63:                 PR2 = (uint8)((8000000UL/(4*ccp1_->time
      +                          r2_postscaler_cfg *ccp1_->timer2_prescaler_cfg * ccp1_->pwm_frequence))-1);
  6331   003150  0E00               	movlw	0
  6332   003152  6E19               	movwf	___lldiv@dividend^0,c
  6333   003154  0E12               	movlw	18
  6334   003156  6E1A               	movwf	(___lldiv@dividend+1)^0,c
  6335   003158  0E7A               	movlw	122
  6336   00315A  6E1B               	movwf	(___lldiv@dividend+2)^0,c
  6337   00315C  0E00               	movlw	0
  6338   00315E  6E1C               	movwf	(___lldiv@dividend+3)^0,c
  6339   003160  EE20 F009          	lfsr	2,9
  6340   003164  5026               	movf	ccp1_init@ccp1_^0,w,c
  6341   003166  26D9               	addwf	fsr2l,f,c
  6342   003168  5027               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6343   00316A  22DA               	addwfc	fsr2h,f,c
  6344   00316C  38DF               	swapf	223,w,c
  6345   00316E  0B03               	andlw	3
  6346   003170  6E28               	movwf	??_ccp1_init^0,c
  6347   003172  EE20 F009          	lfsr	2,9
  6348   003176  5026               	movf	ccp1_init@ccp1_^0,w,c
  6349   003178  26D9               	addwf	fsr2l,f,c
  6350   00317A  5027               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6351   00317C  22DA               	addwfc	fsr2h,f,c
  6352   00317E  50DF               	movf	223,w,c
  6353   003180  0B0F               	andlw	15
  6354   003182  6E29               	movwf	(??_ccp1_init+1)^0,c
  6355   003184  5029               	movf	(??_ccp1_init+1)^0,w,c
  6356   003186  0228               	mulwf	??_ccp1_init^0,c
  6357   003188  CFF3 F02A          	movff	prodl,??_ccp1_init+2
  6358   00318C  CFF4 F02B          	movff	prodh,??_ccp1_init+3
  6359   003190  90D8               	bcf	status,0,c
  6360   003192  362A               	rlcf	(??_ccp1_init+2)^0,f,c
  6361   003194  362B               	rlcf	(??_ccp1_init+3)^0,f,c
  6362   003196  90D8               	bcf	status,0,c
  6363   003198  362A               	rlcf	(??_ccp1_init+2)^0,f,c
  6364   00319A  362B               	rlcf	(??_ccp1_init+3)^0,f,c
  6365   00319C  C02A  F00D         	movff	??_ccp1_init+2,___lmul@multiplier
  6366   0031A0  C02B  F00E         	movff	??_ccp1_init+3,___lmul@multiplier+1
  6367   0031A4  0E00               	movlw	0
  6368   0031A6  BE0E               	btfsc	(___lmul@multiplier+1)^0,7,c
  6369   0031A8  0EFF               	movlw	-1
  6370   0031AA  6E0F               	movwf	(___lmul@multiplier+2)^0,c
  6371   0031AC  6E10               	movwf	(___lmul@multiplier+3)^0,c
  6372   0031AE  EE20 F005          	lfsr	2,5
  6373   0031B2  5026               	movf	ccp1_init@ccp1_^0,w,c
  6374   0031B4  26D9               	addwf	fsr2l,f,c
  6375   0031B6  5027               	movf	(ccp1_init@ccp1_+1)^0,w,c
  6376   0031B8  22DA               	addwfc	fsr2h,f,c
  6377   0031BA  CFDE F011          	movff	postinc2,___lmul@multiplicand
  6378   0031BE  CFDE F012          	movff	postinc2,___lmul@multiplicand+1
  6379   0031C2  CFDE F013          	movff	postinc2,___lmul@multiplicand+2
  6380   0031C6  CFDE F014          	movff	postinc2,___lmul@multiplicand+3
  6381   0031CA  EC91  F026         	call	___lmul	;wreg free
  6382   0031CE  C00D  F01D         	movff	?___lmul,___lldiv@divisor
  6383   0031D2  C00E  F01E         	movff	?___lmul+1,___lldiv@divisor+1
  6384   0031D6  C00F  F01F         	movff	?___lmul+2,___lldiv@divisor+2
  6385   0031DA  C010  F020         	movff	?___lmul+3,___lldiv@divisor+3
  6386   0031DE  EC12  F022         	call	___lldiv	;wreg free
  6387   0031E2  0419               	decf	?___lldiv^0,w,c
  6388   0031E4  6ECB               	movwf	203,c	;volatile
  6389   0031E6                     l11000:
  6390   0031E6  0E04               	movlw	4
  6391   0031E8  2426               	addwf	ccp1_init@ccp1_^0,w,c
  6392   0031EA  6E16               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  6393   0031EC  0E00               	movlw	0
  6394   0031EE  2027               	addwfc	(ccp1_init@ccp1_+1)^0,w,c
  6395   0031F0  6E17               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  6396   0031F2  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  6397   0031F6                     
  6398                           ;MKAL_layer/CCP1/hal_ccp1.c: 74:         (PIE1bits.CCP1IE = 1);
  6399   0031F6  849D               	bsf	157,2,c	;volatile
  6400   0031F8                     
  6401                           ;MKAL_layer/CCP1/hal_ccp1.c: 75:         (PIR1bits.CCP1IF = 0);
  6402   0031F8  949E               	bcf	158,2,c	;volatile
  6403   0031FA                     
  6404                           ;MKAL_layer/CCP1/hal_ccp1.c: 76:         CCP1_Interrupthandler = ccp1_->CCP1_handler;
  6405   0031FA  C026  FFD9         	movff	ccp1_init@ccp1_,fsr2l
  6406   0031FE  C027  FFDA         	movff	ccp1_init@ccp1_+1,fsr2h
  6407   003202  CFDE F0B8          	movff	postinc2,_CCP1_Interrupthandler
  6408   003206  CFDD F0B9          	movff	postdec2,_CCP1_Interrupthandler+1
  6409   00320A                     
  6410                           ;MKAL_layer/CCP1/hal_ccp1.c: 90:         (INTCONbits.GIE =1);
  6411   00320A  8EF2               	bsf	242,7,c	;volatile
  6412   00320C                     
  6413                           ;MKAL_layer/CCP1/hal_ccp1.c: 91:         (INTCONbits.PEIE =1);
  6414   00320C  8CF2               	bsf	242,6,c	;volatile
  6415   00320E                     
  6416                           ;MKAL_layer/CCP1/hal_ccp1.c: 95:         ret =(Std_ReturnType)0x01;
  6417   00320E  0E01               	movlw	1
  6418   003210  6E2C               	movwf	ccp1_init@ret^0,c
  6419   003212                     l11014:
  6420                           
  6421                           ;MKAL_layer/CCP1/hal_ccp1.c: 97:     return ret;
  6422   003212  502C               	movf	ccp1_init@ret^0,w,c
  6423   003214  0012               	return		;funcret
  6424   003216                     __end_of_ccp1_init:
  6425                           	callstack 0
  6426                           
  6427 ;; *************** function ___lmul *****************
  6428 ;; Defined at:
  6429 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  multiplier      4   12[COMRAM] unsigned long 
  6432 ;;  multiplicand    4   16[COMRAM] unsigned long 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  product         4   20[COMRAM] unsigned long 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  4   12[COMRAM] unsigned long 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6444 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;Total ram usage:       12 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; Hardware stack levels required when called: 4
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_main
  6455 ;;		_ccp1_init
  6456 ;;		_ccp2_init
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text30
  6461   004D22                     __ptext30:
  6462                           	callstack 0
  6463   004D22                     ___lmul:
  6464                           	callstack 24
  6465   004D22  0E00               	movlw	0
  6466   004D24  6E15               	movwf	___lmul@product^0,c
  6467   004D26  0E00               	movlw	0
  6468   004D28  6E16               	movwf	(___lmul@product+1)^0,c
  6469   004D2A  0E00               	movlw	0
  6470   004D2C  6E17               	movwf	(___lmul@product+2)^0,c
  6471   004D2E  0E00               	movlw	0
  6472   004D30  6E18               	movwf	(___lmul@product+3)^0,c
  6473   004D32                     l10654:
  6474   004D32  A00D               	btfss	___lmul@multiplier^0,0,c
  6475   004D34  EF9E  F026         	goto	u10691
  6476   004D38  EFA0  F026         	goto	u10690
  6477   004D3C                     u10691:
  6478   004D3C  EFA8  F026         	goto	l10658
  6479   004D40                     u10690:
  6480   004D40  5011               	movf	___lmul@multiplicand^0,w,c
  6481   004D42  2615               	addwf	___lmul@product^0,f,c
  6482   004D44  5012               	movf	(___lmul@multiplicand+1)^0,w,c
  6483   004D46  2216               	addwfc	(___lmul@product+1)^0,f,c
  6484   004D48  5013               	movf	(___lmul@multiplicand+2)^0,w,c
  6485   004D4A  2217               	addwfc	(___lmul@product+2)^0,f,c
  6486   004D4C  5014               	movf	(___lmul@multiplicand+3)^0,w,c
  6487   004D4E  2218               	addwfc	(___lmul@product+3)^0,f,c
  6488   004D50                     l10658:
  6489   004D50  90D8               	bcf	status,0,c
  6490   004D52  3611               	rlcf	___lmul@multiplicand^0,f,c
  6491   004D54  3612               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6492   004D56  3613               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6493   004D58  3614               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6494   004D5A  90D8               	bcf	status,0,c
  6495   004D5C  3210               	rrcf	(___lmul@multiplier+3)^0,f,c
  6496   004D5E  320F               	rrcf	(___lmul@multiplier+2)^0,f,c
  6497   004D60  320E               	rrcf	(___lmul@multiplier+1)^0,f,c
  6498   004D62  320D               	rrcf	___lmul@multiplier^0,f,c
  6499   004D64  500D               	movf	___lmul@multiplier^0,w,c
  6500   004D66  100E               	iorwf	(___lmul@multiplier+1)^0,w,c
  6501   004D68  100F               	iorwf	(___lmul@multiplier+2)^0,w,c
  6502   004D6A  1010               	iorwf	(___lmul@multiplier+3)^0,w,c
  6503   004D6C  A4D8               	btfss	status,2,c
  6504   004D6E  EFBB  F026         	goto	u10701
  6505   004D72  EFBD  F026         	goto	u10700
  6506   004D76                     u10701:
  6507   004D76  EF99  F026         	goto	l10654
  6508   004D7A                     u10700:
  6509   004D7A  C015  F00D         	movff	___lmul@product,?___lmul
  6510   004D7E  C016  F00E         	movff	___lmul@product+1,?___lmul+1
  6511   004D82  C017  F00F         	movff	___lmul@product+2,?___lmul+2
  6512   004D86  C018  F010         	movff	___lmul@product+3,?___lmul+3
  6513   004D8A  0012               	return		;funcret
  6514   004D8C                     __end_of___lmul:
  6515                           	callstack 0
  6516                           
  6517 ;; *************** function ___lldiv *****************
  6518 ;; Defined at:
  6519 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  dividend        4   24[COMRAM] unsigned long 
  6522 ;;  divisor         4   28[COMRAM] unsigned long 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  quotient        4   32[COMRAM] unsigned long 
  6525 ;;  counter         1   36[COMRAM] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  4   24[COMRAM] unsigned long 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;Total ram usage:       13 bytes
  6540 ;; Hardware stack levels used: 1
  6541 ;; Hardware stack levels required when called: 4
  6542 ;; This function calls:
  6543 ;;		Nothing
  6544 ;; This function is called by:
  6545 ;;		_main
  6546 ;;		_ccp1_init
  6547 ;;		_ccp2_init
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text31
  6552   004424                     __ptext31:
  6553                           	callstack 0
  6554   004424                     ___lldiv:
  6555                           	callstack 24
  6556   004424  0E00               	movlw	0
  6557   004426  6E21               	movwf	___lldiv@quotient^0,c
  6558   004428  0E00               	movlw	0
  6559   00442A  6E22               	movwf	(___lldiv@quotient+1)^0,c
  6560   00442C  0E00               	movlw	0
  6561   00442E  6E23               	movwf	(___lldiv@quotient+2)^0,c
  6562   004430  0E00               	movlw	0
  6563   004432  6E24               	movwf	(___lldiv@quotient+3)^0,c
  6564   004434  501D               	movf	___lldiv@divisor^0,w,c
  6565   004436  101E               	iorwf	(___lldiv@divisor+1)^0,w,c
  6566   004438  101F               	iorwf	(___lldiv@divisor+2)^0,w,c
  6567   00443A  1020               	iorwf	(___lldiv@divisor+3)^0,w,c
  6568   00443C  B4D8               	btfsc	status,2,c
  6569   00443E  EF23  F022         	goto	u10711
  6570   004442  EF25  F022         	goto	u10710
  6571   004446                     u10711:
  6572   004446  EF5B  F022         	goto	l1793
  6573   00444A                     u10710:
  6574   00444A  0E01               	movlw	1
  6575   00444C  6E25               	movwf	___lldiv@counter^0,c
  6576   00444E  EF2F  F022         	goto	l10670
  6577   004452                     l10668:
  6578   004452  90D8               	bcf	status,0,c
  6579   004454  361D               	rlcf	___lldiv@divisor^0,f,c
  6580   004456  361E               	rlcf	(___lldiv@divisor+1)^0,f,c
  6581   004458  361F               	rlcf	(___lldiv@divisor+2)^0,f,c
  6582   00445A  3620               	rlcf	(___lldiv@divisor+3)^0,f,c
  6583   00445C  2A25               	incf	___lldiv@counter^0,f,c
  6584   00445E                     l10670:
  6585   00445E  AE20               	btfss	(___lldiv@divisor+3)^0,7,c
  6586   004460  EF34  F022         	goto	u10721
  6587   004464  EF36  F022         	goto	u10720
  6588   004468                     u10721:
  6589   004468  EF29  F022         	goto	l10668
  6590   00446C                     u10720:
  6591   00446C                     l10672:
  6592   00446C  90D8               	bcf	status,0,c
  6593   00446E  3621               	rlcf	___lldiv@quotient^0,f,c
  6594   004470  3622               	rlcf	(___lldiv@quotient+1)^0,f,c
  6595   004472  3623               	rlcf	(___lldiv@quotient+2)^0,f,c
  6596   004474  3624               	rlcf	(___lldiv@quotient+3)^0,f,c
  6597   004476  501D               	movf	___lldiv@divisor^0,w,c
  6598   004478  5C19               	subwf	___lldiv@dividend^0,w,c
  6599   00447A  501E               	movf	(___lldiv@divisor+1)^0,w,c
  6600   00447C  581A               	subwfb	(___lldiv@dividend+1)^0,w,c
  6601   00447E  501F               	movf	(___lldiv@divisor+2)^0,w,c
  6602   004480  581B               	subwfb	(___lldiv@dividend+2)^0,w,c
  6603   004482  5020               	movf	(___lldiv@divisor+3)^0,w,c
  6604   004484  581C               	subwfb	(___lldiv@dividend+3)^0,w,c
  6605   004486  A0D8               	btfss	status,0,c
  6606   004488  EF48  F022         	goto	u10731
  6607   00448C  EF4A  F022         	goto	u10730
  6608   004490                     u10731:
  6609   004490  EF53  F022         	goto	l10680
  6610   004494                     u10730:
  6611   004494  501D               	movf	___lldiv@divisor^0,w,c
  6612   004496  5E19               	subwf	___lldiv@dividend^0,f,c
  6613   004498  501E               	movf	(___lldiv@divisor+1)^0,w,c
  6614   00449A  5A1A               	subwfb	(___lldiv@dividend+1)^0,f,c
  6615   00449C  501F               	movf	(___lldiv@divisor+2)^0,w,c
  6616   00449E  5A1B               	subwfb	(___lldiv@dividend+2)^0,f,c
  6617   0044A0  5020               	movf	(___lldiv@divisor+3)^0,w,c
  6618   0044A2  5A1C               	subwfb	(___lldiv@dividend+3)^0,f,c
  6619   0044A4  8021               	bsf	___lldiv@quotient^0,0,c
  6620   0044A6                     l10680:
  6621   0044A6  90D8               	bcf	status,0,c
  6622   0044A8  3220               	rrcf	(___lldiv@divisor+3)^0,f,c
  6623   0044AA  321F               	rrcf	(___lldiv@divisor+2)^0,f,c
  6624   0044AC  321E               	rrcf	(___lldiv@divisor+1)^0,f,c
  6625   0044AE  321D               	rrcf	___lldiv@divisor^0,f,c
  6626   0044B0  2E25               	decfsz	___lldiv@counter^0,f,c
  6627   0044B2  EF36  F022         	goto	l10672
  6628   0044B6                     l1793:
  6629   0044B6  C021  F019         	movff	___lldiv@quotient,?___lldiv
  6630   0044BA  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  6631   0044BE  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  6632   0044C2  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  6633   0044C6  0012               	return		;funcret
  6634   0044C8                     __end_of___lldiv:
  6635                           	callstack 0
  6636                           
  6637 ;; *************** function _Timer2_init *****************
  6638 ;; Defined at:
  6639 ;;		line 13 in file "MKAL_layer/timer2/hal_timer2.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  Timer2          2   12[COMRAM] PTR const struct .
  6642 ;;		 -> Timer2(4), 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  ret             1   15[COMRAM] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      unsigned char 
  6647 ;; Registers used:
  6648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;Total ram usage:        4 bytes
  6659 ;; Hardware stack levels used: 1
  6660 ;; Hardware stack levels required when called: 4
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_intitialized_functions
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text32
  6669   0044C8                     __ptext32:
  6670                           	callstack 0
  6671   0044C8                     _Timer2_init:
  6672                           	callstack 25
  6673   0044C8                     
  6674                           ;MKAL_layer/timer2/hal_timer2.c: 15:     if (((void*)0) == Timer2){
  6675   0044C8  500D               	movf	Timer2_init@Timer2^0,w,c
  6676   0044CA  100E               	iorwf	(Timer2_init@Timer2+1)^0,w,c
  6677   0044CC  A4D8               	btfss	status,2,c
  6678   0044CE  EF6B  F022         	goto	u10971
  6679   0044D2  EF6D  F022         	goto	u10970
  6680   0044D6                     u10971:
  6681   0044D6  EF71  F022         	goto	l1552
  6682   0044DA                     u10970:
  6683   0044DA                     
  6684                           ;MKAL_layer/timer2/hal_timer2.c: 16:         ret =(Std_ReturnType)0x00;
  6685   0044DA  0E00               	movlw	0
  6686   0044DC  6E10               	movwf	Timer2_init@ret^0,c
  6687                           
  6688                           ;MKAL_layer/timer2/hal_timer2.c: 17:     }
  6689   0044DE  EFB1  F022         	goto	l10902
  6690   0044E2                     l1552:
  6691                           
  6692                           ;MKAL_layer/timer2/hal_timer2.c: 19:     {;MKAL_layer/timer2/hal_timer2.c: 20:         (
      +                          T2CONbits.TMR2ON = 0);
  6693   0044E2  94CA               	bcf	202,2,c	;volatile
  6694   0044E4                     
  6695                           ;MKAL_layer/timer2/hal_timer2.c: 21:         (T2CONbits.T2CKPS = Timer2->timer2_prescale
      +                          r_cfg);;
  6696   0044E4  EE20 F003          	lfsr	2,3
  6697   0044E8  500D               	movf	Timer2_init@Timer2^0,w,c
  6698   0044EA  26D9               	addwf	fsr2l,f,c
  6699   0044EC  500E               	movf	(Timer2_init@Timer2+1)^0,w,c
  6700   0044EE  22DA               	addwfc	fsr2h,f,c
  6701   0044F0  38DF               	swapf	223,w,c
  6702   0044F2  0B03               	andlw	3
  6703   0044F4  6E0F               	movwf	??_Timer2_init^0,c
  6704   0044F6  50CA               	movf	202,w,c	;volatile
  6705   0044F8  180F               	xorwf	??_Timer2_init^0,w,c
  6706   0044FA  0BFC               	andlw	-4
  6707   0044FC  180F               	xorwf	??_Timer2_init^0,w,c
  6708   0044FE  6ECA               	movwf	202,c	;volatile
  6709                           
  6710                           ;MKAL_layer/timer2/hal_timer2.c: 22:         (T2CONbits.TOUTPS = Timer2->timer2_postscal
      +                          er_cfg);;
  6711   004500  EE20 F003          	lfsr	2,3
  6712   004504  500D               	movf	Timer2_init@Timer2^0,w,c
  6713   004506  26D9               	addwf	fsr2l,f,c
  6714   004508  500E               	movf	(Timer2_init@Timer2+1)^0,w,c
  6715   00450A  22DA               	addwfc	fsr2h,f,c
  6716   00450C  50DF               	movf	223,w,c
  6717   00450E  0B0F               	andlw	15
  6718   004510  6E0F               	movwf	??_Timer2_init^0,c
  6719   004512  460F               	rlncf	??_Timer2_init^0,f,c
  6720   004514  460F               	rlncf	??_Timer2_init^0,f,c
  6721   004516  460F               	rlncf	??_Timer2_init^0,f,c
  6722   004518  50CA               	movf	202,w,c	;volatile
  6723   00451A  180F               	xorwf	??_Timer2_init^0,w,c
  6724   00451C  0B87               	andlw	-121
  6725   00451E  180F               	xorwf	??_Timer2_init^0,w,c
  6726   004520  6ECA               	movwf	202,c	;volatile
  6727                           
  6728                           ;MKAL_layer/timer2/hal_timer2.c: 23:         TMR2 = Timer2->timer1_preload_value;
  6729   004522  EE20 F002          	lfsr	2,2
  6730   004526  500D               	movf	Timer2_init@Timer2^0,w,c
  6731   004528  26D9               	addwf	fsr2l,f,c
  6732   00452A  500E               	movf	(Timer2_init@Timer2+1)^0,w,c
  6733   00452C  22DA               	addwfc	fsr2h,f,c
  6734   00452E  50DF               	movf	indf2,w,c
  6735   004530  6ECC               	movwf	204,c	;volatile
  6736                           
  6737                           ;MKAL_layer/timer2/hal_timer2.c: 24:         Timer2_preload = Timer2->timer1_preload_val
      +                          ue;
  6738   004532  EE20 F002          	lfsr	2,2
  6739   004536  500D               	movf	Timer2_init@Timer2^0,w,c
  6740   004538  26D9               	addwf	fsr2l,f,c
  6741   00453A  500E               	movf	(Timer2_init@Timer2+1)^0,w,c
  6742   00453C  22DA               	addwfc	fsr2h,f,c
  6743   00453E  50DF               	movf	indf2,w,c
  6744   004540  0100               	movlb	0	; () banked
  6745   004542  6FC0               	movwf	_Timer2_preload& (0+255),b
  6746   004544                     
  6747                           ; BSR set to: 0
  6748                           ;MKAL_layer/timer2/hal_timer2.c: 26:         (PIE1bits.TMR2IE = 1);
  6749   004544  829D               	bsf	157,1,c	;volatile
  6750   004546                     
  6751                           ; BSR set to: 0
  6752                           ;MKAL_layer/timer2/hal_timer2.c: 27:         (PIR1bits.TMR2IF = 0);
  6753   004546  929E               	bcf	158,1,c	;volatile
  6754   004548                     
  6755                           ; BSR set to: 0
  6756                           ;MKAL_layer/timer2/hal_timer2.c: 28:         TIMER2_Interrupthandler = Timer2->Timer2_ha
      +                          ndler;
  6757   004548  C00D  FFD9         	movff	Timer2_init@Timer2,fsr2l
  6758   00454C  C00E  FFDA         	movff	Timer2_init@Timer2+1,fsr2h
  6759   004550  CFDE F090          	movff	postinc2,_TIMER2_Interrupthandler
  6760   004554  CFDD F091          	movff	postdec2,_TIMER2_Interrupthandler+1
  6761   004558                     
  6762                           ; BSR set to: 0
  6763                           ;MKAL_layer/timer2/hal_timer2.c: 42:         (INTCONbits.GIE =1);
  6764   004558  8EF2               	bsf	242,7,c	;volatile
  6765   00455A                     
  6766                           ; BSR set to: 0
  6767                           ;MKAL_layer/timer2/hal_timer2.c: 43:         (INTCONbits.PEIE =1);
  6768   00455A  8CF2               	bsf	242,6,c	;volatile
  6769   00455C                     
  6770                           ; BSR set to: 0
  6771                           ;MKAL_layer/timer2/hal_timer2.c: 47:         (T2CONbits.TMR2ON = 1);
  6772   00455C  84CA               	bsf	202,2,c	;volatile
  6773   00455E                     
  6774                           ; BSR set to: 0
  6775                           ;MKAL_layer/timer2/hal_timer2.c: 48:         ret = (Std_ReturnType)0x01;
  6776   00455E  0E01               	movlw	1
  6777   004560  6E10               	movwf	Timer2_init@ret^0,c
  6778   004562                     l10902:
  6779                           
  6780                           ;MKAL_layer/timer2/hal_timer2.c: 50:     return ret;
  6781   004562  5010               	movf	Timer2_init@ret^0,w,c
  6782   004564  0012               	return		;funcret
  6783   004566                     __end_of_Timer2_init:
  6784                           	callstack 0
  6785                           
  6786 ;; *************** function _MSSP_I2C_Init *****************
  6787 ;; Defined at:
  6788 ;;		line 20 in file "MKAL_layer/I2C/hal_i2c.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  i2c_obj         2    3[BANK0 ] PTR const struct .
  6791 ;;		 -> mssp_i2c(15), 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  ret             1    0[BANK1 ] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      unsigned char 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Totals:         0       2       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;Total ram usage:        3 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; Hardware stack levels required when called: 6
  6810 ;; This function calls:
  6811 ;;		_I2C_Master_Mode_Clock_Configurations
  6812 ;;		_I2C_Slave_Mode_Configurations
  6813 ;;		_MSSP_I2C_Interrupt_Configurations
  6814 ;;		_MSSP_I2C_Mode_GPIO_CFG
  6815 ;; This function is called by:
  6816 ;;		_intitialized_functions
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text33
  6821   00337C                     __ptext33:
  6822                           	callstack 0
  6823   00337C                     _MSSP_I2C_Init:
  6824                           	callstack 23
  6825   00337C                     
  6826                           ;MKAL_layer/I2C/hal_i2c.c: 22:     if(((void*)0) == i2c_obj){
  6827   00337C  0100               	movlb	0	; () banked
  6828   00337E  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6829   003380  11FF               	iorwf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6830   003382  A4D8               	btfss	status,2,c
  6831   003384  EFC6  F019         	goto	u10861
  6832   003388  EFC8  F019         	goto	u10860
  6833   00338C                     u10861:
  6834   00338C  EFCD  F019         	goto	l941
  6835   003390                     u10860:
  6836   003390                     
  6837                           ; BSR set to: 0
  6838                           ;MKAL_layer/I2C/hal_i2c.c: 23:         ret = (Std_ReturnType)0x00;
  6839   003390  0E00               	movlw	0
  6840   003392  0101               	movlb	1	; () banked
  6841   003394  6F95               	movwf	MSSP_I2C_Init@ret& (0+255),b
  6842                           
  6843                           ;MKAL_layer/I2C/hal_i2c.c: 24:     }
  6844   003396  EF68  F01A         	goto	l10832
  6845   00339A                     l941:
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;MKAL_layer/I2C/hal_i2c.c: 27:         (SSPCON1bits.SSPEN = 0);
  6849   00339A  9AC6               	bcf	198,5,c	;volatile
  6850   00339C                     
  6851                           ; BSR set to: 0
  6852                           ;MKAL_layer/I2C/hal_i2c.c: 29:         if(1 == i2c_obj->i2c_cfg.i2c_mode){
  6853   00339C  EE20 F006          	lfsr	2,6
  6854   0033A0  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6855   0033A2  26D9               	addwf	fsr2l,f,c
  6856   0033A4  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6857   0033A6  22DA               	addwfc	fsr2h,f,c
  6858   0033A8  A0DF               	btfss	indf2,0,c
  6859   0033AA  EFD9  F019         	goto	u10871
  6860   0033AE  EFDB  F019         	goto	u10870
  6861   0033B2                     u10871:
  6862   0033B2  EFE3  F019         	goto	l10794
  6863   0033B6                     u10870:
  6864   0033B6                     
  6865                           ; BSR set to: 0
  6866                           ;MKAL_layer/I2C/hal_i2c.c: 31:             I2C_Master_Mode_Clock_Configurations(i2c_obj)
      +                          ;
  6867   0033B6  C0FE  F0FB         	movff	MSSP_I2C_Init@i2c_obj,I2C_Master_Mode_Clock_Configurations@i2c_obj
  6868   0033BA  C0FF  F0FC         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Master_Mode_Clock_Configurations@i2c_obj+1
  6869   0033BE  ECB3  F022         	call	_I2C_Master_Mode_Clock_Configurations	;wreg free
  6870                           
  6871                           ;MKAL_layer/I2C/hal_i2c.c: 32:         }
  6872   0033C2  EF1F  F01A         	goto	l10808
  6873   0033C6                     l10794:
  6874                           
  6875                           ; BSR set to: 0
  6876   0033C6  EE20 F006          	lfsr	2,6
  6877   0033CA  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6878   0033CC  26D9               	addwf	fsr2l,f,c
  6879   0033CE  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6880   0033D0  22DA               	addwfc	fsr2h,f,c
  6881   0033D2  B0DF               	btfsc	indf2,0,c
  6882   0033D4  EFEE  F019         	goto	u10881
  6883   0033D8  EFF0  F019         	goto	u10880
  6884   0033DC                     u10881:
  6885   0033DC  EF1F  F01A         	goto	l10808
  6886   0033E0                     u10880:
  6887   0033E0                     
  6888                           ; BSR set to: 0
  6889                           ;MKAL_layer/I2C/hal_i2c.c: 35:             if(1 == i2c_obj->i2c_cfg.i2c_general_call){
  6890   0033E0  EE20 F006          	lfsr	2,6
  6891   0033E4  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6892   0033E6  26D9               	addwf	fsr2l,f,c
  6893   0033E8  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6894   0033EA  22DA               	addwfc	fsr2h,f,c
  6895   0033EC  A6DF               	btfss	indf2,3,c
  6896   0033EE  EFFB  F019         	goto	u10891
  6897   0033F2  EFFD  F019         	goto	u10890
  6898   0033F6                     u10891:
  6899   0033F6  EF00  F01A         	goto	l10800
  6900   0033FA                     u10890:
  6901   0033FA                     
  6902                           ; BSR set to: 0
  6903                           ;MKAL_layer/I2C/hal_i2c.c: 36:                 (SSPCON2bits.GCEN = 1);
  6904   0033FA  8EC5               	bsf	197,7,c	;volatile
  6905                           
  6906                           ;MKAL_layer/I2C/hal_i2c.c: 37:             }
  6907   0033FC  EF0E  F01A         	goto	l947
  6908   003400                     l10800:
  6909                           
  6910                           ; BSR set to: 0
  6911   003400  EE20 F006          	lfsr	2,6
  6912   003404  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6913   003406  26D9               	addwf	fsr2l,f,c
  6914   003408  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6915   00340A  22DA               	addwfc	fsr2h,f,c
  6916   00340C  B6DF               	btfsc	indf2,3,c
  6917   00340E  EF0B  F01A         	goto	u10901
  6918   003412  EF0D  F01A         	goto	u10900
  6919   003416                     u10901:
  6920   003416  EF0E  F01A         	goto	l947
  6921   00341A                     u10900:
  6922   00341A                     
  6923                           ; BSR set to: 0
  6924                           ;MKAL_layer/I2C/hal_i2c.c: 39:                 (SSPCON2bits.GCEN = 0);
  6925   00341A  9EC5               	bcf	197,7,c	;volatile
  6926   00341C                     l947:
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;MKAL_layer/I2C/hal_i2c.c: 43:             SSPCON1bits.WCOL = 0;
  6930   00341C  9EC6               	bcf	198,7,c	;volatile
  6931                           
  6932                           ;MKAL_layer/I2C/hal_i2c.c: 45:             SSPCON1bits.SSPOV = 0;
  6933   00341E  9CC6               	bcf	198,6,c	;volatile
  6934                           
  6935                           ;MKAL_layer/I2C/hal_i2c.c: 47:             SSPCON1bits.CKP = 1;
  6936   003420  88C6               	bsf	198,4,c	;volatile
  6937   003422                     
  6938                           ; BSR set to: 0
  6939                           ;MKAL_layer/I2C/hal_i2c.c: 49:             SSPADD = i2c_obj->i2c_cfg.i2c_slave_address;
  6940   003422  EE20 F005          	lfsr	2,5
  6941   003426  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6942   003428  26D9               	addwf	fsr2l,f,c
  6943   00342A  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6944   00342C  22DA               	addwfc	fsr2h,f,c
  6945   00342E  50DF               	movf	indf2,w,c
  6946   003430  6EC8               	movwf	200,c	;volatile
  6947   003432                     
  6948                           ; BSR set to: 0
  6949                           ;MKAL_layer/I2C/hal_i2c.c: 51:             I2C_Slave_Mode_Configurations(i2c_obj);
  6950   003432  C0FE  F00D         	movff	MSSP_I2C_Init@i2c_obj,I2C_Slave_Mode_Configurations@i2c_obj
  6951   003436  C0FF  F00E         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Slave_Mode_Configurations@i2c_obj+1
  6952   00343A  ECD0  F02A         	call	_I2C_Slave_Mode_Configurations	;wreg free
  6953   00343E                     l10808:
  6954                           
  6955                           ;MKAL_layer/I2C/hal_i2c.c: 55:         MSSP_I2C_Mode_GPIO_CFG();
  6956   00343E  EC58  F02B         	call	_MSSP_I2C_Mode_GPIO_CFG	;wreg free
  6957   003442                     
  6958                           ;MKAL_layer/I2C/hal_i2c.c: 57:         if(1 == i2c_obj->i2c_cfg.i2c_slew_rate){
  6959   003442  0100               	movlb	0	; () banked
  6960   003444  EE20 F006          	lfsr	2,6
  6961   003448  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6962   00344A  26D9               	addwf	fsr2l,f,c
  6963   00344C  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6964   00344E  22DA               	addwfc	fsr2h,f,c
  6965   003450  A2DF               	btfss	indf2,1,c
  6966   003452  EF2D  F01A         	goto	u10911
  6967   003456  EF2F  F01A         	goto	u10910
  6968   00345A                     u10911:
  6969   00345A  EF32  F01A         	goto	l10814
  6970   00345E                     u10910:
  6971   00345E                     
  6972                           ; BSR set to: 0
  6973                           ;MKAL_layer/I2C/hal_i2c.c: 58:             (SSPSTATbits.SMP = 1);
  6974   00345E  8EC7               	bsf	199,7,c	;volatile
  6975                           
  6976                           ;MKAL_layer/I2C/hal_i2c.c: 59:         }
  6977   003460  EF40  F01A         	goto	l10818
  6978   003464                     l10814:
  6979                           
  6980                           ; BSR set to: 0
  6981   003464  EE20 F006          	lfsr	2,6
  6982   003468  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  6983   00346A  26D9               	addwf	fsr2l,f,c
  6984   00346C  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  6985   00346E  22DA               	addwfc	fsr2h,f,c
  6986   003470  B2DF               	btfsc	indf2,1,c
  6987   003472  EF3D  F01A         	goto	u10921
  6988   003476  EF3F  F01A         	goto	u10920
  6989   00347A                     u10921:
  6990   00347A  EF40  F01A         	goto	l10818
  6991   00347E                     u10920:
  6992   00347E                     
  6993                           ; BSR set to: 0
  6994                           ;MKAL_layer/I2C/hal_i2c.c: 61:             (SSPSTATbits.SMP = 0);
  6995   00347E  9EC7               	bcf	199,7,c	;volatile
  6996   003480                     l10818:
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;MKAL_layer/I2C/hal_i2c.c: 65:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  7000   003480  EE20 F006          	lfsr	2,6
  7001   003484  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7002   003486  26D9               	addwf	fsr2l,f,c
  7003   003488  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7004   00348A  22DA               	addwfc	fsr2h,f,c
  7005   00348C  A4DF               	btfss	indf2,2,c
  7006   00348E  EF4B  F01A         	goto	u10931
  7007   003492  EF4D  F01A         	goto	u10930
  7008   003496                     u10931:
  7009   003496  EF50  F01A         	goto	l10822
  7010   00349A                     u10930:
  7011   00349A                     
  7012                           ; BSR set to: 0
  7013                           ;MKAL_layer/I2C/hal_i2c.c: 66:             (SSPSTATbits.CKE = 1);
  7014   00349A  8CC7               	bsf	199,6,c	;volatile
  7015                           
  7016                           ;MKAL_layer/I2C/hal_i2c.c: 67:         }
  7017   00349C  EF5E  F01A         	goto	l10826
  7018   0034A0                     l10822:
  7019                           
  7020                           ; BSR set to: 0
  7021   0034A0  EE20 F006          	lfsr	2,6
  7022   0034A4  51FE               	movf	MSSP_I2C_Init@i2c_obj& (0+255),w,b
  7023   0034A6  26D9               	addwf	fsr2l,f,c
  7024   0034A8  51FF               	movf	(MSSP_I2C_Init@i2c_obj+1)& (0+255),w,b
  7025   0034AA  22DA               	addwfc	fsr2h,f,c
  7026   0034AC  B4DF               	btfsc	indf2,2,c
  7027   0034AE  EF5B  F01A         	goto	u10941
  7028   0034B2  EF5D  F01A         	goto	u10940
  7029   0034B6                     u10941:
  7030   0034B6  EF5E  F01A         	goto	l10826
  7031   0034BA                     u10940:
  7032   0034BA                     
  7033                           ; BSR set to: 0
  7034                           ;MKAL_layer/I2C/hal_i2c.c: 69:             (SSPSTATbits.CKE = 0);
  7035   0034BA  9CC7               	bcf	199,6,c	;volatile
  7036   0034BC                     l10826:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;MKAL_layer/I2C/hal_i2c.c: 74:       MSSP_I2C_Interrupt_Configurations(i2c_obj);
  7040   0034BC  C0FE  F00D         	movff	MSSP_I2C_Init@i2c_obj,MSSP_I2C_Interrupt_Configurations@i2c_obj
  7041   0034C0  C0FF  F00E         	movff	MSSP_I2C_Init@i2c_obj+1,MSSP_I2C_Interrupt_Configurations@i2c_obj+1
  7042   0034C4  ECA7  F027         	call	_MSSP_I2C_Interrupt_Configurations	;wreg free
  7043   0034C8                     
  7044                           ;MKAL_layer/I2C/hal_i2c.c: 77:         (SSPCON1bits.SSPEN = 1);
  7045   0034C8  8AC6               	bsf	198,5,c	;volatile
  7046   0034CA                     
  7047                           ;MKAL_layer/I2C/hal_i2c.c: 78:         ret = (Std_ReturnType)0x01;
  7048   0034CA  0E01               	movlw	1
  7049   0034CC  0101               	movlb	1	; () banked
  7050   0034CE  6F95               	movwf	MSSP_I2C_Init@ret& (0+255),b
  7051   0034D0                     l10832:
  7052                           
  7053                           ; BSR set to: 1
  7054                           ;MKAL_layer/I2C/hal_i2c.c: 80:     return ret;
  7055   0034D0  5195               	movf	MSSP_I2C_Init@ret& (0+255),w,b
  7056   0034D2                     
  7057                           ; BSR set to: 1
  7058   0034D2  0012               	return		;funcret
  7059   0034D4                     __end_of_MSSP_I2C_Init:
  7060                           	callstack 0
  7061                           
  7062 ;; *************** function _MSSP_I2C_Mode_GPIO_CFG *****************
  7063 ;; Defined at:
  7064 ;;		line 289 in file "MKAL_layer/I2C/hal_i2c.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;		None
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		None
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;Total ram usage:        0 bytes
  7083 ;; Hardware stack levels used: 1
  7084 ;; Hardware stack levels required when called: 4
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_MSSP_I2C_Init
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text34
  7093   0056B0                     __ptext34:
  7094                           	callstack 0
  7095   0056B0                     _MSSP_I2C_Mode_GPIO_CFG:
  7096                           	callstack 24
  7097   0056B0                     
  7098                           ;MKAL_layer/I2C/hal_i2c.c: 290:     TRISCbits.TRISC3 = 1;
  7099   0056B0  8694               	bsf	148,3,c	;volatile
  7100                           
  7101                           ;MKAL_layer/I2C/hal_i2c.c: 291:     TRISCbits.TRISC4 = 1;
  7102   0056B2  8894               	bsf	148,4,c	;volatile
  7103   0056B4  0012               	return		;funcret
  7104   0056B6                     __end_of_MSSP_I2C_Mode_GPIO_CFG:
  7105                           	callstack 0
  7106                           
  7107 ;; *************** function _MSSP_I2C_Interrupt_Configurations *****************
  7108 ;; Defined at:
  7109 ;;		line 304 in file "MKAL_layer/I2C/hal_i2c.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  i2c_obj         2   12[COMRAM] PTR const struct .
  7112 ;;		 -> mssp_i2c(15), 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;		None
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7128 ;;Total ram usage:        2 bytes
  7129 ;; Hardware stack levels used: 1
  7130 ;; Hardware stack levels required when called: 4
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_MSSP_I2C_Init
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text35
  7139   004F4E                     __ptext35:
  7140                           	callstack 0
  7141   004F4E                     _MSSP_I2C_Interrupt_Configurations:
  7142                           	callstack 24
  7143   004F4E                     
  7144                           ;MKAL_layer/I2C/hal_i2c.c: 306:         (PIE1bits.SSPIE = 1);
  7145   004F4E  869D               	bsf	157,3,c	;volatile
  7146                           
  7147                           ;MKAL_layer/I2C/hal_i2c.c: 307:         (PIE2bits.BCLIE = 1);
  7148   004F50  86A0               	bsf	160,3,c	;volatile
  7149                           
  7150                           ;MKAL_layer/I2C/hal_i2c.c: 308:         (PIR1bits.SSPIF = 0);
  7151   004F52  969E               	bcf	158,3,c	;volatile
  7152                           
  7153                           ;MKAL_layer/I2C/hal_i2c.c: 309:         (PIR2bits.BCLIF = 0);
  7154   004F54  96A1               	bcf	161,3,c	;volatile
  7155   004F56                     
  7156                           ;MKAL_layer/I2C/hal_i2c.c: 310:         I2C_Report_Write_Collision_InterruptHandler = i2
      +                          c_obj->I2C_Report_Write_Collision;
  7157   004F56  EE20 F009          	lfsr	2,9
  7158   004F5A  500D               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  7159   004F5C  26D9               	addwf	fsr2l,f,c
  7160   004F5E  500E               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  7161   004F60  22DA               	addwfc	fsr2h,f,c
  7162   004F62  CFDE F0B4          	movff	postinc2,_I2C_Report_Write_Collision_InterruptHandler
  7163   004F66  CFDD F0B5          	movff	postdec2,_I2C_Report_Write_Collision_InterruptHandler+1
  7164                           
  7165                           ;MKAL_layer/I2C/hal_i2c.c: 311:         I2C_DefaultInterruptHandle = i2c_obj->I2C_Defaul
      +                          tInterruptHandler;
  7166   004F6A  EE20 F00B          	lfsr	2,11
  7167   004F6E  500D               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  7168   004F70  26D9               	addwf	fsr2l,f,c
  7169   004F72  500E               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  7170   004F74  22DA               	addwfc	fsr2h,f,c
  7171   004F76  CFDE F0B2          	movff	postinc2,_I2C_DefaultInterruptHandle
  7172   004F7A  CFDD F0B3          	movff	postdec2,_I2C_DefaultInterruptHandle+1
  7173                           
  7174                           ;MKAL_layer/I2C/hal_i2c.c: 312:         I2C_Report_Receive_Overflow_InterruptHandle = i2
      +                          c_obj->I2C_Report_Receive_Overflow;
  7175   004F7E  EE20 F00D          	lfsr	2,13
  7176   004F82  500D               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  7177   004F84  26D9               	addwf	fsr2l,f,c
  7178   004F86  500E               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  7179   004F88  22DA               	addwfc	fsr2h,f,c
  7180   004F8A  CFDE F0B0          	movff	postinc2,_I2C_Report_Receive_Overflow_InterruptHandle
  7181   004F8E  CFDD F0B1          	movff	postdec2,_I2C_Report_Receive_Overflow_InterruptHandle+1
  7182   004F92                     
  7183                           ;MKAL_layer/I2C/hal_i2c.c: 340:         (INTCONbits.GIE =1);
  7184   004F92  8EF2               	bsf	242,7,c	;volatile
  7185   004F94                     
  7186                           ;MKAL_layer/I2C/hal_i2c.c: 341:         (INTCONbits.PEIE =1);
  7187   004F94  8CF2               	bsf	242,6,c	;volatile
  7188   004F96  0012               	return		;funcret
  7189   004F98                     __end_of_MSSP_I2C_Interrupt_Configurations:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function _I2C_Slave_Mode_Configurations *****************
  7193 ;; Defined at:
  7194 ;;		line 300 in file "MKAL_layer/I2C/hal_i2c.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  i2c_obj         2   12[COMRAM] PTR const struct .
  7197 ;;		 -> mssp_i2c(15), 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;Total ram usage:        3 bytes
  7214 ;; Hardware stack levels used: 1
  7215 ;; Hardware stack levels required when called: 4
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_MSSP_I2C_Init
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text36
  7224   0055A0                     __ptext36:
  7225                           	callstack 0
  7226   0055A0                     _I2C_Slave_Mode_Configurations:
  7227                           	callstack 24
  7228   0055A0                     
  7229                           ;MKAL_layer/I2C/hal_i2c.c: 301:     SSPCON1bits.SSPM = i2c_obj->i2c_cfg.i2c_mode_cfg;
  7230   0055A0  EE20 F004          	lfsr	2,4
  7231   0055A4  500D               	movf	I2C_Slave_Mode_Configurations@i2c_obj^0,w,c
  7232   0055A6  26D9               	addwf	fsr2l,f,c
  7233   0055A8  500E               	movf	(I2C_Slave_Mode_Configurations@i2c_obj+1)^0,w,c
  7234   0055AA  22DA               	addwfc	fsr2h,f,c
  7235   0055AC  50DF               	movf	indf2,w,c
  7236   0055AE  6E0F               	movwf	??_I2C_Slave_Mode_Configurations^0,c
  7237   0055B0  50C6               	movf	198,w,c	;volatile
  7238   0055B2  180F               	xorwf	??_I2C_Slave_Mode_Configurations^0,w,c
  7239   0055B4  0BF0               	andlw	-16
  7240   0055B6  180F               	xorwf	??_I2C_Slave_Mode_Configurations^0,w,c
  7241   0055B8  6EC6               	movwf	198,c	;volatile
  7242   0055BA  0012               	return		;funcret
  7243   0055BC                     __end_of_I2C_Slave_Mode_Configurations:
  7244                           	callstack 0
  7245                           
  7246 ;; *************** function _I2C_Master_Mode_Clock_Configurations *****************
  7247 ;; Defined at:
  7248 ;;		line 294 in file "MKAL_layer/I2C/hal_i2c.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  i2c_obj         2    0[BANK0 ] PTR const struct .
  7251 ;;		 -> mssp_i2c(15), 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;		None
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;Total ram usage:        3 bytes
  7268 ;; Hardware stack levels used: 1
  7269 ;; Hardware stack levels required when called: 5
  7270 ;; This function calls:
  7271 ;;		___fladd
  7272 ;;		___fldiv
  7273 ;;		___fltol
  7274 ;;		___xxtofl
  7275 ;; This function is called by:
  7276 ;;		_MSSP_I2C_Init
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text37
  7281   004566                     __ptext37:
  7282                           	callstack 0
  7283   004566                     _I2C_Master_Mode_Clock_Configurations:
  7284                           	callstack 23
  7285   004566                     
  7286                           ;MKAL_layer/I2C/hal_i2c.c: 296:     SSPCON1bits.SSPM = i2c_obj->i2c_cfg.i2c_mode_cfg;
  7287   004566  0100               	movlb	0	; () banked
  7288   004568  EE20 F004          	lfsr	2,4
  7289   00456C  51FB               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj& (0+255),w,b
  7290   00456E  26D9               	addwf	fsr2l,f,c
  7291   004570  51FC               	movf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)& (0+255),w,b
  7292   004572  22DA               	addwfc	fsr2h,f,c
  7293   004574  50DF               	movf	indf2,w,c
  7294   004576  6FFD               	movwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),b
  7295   004578  50C6               	movf	198,w,c	;volatile
  7296   00457A  19FD               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  7297   00457C  0BF0               	andlw	-16
  7298   00457E  19FD               	xorwf	??_I2C_Master_Mode_Clock_Configurations& (0+255),w,b
  7299   004580  6EC6               	movwf	198,c	;volatile
  7300   004582                     
  7301                           ; BSR set to: 0
  7302                           ;MKAL_layer/I2C/hal_i2c.c: 297:     SSPADD = (uint8)(((8000000UL / 4.0) / i2c_obj->i2c_c
      +                          lock) - 1);
  7303   004582  0E00               	movlw	0
  7304   004584  6E38               	movwf	___fladd@a^0,c
  7305   004586  0E00               	movlw	0
  7306   004588  6E39               	movwf	(___fladd@a+1)^0,c
  7307   00458A  0E80               	movlw	128
  7308   00458C  6E3A               	movwf	(___fladd@a+2)^0,c
  7309   00458E  0EBF               	movlw	191
  7310   004590  6E3B               	movwf	(___fladd@a+3)^0,c
  7311   004592  C0FB  FFD9         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj,fsr2l
  7312   004596  C0FC  FFDA         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj+1,fsr2h
  7313   00459A  CFDE F00D          	movff	postinc2,___xxtofl@val
  7314   00459E  CFDE F00E          	movff	postinc2,___xxtofl@val+1
  7315   0045A2  CFDE F00F          	movff	postinc2,___xxtofl@val+2
  7316   0045A6  CFDE F010          	movff	postinc2,___xxtofl@val+3
  7317   0045AA  0E00               	movlw	0
  7318   0045AC  ECC9  F016         	call	___xxtofl
  7319   0045B0  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  7320   0045B4  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  7321   0045B8  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  7322   0045BC  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  7323   0045C0  0E00               	movlw	0
  7324   0045C2  6E1B               	movwf	___fldiv@b^0,c
  7325   0045C4  0E24               	movlw	36
  7326   0045C6  6E1C               	movwf	(___fldiv@b+1)^0,c
  7327   0045C8  0EF4               	movlw	244
  7328   0045CA  6E1D               	movwf	(___fldiv@b+2)^0,c
  7329   0045CC  0E49               	movlw	73
  7330   0045CE  6E1E               	movwf	(___fldiv@b+3)^0,c
  7331   0045D0  EC15  F014         	call	___fldiv	;wreg free
  7332   0045D4  C01B  F034         	movff	?___fldiv,___fladd@b
  7333   0045D8  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  7334   0045DC  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  7335   0045E0  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  7336   0045E4  EC95  F00D         	call	___fladd	;wreg free
  7337   0045E8  C034  F05D         	movff	?___fladd,___fltol@f1
  7338   0045EC  C035  F05E         	movff	?___fladd+1,___fltol@f1+1
  7339   0045F0  C036  F05F         	movff	?___fladd+2,___fltol@f1+2
  7340   0045F4  C037  F060         	movff	?___fladd+3,___fltol@f1+3
  7341   0045F8  EC42  F01D         	call	___fltol	;wreg free
  7342   0045FC  505D               	movf	?___fltol^0,w,c
  7343   0045FE  6EC8               	movwf	200,c	;volatile
  7344   004600  0012               	return		;funcret
  7345   004602                     __end_of_I2C_Master_Mode_Clock_Configurations:
  7346                           	callstack 0
  7347                           
  7348 ;; *************** function _Interrupt_Intx_Inti *****************
  7349 ;; Defined at:
  7350 ;;		line 43 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  INTERRUPT_IN    2   28[COMRAM] PTR const struct .
  7353 ;;		 -> INT_0(6), 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  ret             1   30[COMRAM] unsigned char 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      unsigned char 
  7358 ;; Registers used:
  7359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;Total ram usage:        3 bytes
  7370 ;; Hardware stack levels used: 1
  7371 ;; Hardware stack levels required when called: 7
  7372 ;; This function calls:
  7373 ;;		_interrupt_intx_clear
  7374 ;;		_interrupt_intx_disable
  7375 ;;		_interrupt_intx_edge_inti
  7376 ;;		_interrupt_intx_enable
  7377 ;;		_interrupt_intx_pin_inti
  7378 ;;		_interrupt_intx_sethandler
  7379 ;; This function is called by:
  7380 ;;		_intitialized_functions
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text38
  7385   004C48                     __ptext38:
  7386                           	callstack 0
  7387   004C48                     _Interrupt_Intx_Inti:
  7388                           	callstack 22
  7389   004C48                     
  7390                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 45:     if(((void*)0) == INTERRUPT_INTX
      +                          ){
  7391   004C48  501D               	movf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,w,c
  7392   004C4A  101E               	iorwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,w,c
  7393   004C4C  A4D8               	btfss	status,2,c
  7394   004C4E  EF2B  F026         	goto	u11041
  7395   004C52  EF2D  F026         	goto	u11040
  7396   004C56                     u11041:
  7397   004C56  EF31  F026         	goto	l10964
  7398   004C5A                     u11040:
  7399   004C5A                     
  7400                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 46:         ret =(Std_ReturnType)0x00;
  7401   004C5A  0E00               	movlw	0
  7402   004C5C  6E1F               	movwf	Interrupt_Intx_Inti@ret^0,c
  7403                           
  7404                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 47:     }
  7405   004C5E  EF59  F026         	goto	l10972
  7406   004C62                     l10964:
  7407                           
  7408                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 49:     {;MKAL_layer/Interrupt/mcal_ext
      +                          ernal_interrupt.c: 51:         ret = interrupt_intx_disable(INTERRUPT_INTX);
  7409   004C62  C01D  F00D         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_disable@INTERRUPT_INTX
  7410   004C66  C01E  F00E         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_disable@INTERRUPT_INTX+1
  7411   004C6A  EC7A  F025         	call	_interrupt_intx_disable	;wreg free
  7412   004C6E  6E1F               	movwf	Interrupt_Intx_Inti@ret^0,c
  7413                           
  7414                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 53:         ret = interrupt_intx_clear(
      +                          INTERRUPT_INTX);
  7415   004C70  C01D  F00D         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_clear@INTERRUPT_INTX
  7416   004C74  C01E  F00E         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_clear@INTERRUPT_INTX+1
  7417   004C78  ECB3  F025         	call	_interrupt_intx_clear	;wreg free
  7418   004C7C  6E1F               	movwf	Interrupt_Intx_Inti@ret^0,c
  7419                           
  7420                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 55:         ret = interrupt_intx_edge_i
      +                          nti(INTERRUPT_INTX);
  7421   004C7E  C01D  F00D         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_edge_inti@INTERRUPT_INTX
  7422   004C82  C01E  F00E         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_edge_inti@INTERRUPT_INTX+1
  7423   004C86  EC04  F01B         	call	_interrupt_intx_edge_inti	;wreg free
  7424   004C8A  6E1F               	movwf	Interrupt_Intx_Inti@ret^0,c
  7425   004C8C  C01D  F01A         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_pin_inti@INTERRUPT_INTX
  7426   004C90  C01E  F01B         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_pin_inti@INTERRUPT_INTX+1
  7427   004C94  ECD6  F029         	call	_interrupt_intx_pin_inti	;wreg free
  7428   004C98  C01D  F00F         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_sethandler@INTERRUPT_INTX
  7429   004C9C  C01E  F010         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_sethandler@INTERRUPT_INTX+1
  7430   004CA0  EC67  F021         	call	_interrupt_intx_sethandler	;wreg free
  7431   004CA4                     
  7432                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 65:         ret = interrupt_intx_enable
      +                          (INTERRUPT_INTX);
  7433   004CA4  C01D  F00D         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_enable@INTERRUPT_INTX
  7434   004CA8  C01E  F00E         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_enable@INTERRUPT_INTX+1
  7435   004CAC  ECFE  F024         	call	_interrupt_intx_enable	;wreg free
  7436   004CB0  6E1F               	movwf	Interrupt_Intx_Inti@ret^0,c
  7437   004CB2                     l10972:
  7438                           
  7439                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 68:     return ret ;
  7440   004CB2  501F               	movf	Interrupt_Intx_Inti@ret^0,w,c
  7441   004CB4  0012               	return		;funcret
  7442   004CB6                     __end_of_Interrupt_Intx_Inti:
  7443                           	callstack 0
  7444                           
  7445 ;; *************** function _interrupt_intx_sethandler *****************
  7446 ;; Defined at:
  7447 ;;		line 460 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  INTERRUPT_IN    2   14[COMRAM] PTR const struct .
  7450 ;;		 -> INT_0(6), 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;  ret             1   18[COMRAM] unsigned char 
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      unsigned char 
  7455 ;; Registers used:
  7456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;Total ram usage:        5 bytes
  7467 ;; Hardware stack levels used: 1
  7468 ;; Hardware stack levels required when called: 5
  7469 ;; This function calls:
  7470 ;;		_INT0_setinterrupthandler
  7471 ;;		_INT1_setinterrupthandler
  7472 ;;		_INT2_setinterrupthandler
  7473 ;; This function is called by:
  7474 ;;		_Interrupt_Intx_Inti
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text39
  7479   0042CE                     __ptext39:
  7480                           	callstack 0
  7481   0042CE                     _interrupt_intx_sethandler:
  7482                           	callstack 23
  7483   0042CE                     
  7484                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 461:     Std_ReturnType ret =(Std_Retur
      +                          nType)0x00;
  7485   0042CE  0E00               	movlw	0
  7486   0042D0  6E13               	movwf	interrupt_intx_sethandler@ret^0,c
  7487   0042D2                     
  7488                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 462:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  7489   0042D2  500F               	movf	interrupt_intx_sethandler@INTERRUPT_INTX^0,w,c
  7490   0042D4  1010               	iorwf	(interrupt_intx_sethandler@INTERRUPT_INTX+1)^0,w,c
  7491   0042D6  A4D8               	btfss	status,2,c
  7492   0042D8  EF70  F021         	goto	u10551
  7493   0042DC  EF72  F021         	goto	u10550
  7494   0042E0                     u10551:
  7495   0042E0  EF9C  F021         	goto	l10518
  7496   0042E4                     u10550:
  7497   0042E4                     l10508:
  7498                           
  7499                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 463:         ret =(Std_ReturnType)0x00;
  7500   0042E4  0E00               	movlw	0
  7501   0042E6  6E13               	movwf	interrupt_intx_sethandler@ret^0,c
  7502                           
  7503                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 464:     }
  7504   0042E8  EFBB  F021         	goto	l10520
  7505   0042EC                     l10510:
  7506                           
  7507                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 469:                 INT0_setinterrupth
      +                          andler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);
  7508   0042EC  C00F  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  7509   0042F0  C010  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  7510   0042F4  CFDE F00D          	movff	postinc2,INT0_setinterrupthandler@interrupthandler
  7511   0042F8  CFDD F00E          	movff	postdec2,INT0_setinterrupthandler@interrupthandler+1
  7512   0042FC  ECC0  F02A         	call	_INT0_setinterrupthandler	;wreg free
  7513                           
  7514                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 470:                 break;
  7515   004300  EFBB  F021         	goto	l10520
  7516   004304                     l10512:
  7517                           
  7518                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 472:                 ret =INT1_setinter
      +                          rupthandler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);
  7519   004304  C00F  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  7520   004308  C010  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  7521   00430C  CFDE F00D          	movff	postinc2,INT1_setinterrupthandler@interrupthandler
  7522   004310  CFDD F00E          	movff	postdec2,INT1_setinterrupthandler@interrupthandler+1
  7523   004314  ECB0  F02A         	call	_INT1_setinterrupthandler	;wreg free
  7524   004318  6E13               	movwf	interrupt_intx_sethandler@ret^0,c
  7525                           
  7526                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 473:                 break;
  7527   00431A  EFBB  F021         	goto	l10520
  7528   00431E                     l10514:
  7529                           
  7530                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 475:                 ret =INT2_setinter
      +                          rupthandler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);;
  7531   00431E  C00F  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  7532   004322  C010  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  7533   004326  CFDE F00D          	movff	postinc2,INT2_setinterrupthandler@interrupthandler
  7534   00432A  CFDD F00E          	movff	postdec2,INT2_setinterrupthandler@interrupthandler+1
  7535   00432E  ECA0  F02A         	call	_INT2_setinterrupthandler	;wreg free
  7536   004332  6E13               	movwf	interrupt_intx_sethandler@ret^0,c
  7537                           
  7538                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 476:                 break;
  7539   004334  EFBB  F021         	goto	l10520
  7540   004338                     l10518:
  7541   004338  EE20 F004          	lfsr	2,4
  7542   00433C  500F               	movf	interrupt_intx_sethandler@INTERRUPT_INTX^0,w,c
  7543   00433E  26D9               	addwf	fsr2l,f,c
  7544   004340  5010               	movf	(interrupt_intx_sethandler@INTERRUPT_INTX+1)^0,w,c
  7545   004342  22DA               	addwfc	fsr2h,f,c
  7546   004344  50DF               	movf	indf2,w,c
  7547   004346  6E11               	movwf	??_interrupt_intx_sethandler^0,c
  7548   004348  6A12               	clrf	(??_interrupt_intx_sethandler+1)^0,c
  7549                           
  7550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7551                           ; Switch size 1, requested type "simple"
  7552                           ; Number of cases is 1, Range of values is 0 to 0
  7553                           ; switch strategies available:
  7554                           ; Name         Instructions Cycles
  7555                           ; simple_byte            4     3 (average)
  7556                           ;	Chosen strategy is simple_byte
  7557   00434A  5012               	movf	(??_interrupt_intx_sethandler+1)^0,w,c
  7558   00434C  0A00               	xorlw	0	; case 0
  7559   00434E  B4D8               	btfsc	status,2,c
  7560   004350  EFAC  F021         	goto	l12550
  7561   004354  EF72  F021         	goto	l10508
  7562   004358                     l12550:
  7563                           
  7564                           ; Switch size 1, requested type "simple"
  7565                           ; Number of cases is 3, Range of values is 0 to 2
  7566                           ; switch strategies available:
  7567                           ; Name         Instructions Cycles
  7568                           ; simple_byte           10     6 (average)
  7569                           ;	Chosen strategy is simple_byte
  7570   004358  5011               	movf	??_interrupt_intx_sethandler^0,w,c
  7571   00435A  0A00               	xorlw	0	; case 0
  7572   00435C  B4D8               	btfsc	status,2,c
  7573   00435E  EF76  F021         	goto	l10510
  7574   004362  0A01               	xorlw	1	; case 1
  7575   004364  B4D8               	btfsc	status,2,c
  7576   004366  EF82  F021         	goto	l10512
  7577   00436A  0A03               	xorlw	3	; case 2
  7578   00436C  B4D8               	btfsc	status,2,c
  7579   00436E  EF8F  F021         	goto	l10514
  7580   004372  EF72  F021         	goto	l10508
  7581   004376                     l10520:
  7582                           
  7583                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 481:     return ret ;
  7584   004376  5013               	movf	interrupt_intx_sethandler@ret^0,w,c
  7585   004378  0012               	return		;funcret
  7586   00437A                     __end_of_interrupt_intx_sethandler:
  7587                           	callstack 0
  7588                           
  7589 ;; *************** function _INT2_setinterrupthandler *****************
  7590 ;; Defined at:
  7591 ;;		line 446 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  interrupthan    2   12[COMRAM] PTR FTN()void 
  7594 ;;		 -> int0_interrupt(1), 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  ret             1    0        unsigned char 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      unsigned char 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;Total ram usage:        2 bytes
  7611 ;; Hardware stack levels used: 1
  7612 ;; Hardware stack levels required when called: 4
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		_interrupt_intx_sethandler
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           	psect	text40
  7621   005540                     __ptext40:
  7622                           	callstack 0
  7623   005540                     _INT2_setinterrupthandler:
  7624                           	callstack 23
  7625   005540                     
  7626                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 448:     if(((void*)0) == interrupthand
      +                          ler){
  7627   005540  500D               	movf	INT2_setinterrupthandler@interrupthandler^0,w,c
  7628   005542  100E               	iorwf	(INT2_setinterrupthandler@interrupthandler+1)^0,w,c
  7629   005544  A4D8               	btfss	status,2,c
  7630   005546  EFA7  F02A         	goto	u9301
  7631   00554A  EFA9  F02A         	goto	u9300
  7632   00554E                     u9301:
  7633   00554E  EFAB  F02A         	goto	l9740
  7634   005552                     u9300:
  7635   005552                     
  7636                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 450:     }
  7637   005552  EFAF  F02A         	goto	l1214
  7638   005556                     l9740:
  7639                           
  7640                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 452:         Int2_interrupthandler = in
      +                          terrupthandler;
  7641   005556  C00D  F0AA         	movff	INT2_setinterrupthandler@interrupthandler,_Int2_interrupthandler
  7642   00555A  C00E  F0AB         	movff	INT2_setinterrupthandler@interrupthandler+1,_Int2_interrupthandler+1
  7643   00555E                     l1214:
  7644   00555E  0012               	return		;funcret
  7645   005560                     __end_of_INT2_setinterrupthandler:
  7646                           	callstack 0
  7647                           
  7648 ;; *************** function _INT1_setinterrupthandler *****************
  7649 ;; Defined at:
  7650 ;;		line 432 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  interrupthan    2   12[COMRAM] PTR FTN()void 
  7653 ;;		 -> int0_interrupt(1), 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  ret             1    0        unsigned char 
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      unsigned char 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7669 ;;Total ram usage:        2 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 4
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_interrupt_intx_sethandler
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text41
  7680   005560                     __ptext41:
  7681                           	callstack 0
  7682   005560                     _INT1_setinterrupthandler:
  7683                           	callstack 23
  7684   005560                     
  7685                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 434:     if(((void*)0) == interrupthand
      +                          ler){
  7686   005560  500D               	movf	INT1_setinterrupthandler@interrupthandler^0,w,c
  7687   005562  100E               	iorwf	(INT1_setinterrupthandler@interrupthandler+1)^0,w,c
  7688   005564  A4D8               	btfss	status,2,c
  7689   005566  EFB7  F02A         	goto	u9291
  7690   00556A  EFB9  F02A         	goto	u9290
  7691   00556E                     u9291:
  7692   00556E  EFBB  F02A         	goto	l9732
  7693   005572                     u9290:
  7694   005572                     
  7695                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 436:     }
  7696   005572  EFBF  F02A         	goto	l1209
  7697   005576                     l9732:
  7698                           
  7699                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 438:         Int1_interrupthandler = in
      +                          terrupthandler;
  7700   005576  C00D  F0AC         	movff	INT1_setinterrupthandler@interrupthandler,_Int1_interrupthandler
  7701   00557A  C00E  F0AD         	movff	INT1_setinterrupthandler@interrupthandler+1,_Int1_interrupthandler+1
  7702   00557E                     l1209:
  7703   00557E  0012               	return		;funcret
  7704   005580                     __end_of_INT1_setinterrupthandler:
  7705                           	callstack 0
  7706                           
  7707 ;; *************** function _INT0_setinterrupthandler *****************
  7708 ;; Defined at:
  7709 ;;		line 418 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  interrupthan    2   12[COMRAM] PTR FTN()void 
  7712 ;;		 -> int0_interrupt(1), 
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;  ret             1    0        unsigned char 
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      unsigned char 
  7717 ;; Registers used:
  7718 ;;		wreg, status,2, status,0
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;Total ram usage:        2 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; Hardware stack levels required when called: 4
  7731 ;; This function calls:
  7732 ;;		Nothing
  7733 ;; This function is called by:
  7734 ;;		_interrupt_intx_sethandler
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738                           	psect	text42
  7739   005580                     __ptext42:
  7740                           	callstack 0
  7741   005580                     _INT0_setinterrupthandler:
  7742                           	callstack 23
  7743   005580                     
  7744                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 420:     if(((void*)0) == interrupthand
      +                          ler){
  7745   005580  500D               	movf	INT0_setinterrupthandler@interrupthandler^0,w,c
  7746   005582  100E               	iorwf	(INT0_setinterrupthandler@interrupthandler+1)^0,w,c
  7747   005584  A4D8               	btfss	status,2,c
  7748   005586  EFC7  F02A         	goto	u9281
  7749   00558A  EFC9  F02A         	goto	u9280
  7750   00558E                     u9281:
  7751   00558E  EFCB  F02A         	goto	l9724
  7752   005592                     u9280:
  7753   005592                     
  7754                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 422:     }
  7755   005592  EFCF  F02A         	goto	l1204
  7756   005596                     l9724:
  7757                           
  7758                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 424:         Int0_interrupthandler = in
      +                          terrupthandler;
  7759   005596  C00D  F0AE         	movff	INT0_setinterrupthandler@interrupthandler,_Int0_interrupthandler
  7760   00559A  C00E  F0AF         	movff	INT0_setinterrupthandler@interrupthandler+1,_Int0_interrupthandler+1
  7761   00559E                     l1204:
  7762   00559E  0012               	return		;funcret
  7763   0055A0                     __end_of_INT0_setinterrupthandler:
  7764                           	callstack 0
  7765                           
  7766 ;; *************** function _interrupt_intx_pin_inti *****************
  7767 ;; Defined at:
  7768 ;;		line 367 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  INTERRUPT_IN    2   25[COMRAM] PTR const struct .
  7771 ;;		 -> INT_0(6), 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  ret             1   27[COMRAM] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      unsigned char 
  7776 ;; Registers used:
  7777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;Total ram usage:        3 bytes
  7788 ;; Hardware stack levels used: 1
  7789 ;; Hardware stack levels required when called: 6
  7790 ;; This function calls:
  7791 ;;		_GPIO_pIN_INTIALIZE
  7792 ;; This function is called by:
  7793 ;;		_Interrupt_Intx_Inti
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text43
  7798   0053AC                     __ptext43:
  7799                           	callstack 0
  7800   0053AC                     _interrupt_intx_pin_inti:
  7801                           	callstack 22
  7802   0053AC                     
  7803                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 369:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  7804   0053AC  501A               	movf	interrupt_intx_pin_inti@INTERRUPT_INTX^0,w,c
  7805   0053AE  101B               	iorwf	(interrupt_intx_pin_inti@INTERRUPT_INTX+1)^0,w,c
  7806   0053B0  A4D8               	btfss	status,2,c
  7807   0053B2  EFDD  F029         	goto	u10541
  7808   0053B6  EFDF  F029         	goto	u10540
  7809   0053BA                     u10541:
  7810   0053BA  EFE3  F029         	goto	l10498
  7811   0053BE                     u10540:
  7812   0053BE                     
  7813                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 370:         ret =(Std_ReturnType)0x00;
  7814   0053BE  0E00               	movlw	0
  7815   0053C0  6E1C               	movwf	interrupt_intx_pin_inti@ret^0,c
  7816                           
  7817                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 371:     }
  7818   0053C2  EFEC  F029         	goto	l10500
  7819   0053C6                     l10498:
  7820                           
  7821                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 373:     {;MKAL_layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 374:         ret =GPIO_pIN_INTIALIZE(&(INTERRUPT_INTX->pin_config));
  7822   0053C6  0E02               	movlw	2
  7823   0053C8  241A               	addwf	interrupt_intx_pin_inti@INTERRUPT_INTX^0,w,c
  7824   0053CA  6E16               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  7825   0053CC  0E00               	movlw	0
  7826   0053CE  201B               	addwfc	(interrupt_intx_pin_inti@INTERRUPT_INTX+1)^0,w,c
  7827   0053D0  6E17               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  7828   0053D2  EC5B  F026         	call	_GPIO_pIN_INTIALIZE	;wreg free
  7829   0053D6  6E1C               	movwf	interrupt_intx_pin_inti@ret^0,c
  7830   0053D8                     l10500:
  7831                           
  7832                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 377:     return ret ;
  7833   0053D8  501C               	movf	interrupt_intx_pin_inti@ret^0,w,c
  7834   0053DA  0012               	return		;funcret
  7835   0053DC                     __end_of_interrupt_intx_pin_inti:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function _GPIO_pIN_INTIALIZE *****************
  7839 ;; Defined at:
  7840 ;;		line 72 in file "MKAL_layer/gpio/pro_gpio.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  config_pin      2   21[COMRAM] PTR const struct .
  7843 ;;		 -> relay_intialize@pin_config(1), led_intialize@pin_config(1), LED_ROOM_1(1), INT_0(6), 
  7844 ;;		 -> motor_1$motor_pin_config(2), motor_1(2), motor_2$motor_pin_config(2), motor_2(2), 
  7845 ;;		 -> ccp1_(10), ccp2_(10), lcd_4bit$lcd_data(4), lcd_4bit(6), 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  ret             1   24[COMRAM] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      unsigned char 
  7850 ;; Registers used:
  7851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7861 ;;Total ram usage:        4 bytes
  7862 ;; Hardware stack levels used: 1
  7863 ;; Hardware stack levels required when called: 5
  7864 ;; This function calls:
  7865 ;;		_GPIO_pIN_DIRECTION_INTIALIZE
  7866 ;;		_GPIO_pIN_WRITE_LOGIC
  7867 ;; This function is called by:
  7868 ;;		_intitialized_functions
  7869 ;;		_lcd_4bit_intialize
  7870 ;;		_motor_intialize
  7871 ;;		_ccp1_init
  7872 ;;		_ccp2_init
  7873 ;;		_interrupt_intx_pin_inti
  7874 ;;		_segment_intialized
  7875 ;;		_lcd_8bit_intialize
  7876 ;;		_led_intialize
  7877 ;;		_keypad_intialize
  7878 ;;		_relay_intialize
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text44
  7883   004CB6                     __ptext44:
  7884                           	callstack 0
  7885   004CB6                     _GPIO_pIN_INTIALIZE:
  7886                           	callstack 23
  7887   004CB6                     
  7888                           ;MKAL_layer/gpio/pro_gpio.c: 75:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  7889   004CB6  5016               	movf	GPIO_pIN_INTIALIZE@config_pin^0,w,c
  7890   004CB8  1017               	iorwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,w,c
  7891   004CBA  B4D8               	btfsc	status,2,c
  7892   004CBC  EF62  F026         	goto	u9261
  7893   004CC0  EF64  F026         	goto	u9260
  7894   004CC4                     u9261:
  7895   004CC4  EF75  F026         	goto	l9686
  7896   004CC8                     u9260:
  7897   004CC8  C016  FFD9         	movff	GPIO_pIN_INTIALIZE@config_pin,fsr2l
  7898   004CCC  C017  FFDA         	movff	GPIO_pIN_INTIALIZE@config_pin+1,fsr2h
  7899   004CD0  30DF               	rrcf	223,w,c
  7900   004CD2  32E8               	rrcf	wreg,f,c
  7901   004CD4  32E8               	rrcf	wreg,f,c
  7902   004CD6  0B07               	andlw	7
  7903   004CD8  6E18               	movwf	??_GPIO_pIN_INTIALIZE^0,c
  7904   004CDA  0E07               	movlw	7
  7905   004CDC  6418               	cpfsgt	??_GPIO_pIN_INTIALIZE^0,c
  7906   004CDE  EF73  F026         	goto	u9271
  7907   004CE2  EF75  F026         	goto	u9270
  7908   004CE6                     u9271:
  7909   004CE6  EF79  F026         	goto	l9688
  7910   004CEA                     u9270:
  7911   004CEA                     l9686:
  7912                           
  7913                           ;MKAL_layer/gpio/pro_gpio.c: 76:         ret =(Std_ReturnType)0x00;
  7914   004CEA  0E00               	movlw	0
  7915   004CEC  6E19               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  7916                           
  7917                           ;MKAL_layer/gpio/pro_gpio.c: 77:     }
  7918   004CEE  EF8F  F026         	goto	l9690
  7919   004CF2                     l9688:
  7920                           
  7921                           ;MKAL_layer/gpio/pro_gpio.c: 79:         ret =GPIO_pIN_DIRECTION_INTIALIZE(config_pin);
  7922   004CF2  C016  F00D         	movff	GPIO_pIN_INTIALIZE@config_pin,GPIO_pIN_DIRECTION_INTIALIZE@config_pin
  7923   004CF6  C017  F00E         	movff	GPIO_pIN_INTIALIZE@config_pin+1,GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1
  7924   004CFA  EC6A  F01A         	call	_GPIO_pIN_DIRECTION_INTIALIZE	;wreg free
  7925   004CFE  6E19               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  7926                           
  7927                           ;MKAL_layer/gpio/pro_gpio.c: 80:         ret =GPIO_pIN_WRITE_LOGIC(config_pin,config_pin
      +                          ->logic);
  7928   004D00  C016  F00D         	movff	GPIO_pIN_INTIALIZE@config_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  7929   004D04  C017  F00E         	movff	GPIO_pIN_INTIALIZE@config_pin+1,GPIO_pIN_WRITE_LOGIC@config_pin+1
  7930   004D08  C016  FFD9         	movff	GPIO_pIN_INTIALIZE@config_pin,fsr2l
  7931   004D0C  C017  FFDA         	movff	GPIO_pIN_INTIALIZE@config_pin+1,fsr2h
  7932   004D10  0E00               	movlw	0
  7933   004D12  BEDF               	btfsc	indf2,7,c
  7934   004D14  0E01               	movlw	1
  7935   004D16  6E0F               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  7936   004D18  EC9A  F01B         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  7937   004D1C  6E19               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  7938   004D1E                     l9690:
  7939                           
  7940                           ;MKAL_layer/gpio/pro_gpio.c: 82:     return ret;
  7941   004D1E  5019               	movf	GPIO_pIN_INTIALIZE@ret^0,w,c
  7942   004D20  0012               	return		;funcret
  7943   004D22                     __end_of_GPIO_pIN_INTIALIZE:
  7944                           	callstack 0
  7945                           
  7946 ;; *************** function _GPIO_pIN_WRITE_LOGIC *****************
  7947 ;; Defined at:
  7948 ;;		line 50 in file "MKAL_layer/gpio/pro_gpio.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  config_pin      2   12[COMRAM] PTR const struct .
  7951 ;;		 -> relay_turn_off@pin_config(1), relay_turn_on@pin_config(1), relay_intialize@pin_config(1), led_turn_off@pin_confi
      +g(1), 
  7952 ;;		 -> led_turn_on@pin_config(1), led_intialize@pin_config(1), LED_ROOM_1(1), INT_0(6), 
  7953 ;;		 -> motor_1$motor_pin_config(2), motor_1(2), motor_2$motor_pin_config(2), motor_2(2), 
  7954 ;;		 -> ccp1_(10), ccp2_(10), lcd_4bit$lcd_data(4), lcd_4bit(6), 
  7955 ;;  logic           1   14[COMRAM] enum E2980
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;  ret             1   20[COMRAM] unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      unsigned char 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7967 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7969 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7970 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;Total ram usage:        9 bytes
  7972 ;; Hardware stack levels used: 1
  7973 ;; Hardware stack levels required when called: 4
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;;		_lcd_4bit_send_command
  7979 ;;		_lcd_4bit_send_char_data
  7980 ;;		_lcd_send_4bits
  7981 ;;		_lcd_4bit_send_enable_signal
  7982 ;;		_morot_turn_right
  7983 ;;		_morot_turn_left
  7984 ;;		_morot_stop
  7985 ;;		_GPIO_pIN_INTIALIZE
  7986 ;;		_segment_wright_logic
  7987 ;;		_lcd_8bit_send_command
  7988 ;;		_lcd_8bit_send_char_data
  7989 ;;		_lcd_8bit_send_enable_signal
  7990 ;;		_led_turn_on
  7991 ;;		_led_turn_off
  7992 ;;		_keypad_get_value
  7993 ;;		_relay_turn_on
  7994 ;;		_relay_turn_off
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text45
  7999   003734                     __ptext45:
  8000                           	callstack 0
  8001   003734                     _GPIO_pIN_WRITE_LOGIC:
  8002                           	callstack 25
  8003   003734                     
  8004                           ;MKAL_layer/gpio/pro_gpio.c: 50: Std_ReturnType GPIO_pIN_WRITE_LOGIC(const pin_config_t 
      +                          *config_pin ,logic_t logic);MKAL_layer/gpio/pro_gpio.c: 51: {;MKAL_layer/gpio/pro_gpio.c
      +                          : 52:     Std_ReturnType ret =(Std_ReturnType)0x01;
  8005   003734  0E01               	movlw	1
  8006   003736  6E15               	movwf	GPIO_pIN_WRITE_LOGIC@ret^0,c
  8007   003738                     
  8008                           ;MKAL_layer/gpio/pro_gpio.c: 53:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  8009   003738  500D               	movf	GPIO_pIN_WRITE_LOGIC@config_pin^0,w,c
  8010   00373A  100E               	iorwf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,w,c
  8011   00373C  B4D8               	btfsc	status,2,c
  8012   00373E  EFA3  F01B         	goto	u9161
  8013   003742  EFA5  F01B         	goto	u9160
  8014   003746                     u9161:
  8015   003746  EFB6  F01B         	goto	l9638
  8016   00374A                     u9160:
  8017   00374A  C00D  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8018   00374E  C00E  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8019   003752  30DF               	rrcf	223,w,c
  8020   003754  32E8               	rrcf	wreg,f,c
  8021   003756  32E8               	rrcf	wreg,f,c
  8022   003758  0B07               	andlw	7
  8023   00375A  6E10               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8024   00375C  0E07               	movlw	7
  8025   00375E  6410               	cpfsgt	??_GPIO_pIN_WRITE_LOGIC^0,c
  8026   003760  EFB4  F01B         	goto	u9171
  8027   003764  EFB6  F01B         	goto	u9170
  8028   003768                     u9171:
  8029   003768  EF11  F01C         	goto	l9646
  8030   00376C                     u9170:
  8031   00376C                     l9638:
  8032                           
  8033                           ;MKAL_layer/gpio/pro_gpio.c: 54:         ret =(Std_ReturnType)0x00;
  8034   00376C  0E00               	movlw	0
  8035   00376E  6E15               	movwf	GPIO_pIN_WRITE_LOGIC@ret^0,c
  8036                           
  8037                           ;MKAL_layer/gpio/pro_gpio.c: 55:     }
  8038   003770  EF26  F01C         	goto	l9648
  8039   003774                     l9640:
  8040                           
  8041                           ;MKAL_layer/gpio/pro_gpio.c: 59:                 (*lat_regisrers[config_pin->port] &= ~(
      +                          (uint8)1 << config_pin->pin));
  8042   003774  C00D  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8043   003778  C00E  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8044   00377C  30DF               	rrcf	223,w,c
  8045   00377E  32E8               	rrcf	wreg,f,c
  8046   003780  32E8               	rrcf	wreg,f,c
  8047   003782  0B07               	andlw	7
  8048   003784  6E10               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8049   003786  0E01               	movlw	1
  8050   003788  6E11               	movwf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  8051   00378A  2A10               	incf	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8052   00378C  EFCA  F01B         	goto	u9184
  8053   003790                     u9185:
  8054   003790  90D8               	bcf	status,0,c
  8055   003792  3611               	rlcf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
  8056   003794                     u9184:
  8057   003794  2E10               	decfsz	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8058   003796  EFC8  F01B         	goto	u9185
  8059   00379A  5011               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  8060   00379C  0AFF               	xorlw	255
  8061   00379E  6E12               	movwf	(??_GPIO_pIN_WRITE_LOGIC+2)^0,c
  8062   0037A0  C00D  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8063   0037A4  C00E  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8064   0037A8  50DF               	movf	223,w,c
  8065   0037AA  0B07               	andlw	7
  8066   0037AC  0D02               	mullw	2
  8067   0037AE  50F3               	movf	243,w,c
  8068   0037B0  0FD2               	addlw	low _lat_regisrers
  8069   0037B2  6ED9               	movwf	fsr2l,c
  8070   0037B4  6ADA               	clrf	fsr2h,c
  8071   0037B6  CFDE F013          	movff	postinc2,??_GPIO_pIN_WRITE_LOGIC+3
  8072   0037BA  CFDD F014          	movff	postdec2,??_GPIO_pIN_WRITE_LOGIC+4
  8073   0037BE  C013  FFD9         	movff	??_GPIO_pIN_WRITE_LOGIC+3,fsr2l
  8074   0037C2  C014  FFDA         	movff	??_GPIO_pIN_WRITE_LOGIC+4,fsr2h
  8075   0037C6  5012               	movf	(??_GPIO_pIN_WRITE_LOGIC+2)^0,w,c
  8076   0037C8  16DF               	andwf	indf2,f,c
  8077                           
  8078                           ;MKAL_layer/gpio/pro_gpio.c: 60:                 break;
  8079   0037CA  EF26  F01C         	goto	l9648
  8080   0037CE                     l9642:
  8081                           
  8082                           ;MKAL_layer/gpio/pro_gpio.c: 62:                 (*lat_regisrers[config_pin->port] |= ((
      +                          uint8)1 << config_pin->pin));
  8083   0037CE  C00D  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8084   0037D2  C00E  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8085   0037D6  30DF               	rrcf	223,w,c
  8086   0037D8  32E8               	rrcf	wreg,f,c
  8087   0037DA  32E8               	rrcf	wreg,f,c
  8088   0037DC  0B07               	andlw	7
  8089   0037DE  6E10               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8090   0037E0  0E01               	movlw	1
  8091   0037E2  6E11               	movwf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  8092   0037E4  2A10               	incf	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8093   0037E6  EFF7  F01B         	goto	u9194
  8094   0037EA                     u9195:
  8095   0037EA  90D8               	bcf	status,0,c
  8096   0037EC  3611               	rlcf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
  8097   0037EE                     u9194:
  8098   0037EE  2E10               	decfsz	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  8099   0037F0  EFF5  F01B         	goto	u9195
  8100   0037F4  C00D  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  8101   0037F8  C00E  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  8102   0037FC  50DF               	movf	223,w,c
  8103   0037FE  0B07               	andlw	7
  8104   003800  0D02               	mullw	2
  8105   003802  50F3               	movf	243,w,c
  8106   003804  0FD2               	addlw	low _lat_regisrers
  8107   003806  6ED9               	movwf	fsr2l,c
  8108   003808  6ADA               	clrf	fsr2h,c
  8109   00380A  CFDE F012          	movff	postinc2,??_GPIO_pIN_WRITE_LOGIC+2
  8110   00380E  CFDD F013          	movff	postdec2,??_GPIO_pIN_WRITE_LOGIC+3
  8111   003812  C012  FFD9         	movff	??_GPIO_pIN_WRITE_LOGIC+2,fsr2l
  8112   003816  C013  FFDA         	movff	??_GPIO_pIN_WRITE_LOGIC+3,fsr2h
  8113   00381A  5011               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  8114   00381C  12DF               	iorwf	indf2,f,c
  8115                           
  8116                           ;MKAL_layer/gpio/pro_gpio.c: 63:                 break;
  8117   00381E  EF26  F01C         	goto	l9648
  8118   003822                     l9646:
  8119   003822  500F               	movf	GPIO_pIN_WRITE_LOGIC@logic^0,w,c
  8120   003824  6E10               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  8121   003826  6A11               	clrf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  8122                           
  8123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8124                           ; Switch size 1, requested type "simple"
  8125                           ; Number of cases is 1, Range of values is 0 to 0
  8126                           ; switch strategies available:
  8127                           ; Name         Instructions Cycles
  8128                           ; simple_byte            4     3 (average)
  8129                           ;	Chosen strategy is simple_byte
  8130   003828  5011               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  8131   00382A  0A00               	xorlw	0	; case 0
  8132   00382C  B4D8               	btfsc	status,2,c
  8133   00382E  EF1B  F01C         	goto	l12552
  8134   003832  EFB6  F01B         	goto	l9638
  8135   003836                     l12552:
  8136                           
  8137                           ; Switch size 1, requested type "simple"
  8138                           ; Number of cases is 2, Range of values is 0 to 1
  8139                           ; switch strategies available:
  8140                           ; Name         Instructions Cycles
  8141                           ; simple_byte            7     4 (average)
  8142                           ;	Chosen strategy is simple_byte
  8143   003836  5010               	movf	??_GPIO_pIN_WRITE_LOGIC^0,w,c
  8144   003838  0A00               	xorlw	0	; case 0
  8145   00383A  B4D8               	btfsc	status,2,c
  8146   00383C  EFBA  F01B         	goto	l9640
  8147   003840  0A01               	xorlw	1	; case 1
  8148   003842  B4D8               	btfsc	status,2,c
  8149   003844  EFE7  F01B         	goto	l9642
  8150   003848  EFB6  F01B         	goto	l9638
  8151   00384C                     l9648:
  8152                           
  8153                           ;MKAL_layer/gpio/pro_gpio.c: 67:     return ret;
  8154   00384C  5015               	movf	GPIO_pIN_WRITE_LOGIC@ret^0,w,c
  8155   00384E  0012               	return		;funcret
  8156   003850                     __end_of_GPIO_pIN_WRITE_LOGIC:
  8157                           	callstack 0
  8158                           
  8159 ;; *************** function _GPIO_pIN_DIRECTION_INTIALIZE *****************
  8160 ;; Defined at:
  8161 ;;		line 14 in file "MKAL_layer/gpio/pro_gpio.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  config_pin      2   12[COMRAM] PTR const struct .
  8164 ;;		 -> relay_intialize@pin_config(1), led_intialize@pin_config(1), LED_ROOM_1(1), INT_0(6), 
  8165 ;;		 -> motor_1$motor_pin_config(2), motor_1(2), motor_2$motor_pin_config(2), motor_2(2), 
  8166 ;;		 -> ccp1_(10), ccp2_(10), lcd_4bit$lcd_data(4), lcd_4bit(6), 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  ret             1   19[COMRAM] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      unsigned char 
  8171 ;; Registers used:
  8172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;Total ram usage:        8 bytes
  8183 ;; Hardware stack levels used: 1
  8184 ;; Hardware stack levels required when called: 4
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_GPIO_pIN_INTIALIZE
  8189 ;;		_button_intialize
  8190 ;;		_keypad_intialize
  8191 ;;		_Interrupt_Pbx_Inti
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text46
  8196   0034D4                     __ptext46:
  8197                           	callstack 0
  8198   0034D4                     _GPIO_pIN_DIRECTION_INTIALIZE:
  8199                           	callstack 23
  8200   0034D4                     
  8201                           ;MKAL_layer/gpio/pro_gpio.c: 14: Std_ReturnType GPIO_pIN_DIRECTION_INTIALIZE(const pin_c
      +                          onfig_t *config_pin);MKAL_layer/gpio/pro_gpio.c: 15: {;MKAL_layer/gpio/pro_gpio.c: 16:  
      +                             Std_ReturnType ret =(Std_ReturnType)0x01;
  8202   0034D4  0E01               	movlw	1
  8203   0034D6  6E14               	movwf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,c
  8204   0034D8                     
  8205                           ;MKAL_layer/gpio/pro_gpio.c: 17:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  8206   0034D8  500D               	movf	GPIO_pIN_DIRECTION_INTIALIZE@config_pin^0,w,c
  8207   0034DA  100E               	iorwf	(GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1)^0,w,c
  8208   0034DC  B4D8               	btfsc	status,2,c
  8209   0034DE  EF73  F01A         	goto	u9201
  8210   0034E2  EF75  F01A         	goto	u9200
  8211   0034E6                     u9201:
  8212   0034E6  EF86  F01A         	goto	l9662
  8213   0034EA                     u9200:
  8214   0034EA  C00D  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8215   0034EE  C00E  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8216   0034F2  30DF               	rrcf	223,w,c
  8217   0034F4  32E8               	rrcf	wreg,f,c
  8218   0034F6  32E8               	rrcf	wreg,f,c
  8219   0034F8  0B07               	andlw	7
  8220   0034FA  6E0F               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  8221   0034FC  0E07               	movlw	7
  8222   0034FE  640F               	cpfsgt	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  8223   003500  EF84  F01A         	goto	u9211
  8224   003504  EF86  F01A         	goto	u9210
  8225   003508                     u9211:
  8226   003508  EFE1  F01A         	goto	l9670
  8227   00350C                     u9210:
  8228   00350C                     l9662:
  8229                           
  8230                           ;MKAL_layer/gpio/pro_gpio.c: 18:         ret =(Std_ReturnType)0x00;
  8231   00350C  0E00               	movlw	0
  8232   00350E  6E14               	movwf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,c
  8233                           
  8234                           ;MKAL_layer/gpio/pro_gpio.c: 19:     }
  8235   003510  EF02  F01B         	goto	l9672
  8236   003514                     l9664:
  8237                           
  8238                           ;MKAL_layer/gpio/pro_gpio.c: 23:                 (*tris_regisrers[config_pin->port] &= ~
      +                          ((uint8)1 << config_pin->pin));
  8239   003514  C00D  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8240   003518  C00E  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8241   00351C  30DF               	rrcf	223,w,c
  8242   00351E  32E8               	rrcf	wreg,f,c
  8243   003520  32E8               	rrcf	wreg,f,c
  8244   003522  0B07               	andlw	7
  8245   003524  6E0F               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  8246   003526  0E01               	movlw	1
  8247   003528  6E10               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  8248   00352A  2A0F               	incf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  8249   00352C  EF9A  F01A         	goto	u9224
  8250   003530                     u9225:
  8251   003530  90D8               	bcf	status,0,c
  8252   003532  3610               	rlcf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,f,c
  8253   003534                     u9224:
  8254   003534  2E0F               	decfsz	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  8255   003536  EF98  F01A         	goto	u9225
  8256   00353A  5010               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  8257   00353C  0AFF               	xorlw	255
  8258   00353E  6E11               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,c
  8259   003540  C00D  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8260   003544  C00E  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8261   003548  50DF               	movf	223,w,c
  8262   00354A  0B07               	andlw	7
  8263   00354C  0D02               	mullw	2
  8264   00354E  50F3               	movf	243,w,c
  8265   003550  0FDC               	addlw	low _tris_regisrers
  8266   003552  6ED9               	movwf	fsr2l,c
  8267   003554  6ADA               	clrf	fsr2h,c
  8268   003556  CFDE F012          	movff	postinc2,??_GPIO_pIN_DIRECTION_INTIALIZE+3
  8269   00355A  CFDD F013          	movff	postdec2,??_GPIO_pIN_DIRECTION_INTIALIZE+4
  8270   00355E  C012  FFD9         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+3,fsr2l
  8271   003562  C013  FFDA         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+4,fsr2h
  8272   003566  5011               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,w,c
  8273   003568  16DF               	andwf	indf2,f,c
  8274                           
  8275                           ;MKAL_layer/gpio/pro_gpio.c: 24:                 break;
  8276   00356A  EF02  F01B         	goto	l9672
  8277   00356E                     l9666:
  8278                           
  8279                           ;MKAL_layer/gpio/pro_gpio.c: 26:                 (*tris_regisrers[config_pin->port] |= (
      +                          (uint8)1 << config_pin->pin));
  8280   00356E  C00D  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8281   003572  C00E  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8282   003576  30DF               	rrcf	223,w,c
  8283   003578  32E8               	rrcf	wreg,f,c
  8284   00357A  32E8               	rrcf	wreg,f,c
  8285   00357C  0B07               	andlw	7
  8286   00357E  6E0F               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  8287   003580  0E01               	movlw	1
  8288   003582  6E10               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  8289   003584  2A0F               	incf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  8290   003586  EFC7  F01A         	goto	u9234
  8291   00358A                     u9235:
  8292   00358A  90D8               	bcf	status,0,c
  8293   00358C  3610               	rlcf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,f,c
  8294   00358E                     u9234:
  8295   00358E  2E0F               	decfsz	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  8296   003590  EFC5  F01A         	goto	u9235
  8297   003594  C00D  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8298   003598  C00E  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8299   00359C  50DF               	movf	223,w,c
  8300   00359E  0B07               	andlw	7
  8301   0035A0  0D02               	mullw	2
  8302   0035A2  50F3               	movf	243,w,c
  8303   0035A4  0FDC               	addlw	low _tris_regisrers
  8304   0035A6  6ED9               	movwf	fsr2l,c
  8305   0035A8  6ADA               	clrf	fsr2h,c
  8306   0035AA  CFDE F011          	movff	postinc2,??_GPIO_pIN_DIRECTION_INTIALIZE+2
  8307   0035AE  CFDD F012          	movff	postdec2,??_GPIO_pIN_DIRECTION_INTIALIZE+3
  8308   0035B2  C011  FFD9         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+2,fsr2l
  8309   0035B6  C012  FFDA         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+3,fsr2h
  8310   0035BA  5010               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  8311   0035BC  12DF               	iorwf	indf2,f,c
  8312                           
  8313                           ;MKAL_layer/gpio/pro_gpio.c: 27:                 break;
  8314   0035BE  EF02  F01B         	goto	l9672
  8315   0035C2                     l9670:
  8316   0035C2  C00D  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  8317   0035C6  C00E  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  8318   0035CA  BCDF               	btfsc	indf2,6,c
  8319   0035CC  EFEA  F01A         	goto	u9241
  8320   0035D0  EFED  F01A         	goto	u9240
  8321   0035D4                     u9241:
  8322   0035D4  0E01               	movlw	1
  8323   0035D6  EFEE  F01A         	goto	u9250
  8324   0035DA                     u9240:
  8325   0035DA  0E00               	movlw	0
  8326   0035DC                     u9250:
  8327   0035DC  6E0F               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  8328   0035DE  6A10               	clrf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  8329                           
  8330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8331                           ; Switch size 1, requested type "simple"
  8332                           ; Number of cases is 1, Range of values is 0 to 0
  8333                           ; switch strategies available:
  8334                           ; Name         Instructions Cycles
  8335                           ; simple_byte            4     3 (average)
  8336                           ;	Chosen strategy is simple_byte
  8337   0035E0  5010               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  8338   0035E2  0A00               	xorlw	0	; case 0
  8339   0035E4  B4D8               	btfsc	status,2,c
  8340   0035E6  EFF7  F01A         	goto	l12554
  8341   0035EA  EF86  F01A         	goto	l9662
  8342   0035EE                     l12554:
  8343                           
  8344                           ; Switch size 1, requested type "simple"
  8345                           ; Number of cases is 2, Range of values is 0 to 1
  8346                           ; switch strategies available:
  8347                           ; Name         Instructions Cycles
  8348                           ; simple_byte            7     4 (average)
  8349                           ;	Chosen strategy is simple_byte
  8350   0035EE  500F               	movf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,w,c
  8351   0035F0  0A00               	xorlw	0	; case 0
  8352   0035F2  B4D8               	btfsc	status,2,c
  8353   0035F4  EF8A  F01A         	goto	l9664
  8354   0035F8  0A01               	xorlw	1	; case 1
  8355   0035FA  B4D8               	btfsc	status,2,c
  8356   0035FC  EFB7  F01A         	goto	l9666
  8357   003600  EF86  F01A         	goto	l9662
  8358   003604                     l9672:
  8359                           
  8360                           ;MKAL_layer/gpio/pro_gpio.c: 31:     return ret;
  8361   003604  5014               	movf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,w,c
  8362   003606  0012               	return		;funcret
  8363   003608                     __end_of_GPIO_pIN_DIRECTION_INTIALIZE:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function _interrupt_intx_enable *****************
  8367 ;; Defined at:
  8368 ;;		line 172 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  INTERRUPT_IN    2   12[COMRAM] PTR const struct .
  8371 ;;		 -> INT_0(6), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  ret             1   16[COMRAM] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      unsigned char 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;Total ram usage:        5 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 4
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_Interrupt_Intx_Inti
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text47
  8398   0049FC                     __ptext47:
  8399                           	callstack 0
  8400   0049FC                     _interrupt_intx_enable:
  8401                           	callstack 24
  8402   0049FC                     
  8403                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 174:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  8404   0049FC  500D               	movf	interrupt_intx_enable@INTERRUPT_INTX^0,w,c
  8405   0049FE  100E               	iorwf	(interrupt_intx_enable@INTERRUPT_INTX+1)^0,w,c
  8406   004A00  A4D8               	btfss	status,2,c
  8407   004A02  EF05  F025         	goto	u10561
  8408   004A06  EF07  F025         	goto	u10560
  8409   004A0A                     u10561:
  8410   004A0A  EF1C  F025         	goto	l10542
  8411   004A0E                     u10560:
  8412   004A0E                     l10532:
  8413                           
  8414                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 175:         ret =(Std_ReturnType)0x00;
  8415   004A0E  0E00               	movlw	0
  8416   004A10  6E11               	movwf	interrupt_intx_enable@ret^0,c
  8417                           
  8418                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 176:     }
  8419   004A12  EF3B  F025         	goto	l10544
  8420   004A16                     l1144:
  8421                           
  8422                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 184:                 (INTCONbits.GIE =1
      +                          );
  8423   004A16  8EF2               	bsf	242,7,c	;volatile
  8424                           
  8425                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 185:                 (INTCONbits.PEIE =
      +                          1);
  8426   004A18  8CF2               	bsf	242,6,c	;volatile
  8427                           
  8428                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 187:                 (INTCONbits.INT0IE
      +                           = 1);
  8429   004A1A  88F2               	bsf	242,4,c	;volatile
  8430   004A1C                     l10534:
  8431                           
  8432                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 188:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  8433   004A1C  0E01               	movlw	1
  8434   004A1E  6E11               	movwf	interrupt_intx_enable@ret^0,c
  8435                           
  8436                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 189:                 break;
  8437   004A20  EF3B  F025         	goto	l10544
  8438   004A24                     l1146:
  8439                           
  8440                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 203:                 (INTCONbits.GIE =1
      +                          );
  8441   004A24  8EF2               	bsf	242,7,c	;volatile
  8442                           
  8443                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 204:                 (INTCONbits.PEIE =
      +                          1);
  8444   004A26  8CF2               	bsf	242,6,c	;volatile
  8445                           
  8446                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 206:                 (INTCON3bits.INT1I
      +                          E = 1);
  8447   004A28  86F0               	bsf	240,3,c	;volatile
  8448   004A2A  EF0E  F025         	goto	l10534
  8449   004A2E                     l1147:
  8450                           
  8451                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 223:                 (INTCONbits.GIE =1
      +                          );
  8452   004A2E  8EF2               	bsf	242,7,c	;volatile
  8453                           
  8454                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 224:                 (INTCONbits.PEIE =
      +                          1);
  8455   004A30  8CF2               	bsf	242,6,c	;volatile
  8456                           
  8457                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 226:                 (INTCON3bits.INT2I
      +                          E = 1);
  8458   004A32  88F0               	bsf	240,4,c	;volatile
  8459   004A34  EF0E  F025         	goto	l10534
  8460   004A38                     l10542:
  8461   004A38  EE20 F004          	lfsr	2,4
  8462   004A3C  500D               	movf	interrupt_intx_enable@INTERRUPT_INTX^0,w,c
  8463   004A3E  26D9               	addwf	fsr2l,f,c
  8464   004A40  500E               	movf	(interrupt_intx_enable@INTERRUPT_INTX+1)^0,w,c
  8465   004A42  22DA               	addwfc	fsr2h,f,c
  8466   004A44  50DF               	movf	indf2,w,c
  8467   004A46  6E0F               	movwf	??_interrupt_intx_enable^0,c
  8468   004A48  6A10               	clrf	(??_interrupt_intx_enable+1)^0,c
  8469                           
  8470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8471                           ; Switch size 1, requested type "simple"
  8472                           ; Number of cases is 1, Range of values is 0 to 0
  8473                           ; switch strategies available:
  8474                           ; Name         Instructions Cycles
  8475                           ; simple_byte            4     3 (average)
  8476                           ;	Chosen strategy is simple_byte
  8477   004A4A  5010               	movf	(??_interrupt_intx_enable+1)^0,w,c
  8478   004A4C  0A00               	xorlw	0	; case 0
  8479   004A4E  B4D8               	btfsc	status,2,c
  8480   004A50  EF2C  F025         	goto	l12556
  8481   004A54  EF07  F025         	goto	l10532
  8482   004A58                     l12556:
  8483                           
  8484                           ; Switch size 1, requested type "simple"
  8485                           ; Number of cases is 3, Range of values is 0 to 2
  8486                           ; switch strategies available:
  8487                           ; Name         Instructions Cycles
  8488                           ; simple_byte           10     6 (average)
  8489                           ;	Chosen strategy is simple_byte
  8490   004A58  500F               	movf	??_interrupt_intx_enable^0,w,c
  8491   004A5A  0A00               	xorlw	0	; case 0
  8492   004A5C  B4D8               	btfsc	status,2,c
  8493   004A5E  EF0B  F025         	goto	l1144
  8494   004A62  0A01               	xorlw	1	; case 1
  8495   004A64  B4D8               	btfsc	status,2,c
  8496   004A66  EF12  F025         	goto	l1146
  8497   004A6A  0A03               	xorlw	3	; case 2
  8498   004A6C  B4D8               	btfsc	status,2,c
  8499   004A6E  EF17  F025         	goto	l1147
  8500   004A72  EF07  F025         	goto	l10532
  8501   004A76                     l10544:
  8502                           
  8503                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 233:     return ret ;
  8504   004A76  5011               	movf	interrupt_intx_enable@ret^0,w,c
  8505   004A78  0012               	return		;funcret
  8506   004A7A                     __end_of_interrupt_intx_enable:
  8507                           	callstack 0
  8508                           
  8509 ;; *************** function _interrupt_intx_edge_inti *****************
  8510 ;; Defined at:
  8511 ;;		line 272 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  INTERRUPT_IN    2   12[COMRAM] PTR const struct .
  8514 ;;		 -> INT_0(6), 
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  ret             1   16[COMRAM] unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      unsigned char 
  8519 ;; Registers used:
  8520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;Total ram usage:        5 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 4
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_Interrupt_Intx_Inti
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           	psect	text48
  8541   003608                     __ptext48:
  8542                           	callstack 0
  8543   003608                     _interrupt_intx_edge_inti:
  8544                           	callstack 24
  8545   003608                     
  8546                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 274:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  8547   003608  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8548   00360A  100E               	iorwf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8549   00360C  A4D8               	btfss	status,2,c
  8550   00360E  EF0B  F01B         	goto	u10471
  8551   003612  EF0D  F01B         	goto	u10470
  8552   003616                     u10471:
  8553   003616  EF79  F01B         	goto	l10482
  8554   00361A                     u10470:
  8555   00361A                     l10448:
  8556                           
  8557                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 275:         ret =(Std_ReturnType)0x00;
  8558   00361A  0E00               	movlw	0
  8559   00361C  6E11               	movwf	interrupt_intx_edge_inti@ret^0,c
  8560                           
  8561                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 276:     }
  8562   00361E  EF98  F01B         	goto	l10484
  8563   003622                     l10450:
  8564                           
  8565                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 281:                 if(INTERRUPT_FALLI
      +                          NG_EDGE == INTERRUPT_INTX->edge){
  8566   003622  EE20 F003          	lfsr	2,3
  8567   003626  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8568   003628  26D9               	addwf	fsr2l,f,c
  8569   00362A  500E               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8570   00362C  22DA               	addwfc	fsr2h,f,c
  8571   00362E  50DF               	movf	indf2,w,c
  8572   003630  A4D8               	btfss	status,2,c
  8573   003632  EF1D  F01B         	goto	u10481
  8574   003636  EF1F  F01B         	goto	u10480
  8575   00363A                     u10481:
  8576   00363A  EF22  F01B         	goto	l10454
  8577   00363E                     u10480:
  8578   00363E                     
  8579                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 282:                     (INTCON2bits.I
      +                          NTEDG0 = 0);
  8580   00363E  9CF1               	bcf	241,6,c	;volatile
  8581                           
  8582                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 283:                 }
  8583   003640  EF31  F01B         	goto	l10458
  8584   003644                     l10454:
  8585   003644  EE20 F003          	lfsr	2,3
  8586   003648  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8587   00364A  26D9               	addwf	fsr2l,f,c
  8588   00364C  500E               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8589   00364E  22DA               	addwfc	fsr2h,f,c
  8590   003650  04DE               	decf	postinc2,w,c
  8591   003652  A4D8               	btfss	status,2,c
  8592   003654  EF2E  F01B         	goto	u10491
  8593   003658  EF30  F01B         	goto	u10490
  8594   00365C                     u10491:
  8595   00365C  EF31  F01B         	goto	l10458
  8596   003660                     u10490:
  8597   003660                     
  8598                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 285:                     (INTCON2bits.I
      +                          NTEDG0 = 1);
  8599   003660  8CF1               	bsf	241,6,c	;volatile
  8600   003662                     l10458:
  8601                           
  8602                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 288:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  8603   003662  0E01               	movlw	1
  8604   003664  6E11               	movwf	interrupt_intx_edge_inti@ret^0,c
  8605                           
  8606                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 289:                 break;
  8607   003666  EF98  F01B         	goto	l10484
  8608   00366A                     l10460:
  8609                           
  8610                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 291:                 if(INTERRUPT_FALLI
      +                          NG_EDGE == INTERRUPT_INTX->edge){
  8611   00366A  EE20 F003          	lfsr	2,3
  8612   00366E  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8613   003670  26D9               	addwf	fsr2l,f,c
  8614   003672  500E               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8615   003674  22DA               	addwfc	fsr2h,f,c
  8616   003676  50DF               	movf	indf2,w,c
  8617   003678  A4D8               	btfss	status,2,c
  8618   00367A  EF41  F01B         	goto	u10501
  8619   00367E  EF43  F01B         	goto	u10500
  8620   003682                     u10501:
  8621   003682  EF46  F01B         	goto	l10464
  8622   003686                     u10500:
  8623   003686                     
  8624                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 292:                     (INTCON2bits.I
      +                          NTEDG1 = 0);
  8625   003686  9AF1               	bcf	241,5,c	;volatile
  8626                           
  8627                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 293:                 }
  8628   003688  EF31  F01B         	goto	l10458
  8629   00368C                     l10464:
  8630   00368C  EE20 F003          	lfsr	2,3
  8631   003690  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8632   003692  26D9               	addwf	fsr2l,f,c
  8633   003694  500E               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8634   003696  22DA               	addwfc	fsr2h,f,c
  8635   003698  04DE               	decf	postinc2,w,c
  8636   00369A  A4D8               	btfss	status,2,c
  8637   00369C  EF52  F01B         	goto	u10511
  8638   0036A0  EF54  F01B         	goto	u10510
  8639   0036A4                     u10511:
  8640   0036A4  EF31  F01B         	goto	l10458
  8641   0036A8                     u10510:
  8642   0036A8                     
  8643                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 295:                     (INTCON2bits.I
      +                          NTEDG1 = 1);
  8644   0036A8  8AF1               	bsf	241,5,c	;volatile
  8645                           
  8646                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 296:                 }
  8647   0036AA  EF31  F01B         	goto	l10458
  8648   0036AE                     l10470:
  8649                           
  8650                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 301:                if(INTERRUPT_FALLIN
      +                          G_EDGE == INTERRUPT_INTX->edge){
  8651   0036AE  EE20 F003          	lfsr	2,3
  8652   0036B2  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8653   0036B4  26D9               	addwf	fsr2l,f,c
  8654   0036B6  500E               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8655   0036B8  22DA               	addwfc	fsr2h,f,c
  8656   0036BA  50DF               	movf	indf2,w,c
  8657   0036BC  A4D8               	btfss	status,2,c
  8658   0036BE  EF63  F01B         	goto	u10521
  8659   0036C2  EF65  F01B         	goto	u10520
  8660   0036C6                     u10521:
  8661   0036C6  EF68  F01B         	goto	l10474
  8662   0036CA                     u10520:
  8663   0036CA                     
  8664                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 302:                     (INTCON2bits.I
      +                          NTEDG2 = 0);
  8665   0036CA  98F1               	bcf	241,4,c	;volatile
  8666                           
  8667                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 303:                 }
  8668   0036CC  EF31  F01B         	goto	l10458
  8669   0036D0                     l10474:
  8670   0036D0  EE20 F003          	lfsr	2,3
  8671   0036D4  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8672   0036D6  26D9               	addwf	fsr2l,f,c
  8673   0036D8  500E               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8674   0036DA  22DA               	addwfc	fsr2h,f,c
  8675   0036DC  04DE               	decf	postinc2,w,c
  8676   0036DE  A4D8               	btfss	status,2,c
  8677   0036E0  EF74  F01B         	goto	u10531
  8678   0036E4  EF76  F01B         	goto	u10530
  8679   0036E8                     u10531:
  8680   0036E8  EF31  F01B         	goto	l10458
  8681   0036EC                     u10530:
  8682   0036EC                     
  8683                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 305:                     (INTCON2bits.I
      +                          NTEDG2 = 1);
  8684   0036EC  88F1               	bsf	241,4,c	;volatile
  8685                           
  8686                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 306:                 }
  8687   0036EE  EF31  F01B         	goto	l10458
  8688   0036F2                     l10482:
  8689   0036F2  EE20 F004          	lfsr	2,4
  8690   0036F6  500D               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  8691   0036F8  26D9               	addwf	fsr2l,f,c
  8692   0036FA  500E               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  8693   0036FC  22DA               	addwfc	fsr2h,f,c
  8694   0036FE  50DF               	movf	indf2,w,c
  8695   003700  6E0F               	movwf	??_interrupt_intx_edge_inti^0,c
  8696   003702  6A10               	clrf	(??_interrupt_intx_edge_inti+1)^0,c
  8697                           
  8698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8699                           ; Switch size 1, requested type "simple"
  8700                           ; Number of cases is 1, Range of values is 0 to 0
  8701                           ; switch strategies available:
  8702                           ; Name         Instructions Cycles
  8703                           ; simple_byte            4     3 (average)
  8704                           ;	Chosen strategy is simple_byte
  8705   003704  5010               	movf	(??_interrupt_intx_edge_inti+1)^0,w,c
  8706   003706  0A00               	xorlw	0	; case 0
  8707   003708  B4D8               	btfsc	status,2,c
  8708   00370A  EF89  F01B         	goto	l12558
  8709   00370E  EF0D  F01B         	goto	l10448
  8710   003712                     l12558:
  8711                           
  8712                           ; Switch size 1, requested type "simple"
  8713                           ; Number of cases is 3, Range of values is 0 to 2
  8714                           ; switch strategies available:
  8715                           ; Name         Instructions Cycles
  8716                           ; simple_byte           10     6 (average)
  8717                           ;	Chosen strategy is simple_byte
  8718   003712  500F               	movf	??_interrupt_intx_edge_inti^0,w,c
  8719   003714  0A00               	xorlw	0	; case 0
  8720   003716  B4D8               	btfsc	status,2,c
  8721   003718  EF11  F01B         	goto	l10450
  8722   00371C  0A01               	xorlw	1	; case 1
  8723   00371E  B4D8               	btfsc	status,2,c
  8724   003720  EF35  F01B         	goto	l10460
  8725   003724  0A03               	xorlw	3	; case 2
  8726   003726  B4D8               	btfsc	status,2,c
  8727   003728  EF57  F01B         	goto	l10470
  8728   00372C  EF0D  F01B         	goto	l10448
  8729   003730                     l10484:
  8730                           
  8731                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 314:     return ret ;
  8732   003730  5011               	movf	interrupt_intx_edge_inti@ret^0,w,c
  8733   003732  0012               	return		;funcret
  8734   003734                     __end_of_interrupt_intx_edge_inti:
  8735                           	callstack 0
  8736                           
  8737 ;; *************** function _interrupt_intx_disable *****************
  8738 ;; Defined at:
  8739 ;;		line 240 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  INTERRUPT_IN    2   12[COMRAM] PTR const struct .
  8742 ;;		 -> INT_0(6), 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;  ret             1   16[COMRAM] unsigned char 
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  1    wreg      unsigned char 
  8747 ;; Registers used:
  8748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;Total ram usage:        5 bytes
  8759 ;; Hardware stack levels used: 1
  8760 ;; Hardware stack levels required when called: 4
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_Interrupt_Intx_Inti
  8765 ;;		_Interrupt_Intx_Deinti
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           	psect	text49
  8770   004AF4                     __ptext49:
  8771                           	callstack 0
  8772   004AF4                     _interrupt_intx_disable:
  8773                           	callstack 24
  8774   004AF4                     
  8775                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 242:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  8776   004AF4  500D               	movf	interrupt_intx_disable@INTERRUPT_INTX^0,w,c
  8777   004AF6  100E               	iorwf	(interrupt_intx_disable@INTERRUPT_INTX+1)^0,w,c
  8778   004AF8  A4D8               	btfss	status,2,c
  8779   004AFA  EF81  F025         	goto	u10451
  8780   004AFE  EF83  F025         	goto	u10450
  8781   004B02                     u10451:
  8782   004B02  EF92  F025         	goto	l10410
  8783   004B06                     u10450:
  8784   004B06                     l10400:
  8785                           
  8786                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 243:         ret =(Std_ReturnType)0x00;
  8787   004B06  0E00               	movlw	0
  8788   004B08  6E11               	movwf	interrupt_intx_disable@ret^0,c
  8789                           
  8790                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 244:     }
  8791   004B0A  EFB1  F025         	goto	l10412
  8792   004B0E                     l1155:
  8793                           
  8794                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 249:                 (INTCONbits.INT0IE
      +                           = 0);
  8795   004B0E  98F2               	bcf	242,4,c	;volatile
  8796   004B10                     l10402:
  8797                           
  8798                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 250:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  8799   004B10  0E01               	movlw	1
  8800   004B12  6E11               	movwf	interrupt_intx_disable@ret^0,c
  8801                           
  8802                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 251:                 break;
  8803   004B14  EFB1  F025         	goto	l10412
  8804   004B18                     l1157:
  8805                           
  8806                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 253:                 (INTCON3bits.INT1I
      +                          E = 0);
  8807   004B18  96F0               	bcf	240,3,c	;volatile
  8808   004B1A  EF88  F025         	goto	l10402
  8809   004B1E                     l1158:
  8810                           
  8811                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 257:                 (INTCON3bits.INT2I
      +                          E = 0);
  8812   004B1E  98F0               	bcf	240,4,c	;volatile
  8813   004B20  EF88  F025         	goto	l10402
  8814   004B24                     l10410:
  8815   004B24  EE20 F004          	lfsr	2,4
  8816   004B28  500D               	movf	interrupt_intx_disable@INTERRUPT_INTX^0,w,c
  8817   004B2A  26D9               	addwf	fsr2l,f,c
  8818   004B2C  500E               	movf	(interrupt_intx_disable@INTERRUPT_INTX+1)^0,w,c
  8819   004B2E  22DA               	addwfc	fsr2h,f,c
  8820   004B30  50DF               	movf	indf2,w,c
  8821   004B32  6E0F               	movwf	??_interrupt_intx_disable^0,c
  8822   004B34  6A10               	clrf	(??_interrupt_intx_disable+1)^0,c
  8823                           
  8824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8825                           ; Switch size 1, requested type "simple"
  8826                           ; Number of cases is 1, Range of values is 0 to 0
  8827                           ; switch strategies available:
  8828                           ; Name         Instructions Cycles
  8829                           ; simple_byte            4     3 (average)
  8830                           ;	Chosen strategy is simple_byte
  8831   004B36  5010               	movf	(??_interrupt_intx_disable+1)^0,w,c
  8832   004B38  0A00               	xorlw	0	; case 0
  8833   004B3A  B4D8               	btfsc	status,2,c
  8834   004B3C  EFA2  F025         	goto	l12560
  8835   004B40  EF83  F025         	goto	l10400
  8836   004B44                     l12560:
  8837                           
  8838                           ; Switch size 1, requested type "simple"
  8839                           ; Number of cases is 3, Range of values is 0 to 2
  8840                           ; switch strategies available:
  8841                           ; Name         Instructions Cycles
  8842                           ; simple_byte           10     6 (average)
  8843                           ;	Chosen strategy is simple_byte
  8844   004B44  500F               	movf	??_interrupt_intx_disable^0,w,c
  8845   004B46  0A00               	xorlw	0	; case 0
  8846   004B48  B4D8               	btfsc	status,2,c
  8847   004B4A  EF87  F025         	goto	l1155
  8848   004B4E  0A01               	xorlw	1	; case 1
  8849   004B50  B4D8               	btfsc	status,2,c
  8850   004B52  EF8C  F025         	goto	l1157
  8851   004B56  0A03               	xorlw	3	; case 2
  8852   004B58  B4D8               	btfsc	status,2,c
  8853   004B5A  EF8F  F025         	goto	l1158
  8854   004B5E  EF83  F025         	goto	l10400
  8855   004B62                     l10412:
  8856                           
  8857                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 264:     return ret ;
  8858   004B62  5011               	movf	interrupt_intx_disable@ret^0,w,c
  8859   004B64  0012               	return		;funcret
  8860   004B66                     __end_of_interrupt_intx_disable:
  8861                           	callstack 0
  8862                           
  8863 ;; *************** function _interrupt_intx_clear *****************
  8864 ;; Defined at:
  8865 ;;		line 384 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  INTERRUPT_IN    2   12[COMRAM] PTR const struct .
  8868 ;;		 -> INT_0(6), 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;  ret             1   16[COMRAM] unsigned char 
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      unsigned char 
  8873 ;; Registers used:
  8874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;Total ram usage:        5 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; Hardware stack levels required when called: 4
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_Interrupt_Intx_Inti
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text50
  8895   004B66                     __ptext50:
  8896                           	callstack 0
  8897   004B66                     _interrupt_intx_clear:
  8898                           	callstack 24
  8899   004B66                     
  8900                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 386:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  8901   004B66  500D               	movf	interrupt_intx_clear@INTERRUPT_INTX^0,w,c
  8902   004B68  100E               	iorwf	(interrupt_intx_clear@INTERRUPT_INTX+1)^0,w,c
  8903   004B6A  A4D8               	btfss	status,2,c
  8904   004B6C  EFBA  F025         	goto	u10461
  8905   004B70  EFBC  F025         	goto	u10460
  8906   004B74                     u10461:
  8907   004B74  EFCB  F025         	goto	l10434
  8908   004B78                     u10460:
  8909   004B78                     l10424:
  8910                           
  8911                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 387:         ret =(Std_ReturnType)0x00;
  8912   004B78  0E00               	movlw	0
  8913   004B7A  6E11               	movwf	interrupt_intx_clear@ret^0,c
  8914                           
  8915                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 388:     }
  8916   004B7C  EFEA  F025         	goto	l10436
  8917   004B80                     l1194:
  8918                           
  8919                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 393:                 (INTCONbits.INT0IF
      +                           = 0);
  8920   004B80  92F2               	bcf	242,1,c	;volatile
  8921   004B82                     l10426:
  8922                           
  8923                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 394:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  8924   004B82  0E01               	movlw	1
  8925   004B84  6E11               	movwf	interrupt_intx_clear@ret^0,c
  8926                           
  8927                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 395:                 break;
  8928   004B86  EFEA  F025         	goto	l10436
  8929   004B8A                     l1196:
  8930                           
  8931                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 397:                 (INTCON3bits.INT1I
      +                          F = 0);
  8932   004B8A  90F0               	bcf	240,0,c	;volatile
  8933   004B8C  EFC1  F025         	goto	l10426
  8934   004B90                     l1197:
  8935                           
  8936                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 401:                 (INTCON3bits.INT2I
      +                          F = 0);
  8937   004B90  92F0               	bcf	240,1,c	;volatile
  8938   004B92  EFC1  F025         	goto	l10426
  8939   004B96                     l10434:
  8940   004B96  EE20 F004          	lfsr	2,4
  8941   004B9A  500D               	movf	interrupt_intx_clear@INTERRUPT_INTX^0,w,c
  8942   004B9C  26D9               	addwf	fsr2l,f,c
  8943   004B9E  500E               	movf	(interrupt_intx_clear@INTERRUPT_INTX+1)^0,w,c
  8944   004BA0  22DA               	addwfc	fsr2h,f,c
  8945   004BA2  50DF               	movf	indf2,w,c
  8946   004BA4  6E0F               	movwf	??_interrupt_intx_clear^0,c
  8947   004BA6  6A10               	clrf	(??_interrupt_intx_clear+1)^0,c
  8948                           
  8949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8950                           ; Switch size 1, requested type "simple"
  8951                           ; Number of cases is 1, Range of values is 0 to 0
  8952                           ; switch strategies available:
  8953                           ; Name         Instructions Cycles
  8954                           ; simple_byte            4     3 (average)
  8955                           ;	Chosen strategy is simple_byte
  8956   004BA8  5010               	movf	(??_interrupt_intx_clear+1)^0,w,c
  8957   004BAA  0A00               	xorlw	0	; case 0
  8958   004BAC  B4D8               	btfsc	status,2,c
  8959   004BAE  EFDB  F025         	goto	l12562
  8960   004BB2  EFBC  F025         	goto	l10424
  8961   004BB6                     l12562:
  8962                           
  8963                           ; Switch size 1, requested type "simple"
  8964                           ; Number of cases is 3, Range of values is 0 to 2
  8965                           ; switch strategies available:
  8966                           ; Name         Instructions Cycles
  8967                           ; simple_byte           10     6 (average)
  8968                           ;	Chosen strategy is simple_byte
  8969   004BB6  500F               	movf	??_interrupt_intx_clear^0,w,c
  8970   004BB8  0A00               	xorlw	0	; case 0
  8971   004BBA  B4D8               	btfsc	status,2,c
  8972   004BBC  EFC0  F025         	goto	l1194
  8973   004BC0  0A01               	xorlw	1	; case 1
  8974   004BC2  B4D8               	btfsc	status,2,c
  8975   004BC4  EFC5  F025         	goto	l1196
  8976   004BC8  0A03               	xorlw	3	; case 2
  8977   004BCA  B4D8               	btfsc	status,2,c
  8978   004BCC  EFC8  F025         	goto	l1197
  8979   004BD0  EFBC  F025         	goto	l10424
  8980   004BD4                     l10436:
  8981                           
  8982                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 408:     return ret ;
  8983   004BD4  5011               	movf	interrupt_intx_clear@ret^0,w,c
  8984   004BD6  0012               	return		;funcret
  8985   004BD8                     __end_of_interrupt_intx_clear:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function _ADC_inti *****************
  8989 ;; Defined at:
  8990 ;;		line 15 in file "MKAL_layer/ADC/hal_adc.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  ADC_conf        2   15[COMRAM] PTR const struct .
  8993 ;;		 -> ADC_2(6), ADC_(6), 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  ret             1   18[COMRAM] unsigned char 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      unsigned char 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;Total ram usage:        4 bytes
  9010 ;; Hardware stack levels used: 1
  9011 ;; Hardware stack levels required when called: 5
  9012 ;; This function calls:
  9013 ;;		_adc_channel_port_confige
  9014 ;;		_configure_voltage_ref
  9015 ;;		_select_result_format
  9016 ;; This function is called by:
  9017 ;;		_intitialized_functions
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text51
  9022   003FEE                     __ptext51:
  9023                           	callstack 0
  9024   003FEE                     _ADC_inti:
  9025                           	callstack 24
  9026   003FEE                     
  9027                           ;MKAL_layer/ADC/hal_adc.c: 17:     if (((void*)0) == ADC_conf){
  9028   003FEE  5010               	movf	ADC_inti@ADC_conf^0,w,c
  9029   003FF0  1011               	iorwf	(ADC_inti@ADC_conf+1)^0,w,c
  9030   003FF2  A4D8               	btfss	status,2,c
  9031   003FF4  EFFE  F01F         	goto	u10851
  9032   003FF8  EF00  F020         	goto	u10850
  9033   003FFC                     u10851:
  9034   003FFC  EF04  F020         	goto	l571
  9035   004000                     u10850:
  9036   004000                     
  9037                           ;MKAL_layer/ADC/hal_adc.c: 18:         ret =(Std_ReturnType)0x00;
  9038   004000  0E00               	movlw	0
  9039   004002  6E13               	movwf	ADC_inti@ret^0,c
  9040                           
  9041                           ;MKAL_layer/ADC/hal_adc.c: 19:     }
  9042   004004  EF55  F020         	goto	l10780
  9043   004008                     l571:
  9044                           
  9045                           ;MKAL_layer/ADC/hal_adc.c: 22:         (ADCON0bits.ADON = 0);
  9046   004008  90C2               	bcf	194,0,c	;volatile
  9047   00400A                     
  9048                           ;MKAL_layer/ADC/hal_adc.c: 24:         ADCON2bits.ACQT = ADC_conf->Acquisition_time;
  9049   00400A  EE20 F003          	lfsr	2,3
  9050   00400E  5010               	movf	ADC_inti@ADC_conf^0,w,c
  9051   004010  26D9               	addwf	fsr2l,f,c
  9052   004012  5011               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9053   004014  22DA               	addwfc	fsr2h,f,c
  9054   004016  50DF               	movf	indf2,w,c
  9055   004018  6E12               	movwf	??_ADC_inti^0,c
  9056   00401A  4612               	rlncf	??_ADC_inti^0,f,c
  9057   00401C  4612               	rlncf	??_ADC_inti^0,f,c
  9058   00401E  4612               	rlncf	??_ADC_inti^0,f,c
  9059   004020  50C0               	movf	192,w,c	;volatile
  9060   004022  1812               	xorwf	??_ADC_inti^0,w,c
  9061   004024  0BC7               	andlw	-57
  9062   004026  1812               	xorwf	??_ADC_inti^0,w,c
  9063   004028  6EC0               	movwf	192,c	;volatile
  9064                           
  9065                           ;MKAL_layer/ADC/hal_adc.c: 26:         ADCON2bits.ADCS = ADC_conf->Conversion_Clock;
  9066   00402A  EE20 F004          	lfsr	2,4
  9067   00402E  5010               	movf	ADC_inti@ADC_conf^0,w,c
  9068   004030  26D9               	addwf	fsr2l,f,c
  9069   004032  5011               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9070   004034  22DA               	addwfc	fsr2h,f,c
  9071   004036  50DF               	movf	indf2,w,c
  9072   004038  6E12               	movwf	??_ADC_inti^0,c
  9073   00403A  50C0               	movf	192,w,c	;volatile
  9074   00403C  1812               	xorwf	??_ADC_inti^0,w,c
  9075   00403E  0BF8               	andlw	-8
  9076   004040  1812               	xorwf	??_ADC_inti^0,w,c
  9077   004042  6EC0               	movwf	192,c	;volatile
  9078                           
  9079                           ;MKAL_layer/ADC/hal_adc.c: 28:         ADCON0bits.CHS = ADC_conf->ADC_CHANNAL_SELECT;
  9080   004044  EE20 F002          	lfsr	2,2
  9081   004048  5010               	movf	ADC_inti@ADC_conf^0,w,c
  9082   00404A  26D9               	addwf	fsr2l,f,c
  9083   00404C  5011               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9084   00404E  22DA               	addwfc	fsr2h,f,c
  9085   004050  50DF               	movf	indf2,w,c
  9086   004052  6E12               	movwf	??_ADC_inti^0,c
  9087   004054  4612               	rlncf	??_ADC_inti^0,f,c
  9088   004056  4612               	rlncf	??_ADC_inti^0,f,c
  9089   004058  50C2               	movf	194,w,c	;volatile
  9090   00405A  1812               	xorwf	??_ADC_inti^0,w,c
  9091   00405C  0BC3               	andlw	-61
  9092   00405E  1812               	xorwf	??_ADC_inti^0,w,c
  9093   004060  6EC2               	movwf	194,c	;volatile
  9094   004062                     
  9095                           ;MKAL_layer/ADC/hal_adc.c: 29:         adc_channel_port_confige(ADC_conf->ADC_CHANNAL_SE
      +                          LECT);
  9096   004062  EE20 F002          	lfsr	2,2
  9097   004066  5010               	movf	ADC_inti@ADC_conf^0,w,c
  9098   004068  26D9               	addwf	fsr2l,f,c
  9099   00406A  5011               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  9100   00406C  22DA               	addwfc	fsr2h,f,c
  9101   00406E  50DF               	movf	indf2,w,c
  9102   004070  ECBF  F01E         	call	_adc_channel_port_confige
  9103   004074                     
  9104                           ;MKAL_layer/ADC/hal_adc.c: 50:         (INTCONbits.GIE =1);
  9105   004074  8EF2               	bsf	242,7,c	;volatile
  9106   004076                     
  9107                           ;MKAL_layer/ADC/hal_adc.c: 51:         (INTCONbits.PEIE =1);
  9108   004076  8CF2               	bsf	242,6,c	;volatile
  9109   004078                     
  9110                           ;MKAL_layer/ADC/hal_adc.c: 53:         (PIE1bits.ADIE = 1);
  9111   004078  8C9D               	bsf	157,6,c	;volatile
  9112   00407A                     
  9113                           ;MKAL_layer/ADC/hal_adc.c: 55:         (PIR1bits.ADIF = 0);
  9114   00407A  9C9E               	bcf	158,6,c	;volatile
  9115   00407C                     
  9116                           ;MKAL_layer/ADC/hal_adc.c: 57:         ADC_INTERRUPTHANDLER = ADC_conf->ADC_interruptHan
      +                          dler;
  9117   00407C  C010  FFD9         	movff	ADC_inti@ADC_conf,fsr2l
  9118   004080  C011  FFDA         	movff	ADC_inti@ADC_conf+1,fsr2h
  9119   004084  CFDE F0BA          	movff	postinc2,_ADC_INTERRUPTHANDLER
  9120   004088  CFDD F0BB          	movff	postdec2,_ADC_INTERRUPTHANDLER+1
  9121   00408C                     
  9122                           ;MKAL_layer/ADC/hal_adc.c: 61:         select_result_format(ADC_conf);
  9123   00408C  C010  F00D         	movff	ADC_inti@ADC_conf,select_result_format@ADC_conf
  9124   004090  C011  F00E         	movff	ADC_inti@ADC_conf+1,select_result_format@ADC_conf+1
  9125   004094  EC7A  F028         	call	_select_result_format	;wreg free
  9126   004098                     
  9127                           ;MKAL_layer/ADC/hal_adc.c: 63:         configure_voltage_ref(ADC_conf);
  9128   004098  C010  F00D         	movff	ADC_inti@ADC_conf,configure_voltage_ref@ADC_conf
  9129   00409C  C011  F00E         	movff	ADC_inti@ADC_conf+1,configure_voltage_ref@ADC_conf+1
  9130   0040A0  ECCC  F027         	call	_configure_voltage_ref	;wreg free
  9131   0040A4                     
  9132                           ;MKAL_layer/ADC/hal_adc.c: 65:         (ADCON0bits.ADON = 1);
  9133   0040A4  80C2               	bsf	194,0,c	;volatile
  9134   0040A6                     
  9135                           ;MKAL_layer/ADC/hal_adc.c: 66:         ret = (Std_ReturnType)0x01;
  9136   0040A6  0E01               	movlw	1
  9137   0040A8  6E13               	movwf	ADC_inti@ret^0,c
  9138   0040AA                     l10780:
  9139                           
  9140                           ;MKAL_layer/ADC/hal_adc.c: 68:     return ret;
  9141   0040AA  5013               	movf	ADC_inti@ret^0,w,c
  9142   0040AC  0012               	return		;funcret
  9143   0040AE                     __end_of_ADC_inti:
  9144                           	callstack 0
  9145                           
  9146 ;; *************** function _select_result_format *****************
  9147 ;; Defined at:
  9148 ;;		line 195 in file "MKAL_layer/ADC/hal_adc.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  ADC_conf        2   12[COMRAM] PTR const struct .
  9151 ;;		 -> ADC_2(6), ADC_(6), 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;Total ram usage:        2 bytes
  9168 ;; Hardware stack levels used: 1
  9169 ;; Hardware stack levels required when called: 4
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_ADC_inti
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text52
  9178   0050F4                     __ptext52:
  9179                           	callstack 0
  9180   0050F4                     _select_result_format:
  9181                           	callstack 24
  9182   0050F4                     
  9183                           ;MKAL_layer/ADC/hal_adc.c: 196:     if(ADC_conf->result_format == 1){
  9184   0050F4  EE20 F005          	lfsr	2,5
  9185   0050F8  500D               	movf	select_result_format@ADC_conf^0,w,c
  9186   0050FA  26D9               	addwf	fsr2l,f,c
  9187   0050FC  500E               	movf	(select_result_format@ADC_conf+1)^0,w,c
  9188   0050FE  22DA               	addwfc	fsr2h,f,c
  9189   005100  A2DF               	btfss	indf2,1,c
  9190   005102  EF85  F028         	goto	u10391
  9191   005106  EF87  F028         	goto	u10390
  9192   00510A                     u10391:
  9193   00510A  EF8A  F028         	goto	l10358
  9194   00510E                     u10390:
  9195   00510E                     
  9196                           ;MKAL_layer/ADC/hal_adc.c: 197:         (ADCON2bits.ADFM = 1);
  9197   00510E  8EC0               	bsf	192,7,c	;volatile
  9198                           
  9199                           ;MKAL_layer/ADC/hal_adc.c: 198:     }else if(ADC_conf->result_format == 0){
  9200   005110  EF9B  F028         	goto	l646
  9201   005114                     l10358:
  9202   005114  EE20 F005          	lfsr	2,5
  9203   005118  500D               	movf	select_result_format@ADC_conf^0,w,c
  9204   00511A  26D9               	addwf	fsr2l,f,c
  9205   00511C  500E               	movf	(select_result_format@ADC_conf+1)^0,w,c
  9206   00511E  22DA               	addwfc	fsr2h,f,c
  9207   005120  B2DF               	btfsc	indf2,1,c
  9208   005122  EF95  F028         	goto	u10401
  9209   005126  EF97  F028         	goto	u10400
  9210   00512A                     u10401:
  9211   00512A  EF9A  F028         	goto	l644
  9212   00512E                     u10400:
  9213   00512E                     
  9214                           ;MKAL_layer/ADC/hal_adc.c: 199:         (ADCON2bits.ADFM = 0) ;
  9215   00512E  9EC0               	bcf	192,7,c	;volatile
  9216                           
  9217                           ;MKAL_layer/ADC/hal_adc.c: 200:     }
  9218   005130  EF9B  F028         	goto	l646
  9219   005134                     l644:
  9220                           
  9221                           ;MKAL_layer/ADC/hal_adc.c: 202:     {;MKAL_layer/ADC/hal_adc.c: 203:         (ADCON2bits
      +                          .ADFM = 1);
  9222   005134  8EC0               	bsf	192,7,c	;volatile
  9223   005136                     l646:
  9224   005136  0012               	return		;funcret
  9225   005138                     __end_of_select_result_format:
  9226                           	callstack 0
  9227                           
  9228 ;; *************** function _configure_voltage_ref *****************
  9229 ;; Defined at:
  9230 ;;		line 207 in file "MKAL_layer/ADC/hal_adc.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  ADC_conf        2   12[COMRAM] PTR const struct .
  9233 ;;		 -> ADC_2(6), ADC_(6), 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1    wreg      void 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;Total ram usage:        2 bytes
  9250 ;; Hardware stack levels used: 1
  9251 ;; Hardware stack levels required when called: 4
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_ADC_inti
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text53
  9260   004F98                     __ptext53:
  9261                           	callstack 0
  9262   004F98                     _configure_voltage_ref:
  9263                           	callstack 24
  9264   004F98                     
  9265                           ;MKAL_layer/ADC/hal_adc.c: 208:       if(ADC_conf->result_format == 1){
  9266   004F98  EE20 F005          	lfsr	2,5
  9267   004F9C  500D               	movf	configure_voltage_ref@ADC_conf^0,w,c
  9268   004F9E  26D9               	addwf	fsr2l,f,c
  9269   004FA0  500E               	movf	(configure_voltage_ref@ADC_conf+1)^0,w,c
  9270   004FA2  22DA               	addwfc	fsr2h,f,c
  9271   004FA4  A2DF               	btfss	indf2,1,c
  9272   004FA6  EFD7  F027         	goto	u10411
  9273   004FAA  EFD9  F027         	goto	u10410
  9274   004FAE                     u10411:
  9275   004FAE  EFDD  F027         	goto	l10366
  9276   004FB2                     u10410:
  9277   004FB2                     
  9278                           ;MKAL_layer/ADC/hal_adc.c: 209:         (ADCON1bits.VCFG0 = 0);
  9279   004FB2  98C1               	bcf	193,4,c	;volatile
  9280                           
  9281                           ;MKAL_layer/ADC/hal_adc.c: 210:         (ADCON1bits.VCFG0 = 0);
  9282   004FB4  98C1               	bcf	193,4,c	;volatile
  9283                           
  9284                           ;MKAL_layer/ADC/hal_adc.c: 211:     }else if(ADC_conf->result_format == 0){
  9285   004FB6  EFF0  F027         	goto	l653
  9286   004FBA                     l10366:
  9287   004FBA  EE20 F005          	lfsr	2,5
  9288   004FBE  500D               	movf	configure_voltage_ref@ADC_conf^0,w,c
  9289   004FC0  26D9               	addwf	fsr2l,f,c
  9290   004FC2  500E               	movf	(configure_voltage_ref@ADC_conf+1)^0,w,c
  9291   004FC4  22DA               	addwfc	fsr2h,f,c
  9292   004FC6  B2DF               	btfsc	indf2,1,c
  9293   004FC8  EFE8  F027         	goto	u10421
  9294   004FCC  EFEA  F027         	goto	u10420
  9295   004FD0                     u10421:
  9296   004FD0  EFEE  F027         	goto	l651
  9297   004FD4                     u10420:
  9298   004FD4                     
  9299                           ;MKAL_layer/ADC/hal_adc.c: 212:         (ADCON1bits.VCFG0 = 1) ;
  9300   004FD4  88C1               	bsf	193,4,c	;volatile
  9301                           
  9302                           ;MKAL_layer/ADC/hal_adc.c: 213:         (ADCON1bits.VCFG1 = 1) ;
  9303   004FD6  8AC1               	bsf	193,5,c	;volatile
  9304                           
  9305                           ;MKAL_layer/ADC/hal_adc.c: 214:     }
  9306   004FD8  EFF0  F027         	goto	l653
  9307   004FDC                     l651:
  9308                           
  9309                           ;MKAL_layer/ADC/hal_adc.c: 216:     {;MKAL_layer/ADC/hal_adc.c: 217:         (ADCON1bits
      +                          .VCFG0 = 0);
  9310   004FDC  98C1               	bcf	193,4,c	;volatile
  9311                           
  9312                           ;MKAL_layer/ADC/hal_adc.c: 218:         (ADCON1bits.VCFG0 = 0);
  9313   004FDE  98C1               	bcf	193,4,c	;volatile
  9314   004FE0                     l653:
  9315   004FE0  0012               	return		;funcret
  9316   004FE2                     __end_of_configure_voltage_ref:
  9317                           	callstack 0
  9318                           
  9319 ;; *************** function _ds1307_read_values *****************
  9320 ;; Defined at:
  9321 ;;		line 12 in file "ECU_layer/DS1307/hal_ds1307.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  i2c_obj         2   25[COMRAM] PTR const struct .
  9324 ;;		 -> mssp_i2c(15), 
  9325 ;;  address_1       1   27[COMRAM] unsigned char 
  9326 ;;  return_data_    2   28[COMRAM] PTR unsigned char 
  9327 ;;		 -> ds13_data(6), 
  9328 ;;  _ack            1   30[COMRAM] PTR unsigned char 
  9329 ;;		 -> i2c_ack(1), 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      void 
  9334 ;; Registers used:
  9335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9341 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9345 ;;Total ram usage:        6 bytes
  9346 ;; Hardware stack levels used: 1
  9347 ;; Hardware stack levels required when called: 6
  9348 ;; This function calls:
  9349 ;;		_MSSP_I2C_Master_Send_Start
  9350 ;;		_MSSP_I2C_Master_Send_Stop
  9351 ;;		_MSSP_I2C_Master_read_data_in_register
  9352 ;; This function is called by:
  9353 ;;		_main
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text54
  9358   003216                     __ptext54:
  9359                           	callstack 0
  9360   003216                     _ds1307_read_values:
  9361                           	callstack 24
  9362   003216                     
  9363                           ;ECU_layer/DS1307/hal_ds1307.c: 13:         MSSP_I2C_Master_Send_Start(i2c_obj);
  9364   003216  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  9365   00321A  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  9366   00321E  EC6A  F029         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  9367   003222                     
  9368                           ;ECU_layer/DS1307/hal_ds1307.c: 14:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x00,return_data_array++,_ack);
  9369   003222  C01A  F012         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  9370   003226  C01B  F013         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  9371   00322A  C01C  F014         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  9372   00322E  0E00               	movlw	0
  9373   003230  6E15               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
  9374   003232  C01D  F016         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
  9375   003236  C01E  F017         	movff	ds1307_read_values@return_data_array+1,MSSP_I2C_Master_read_data_in_register@ret_
      +                          data+1
  9376   00323A  C01F  F018         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  9377   00323E  EC4D  F023         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  9378   003242  4A1D               	infsnz	ds1307_read_values@return_data_array^0,f,c
  9379   003244  2A1E               	incf	(ds1307_read_values@return_data_array+1)^0,f,c
  9380   003246                     
  9381                           ;ECU_layer/DS1307/hal_ds1307.c: 15:         MSSP_I2C_Master_Send_Stop(i2c_obj);
  9382   003246  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  9383   00324A  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  9384   00324E  EC4E  F029         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  9385   003252                     
  9386                           ;ECU_layer/DS1307/hal_ds1307.c: 16:         MSSP_I2C_Master_Send_Start(i2c_obj);
  9387   003252  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  9388   003256  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  9389   00325A  EC6A  F029         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  9390   00325E                     
  9391                           ;ECU_layer/DS1307/hal_ds1307.c: 17:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x01,return_data_array++,_ack);
  9392   00325E  C01A  F012         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  9393   003262  C01B  F013         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  9394   003266  C01C  F014         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  9395   00326A  0E01               	movlw	1
  9396   00326C  6E15               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
  9397   00326E  C01D  F016         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
  9398   003272  C01E  F017         	movff	ds1307_read_values@return_data_array+1,MSSP_I2C_Master_read_data_in_register@ret_
      +                          data+1
  9399   003276  C01F  F018         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  9400   00327A  EC4D  F023         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  9401   00327E  4A1D               	infsnz	ds1307_read_values@return_data_array^0,f,c
  9402   003280  2A1E               	incf	(ds1307_read_values@return_data_array+1)^0,f,c
  9403                           
  9404                           ;ECU_layer/DS1307/hal_ds1307.c: 18:         MSSP_I2C_Master_Send_Stop(i2c_obj);
  9405   003282  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  9406   003286  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  9407   00328A  EC4E  F029         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  9408                           
  9409                           ;ECU_layer/DS1307/hal_ds1307.c: 19:         MSSP_I2C_Master_Send_Start(i2c_obj);
  9410   00328E  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  9411   003292  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  9412   003296  EC6A  F029         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  9413   00329A                     
  9414                           ;ECU_layer/DS1307/hal_ds1307.c: 20:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x02,return_data_array++,_ack);
  9415   00329A  C01A  F012         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  9416   00329E  C01B  F013         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  9417   0032A2  C01C  F014         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  9418   0032A6  0E02               	movlw	2
  9419   0032A8  6E15               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
  9420   0032AA  C01D  F016         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
  9421   0032AE  C01E  F017         	movff	ds1307_read_values@return_data_array+1,MSSP_I2C_Master_read_data_in_register@ret_
      +                          data+1
  9422   0032B2  C01F  F018         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  9423   0032B6  EC4D  F023         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  9424   0032BA  4A1D               	infsnz	ds1307_read_values@return_data_array^0,f,c
  9425   0032BC  2A1E               	incf	(ds1307_read_values@return_data_array+1)^0,f,c
  9426   0032BE                     
  9427                           ;ECU_layer/DS1307/hal_ds1307.c: 21:         MSSP_I2C_Master_Send_Stop(i2c_obj);
  9428   0032BE  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  9429   0032C2  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  9430   0032C6  EC4E  F029         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  9431   0032CA                     
  9432                           ;ECU_layer/DS1307/hal_ds1307.c: 22:         MSSP_I2C_Master_Send_Start(i2c_obj);
  9433   0032CA  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  9434   0032CE  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  9435   0032D2  EC6A  F029         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  9436   0032D6                     
  9437                           ;ECU_layer/DS1307/hal_ds1307.c: 23:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x04,return_data_array++,_ack);
  9438   0032D6  C01A  F012         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  9439   0032DA  C01B  F013         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  9440   0032DE  C01C  F014         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  9441   0032E2  0E04               	movlw	4
  9442   0032E4  6E15               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
  9443   0032E6  C01D  F016         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
  9444   0032EA  C01E  F017         	movff	ds1307_read_values@return_data_array+1,MSSP_I2C_Master_read_data_in_register@ret_
      +                          data+1
  9445   0032EE  C01F  F018         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  9446   0032F2  EC4D  F023         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  9447   0032F6  4A1D               	infsnz	ds1307_read_values@return_data_array^0,f,c
  9448   0032F8  2A1E               	incf	(ds1307_read_values@return_data_array+1)^0,f,c
  9449                           
  9450                           ;ECU_layer/DS1307/hal_ds1307.c: 24:         MSSP_I2C_Master_Send_Stop(i2c_obj);
  9451   0032FA  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  9452   0032FE  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  9453   003302  EC4E  F029         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  9454                           
  9455                           ;ECU_layer/DS1307/hal_ds1307.c: 25:         MSSP_I2C_Master_Send_Start(i2c_obj);
  9456   003306  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  9457   00330A  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  9458   00330E  EC6A  F029         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  9459   003312                     
  9460                           ;ECU_layer/DS1307/hal_ds1307.c: 26:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x05,return_data_array++,_ack);
  9461   003312  C01A  F012         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  9462   003316  C01B  F013         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  9463   00331A  C01C  F014         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  9464   00331E  0E05               	movlw	5
  9465   003320  6E15               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
  9466   003322  C01D  F016         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
  9467   003326  C01E  F017         	movff	ds1307_read_values@return_data_array+1,MSSP_I2C_Master_read_data_in_register@ret_
      +                          data+1
  9468   00332A  C01F  F018         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  9469   00332E  EC4D  F023         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  9470   003332  4A1D               	infsnz	ds1307_read_values@return_data_array^0,f,c
  9471   003334  2A1E               	incf	(ds1307_read_values@return_data_array+1)^0,f,c
  9472   003336                     
  9473                           ;ECU_layer/DS1307/hal_ds1307.c: 27:         MSSP_I2C_Master_Send_Stop(i2c_obj);
  9474   003336  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  9475   00333A  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  9476   00333E  EC4E  F029         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  9477   003342                     
  9478                           ;ECU_layer/DS1307/hal_ds1307.c: 28:         MSSP_I2C_Master_Send_Start(i2c_obj);
  9479   003342  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Start@i2c_obj
  9480   003346  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Start@i2c_obj+1
  9481   00334A  EC6A  F029         	call	_MSSP_I2C_Master_Send_Start	;wreg free
  9482   00334E                     
  9483                           ;ECU_layer/DS1307/hal_ds1307.c: 29:         MSSP_I2C_Master_read_data_in_register(i2c_ob
      +                          j,address_1,0x06,return_data_array,_ack);
  9484   00334E  C01A  F012         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_read_data_in_register@i2c_obj
  9485   003352  C01B  F013         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_read_data_in_register@i2c_obj+1
  9486   003356  C01C  F014         	movff	ds1307_read_values@address_1,MSSP_I2C_Master_read_data_in_register@i2c_data_1
  9487   00335A  0E06               	movlw	6
  9488   00335C  6E15               	movwf	MSSP_I2C_Master_read_data_in_register@i2c_data_2^0,c
  9489   00335E  C01D  F016         	movff	ds1307_read_values@return_data_array,MSSP_I2C_Master_read_data_in_register@ret_da
      +                          ta
  9490   003362  C01E  F017         	movff	ds1307_read_values@return_data_array+1,MSSP_I2C_Master_read_data_in_register@ret_
      +                          data+1
  9491   003366  C01F  F018         	movff	ds1307_read_values@_ack,MSSP_I2C_Master_read_data_in_register@_ack
  9492   00336A  EC4D  F023         	call	_MSSP_I2C_Master_read_data_in_register	;wreg free
  9493   00336E                     
  9494                           ;ECU_layer/DS1307/hal_ds1307.c: 30:         MSSP_I2C_Master_Send_Stop(i2c_obj);
  9495   00336E  C01A  F00D         	movff	ds1307_read_values@i2c_obj,MSSP_I2C_Master_Send_Stop@i2c_obj
  9496   003372  C01B  F00E         	movff	ds1307_read_values@i2c_obj+1,MSSP_I2C_Master_Send_Stop@i2c_obj+1
  9497   003376  EC4E  F029         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
  9498   00337A  0012               	return		;funcret
  9499   00337C                     __end_of_ds1307_read_values:
  9500                           	callstack 0
  9501                           
  9502 ;; *************** function _MSSP_I2C_Master_read_data_in_register *****************
  9503 ;; Defined at:
  9504 ;;		line 242 in file "MKAL_layer/I2C/hal_i2c.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  i2c_obj         2   17[COMRAM] PTR const struct .
  9507 ;;		 -> mssp_i2c(15), 
  9508 ;;  i2c_data_1      1   19[COMRAM] unsigned char 
  9509 ;;  i2c_data_2      1   20[COMRAM] unsigned char 
  9510 ;;  ret_data        2   21[COMRAM] PTR unsigned char 
  9511 ;;		 -> ds13_data(6), tc74(1), 
  9512 ;;  _ack            1   23[COMRAM] PTR unsigned char 
  9513 ;;		 -> i2c_ack(1), 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  ret             1    0        unsigned char 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  1    wreg      void 
  9518 ;; Registers used:
  9519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9525 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;Total ram usage:        8 bytes
  9530 ;; Hardware stack levels used: 1
  9531 ;; Hardware stack levels required when called: 5
  9532 ;; This function calls:
  9533 ;;		_MSSP_I2C_Master_Read_Blocking
  9534 ;;		_MSSP_I2C_Master_Send_Repeated_Start
  9535 ;;		_MSSP_I2C_Master_Write_Blocking
  9536 ;; This function is called by:
  9537 ;;		_ds1307_read_values
  9538 ;;		_tc74_read_value
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text55
  9543   00469A                     __ptext55:
  9544                           	callstack 0
  9545   00469A                     _MSSP_I2C_Master_read_data_in_register:
  9546                           	callstack 24
  9547   00469A                     
  9548                           ;MKAL_layer/I2C/hal_i2c.c: 246:     if((((void*)0) == i2c_obj) || (((void*)0) == _ack)){
  9549   00469A  5012               	movf	MSSP_I2C_Master_read_data_in_register@i2c_obj^0,w,c
  9550   00469C  1013               	iorwf	(MSSP_I2C_Master_read_data_in_register@i2c_obj+1)^0,w,c
  9551   00469E  B4D8               	btfsc	status,2,c
  9552   0046A0  EF54  F023         	goto	u11201
  9553   0046A4  EF56  F023         	goto	u11200
  9554   0046A8                     u11201:
  9555   0046A8  EF5E  F023         	goto	l11118
  9556   0046AC                     u11200:
  9557   0046AC  5018               	movf	MSSP_I2C_Master_read_data_in_register@_ack^0,w,c
  9558   0046AE  A4D8               	btfss	status,2,c
  9559   0046B0  EF5C  F023         	goto	u11211
  9560   0046B4  EF5E  F023         	goto	u11210
  9561   0046B8                     u11211:
  9562   0046B8  EF60  F023         	goto	l11120
  9563   0046BC                     u11210:
  9564   0046BC                     l11118:
  9565                           
  9566                           ;MKAL_layer/I2C/hal_i2c.c: 248:     }
  9567   0046BC  EF98  F023         	goto	l1045
  9568   0046C0                     l11120:
  9569                           
  9570                           ;MKAL_layer/I2C/hal_i2c.c: 250:          MSSP_I2C_Master_Write_Blocking(i2c_obj,i2c_data
      +                          _1,_ack);
  9571   0046C0  C012  F00D         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_
      +                          obj
  9572   0046C4  C013  F00E         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2
      +                          c_obj+1
  9573   0046C8  C014  F00F         	movff	MSSP_I2C_Master_read_data_in_register@i2c_data_1,MSSP_I2C_Master_Write_Blocking@i
      +                          2c_data
  9574   0046CC  C018  F010         	movff	MSSP_I2C_Master_read_data_in_register@_ack,MSSP_I2C_Master_Write_Blocking@_ack
  9575   0046D0  ECC6  F026         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  9576                           
  9577                           ;MKAL_layer/I2C/hal_i2c.c: 251:          MSSP_I2C_Master_Write_Blocking(i2c_obj,i2c_data
      +                          _2,_ack);
  9578   0046D4  C012  F00D         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_
      +                          obj
  9579   0046D8  C013  F00E         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2
      +                          c_obj+1
  9580   0046DC  C015  F00F         	movff	MSSP_I2C_Master_read_data_in_register@i2c_data_2,MSSP_I2C_Master_Write_Blocking@i
      +                          2c_data
  9581   0046E0  C018  F010         	movff	MSSP_I2C_Master_read_data_in_register@_ack,MSSP_I2C_Master_Write_Blocking@_ack
  9582   0046E4  ECC6  F026         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  9583   0046E8                     
  9584                           ;MKAL_layer/I2C/hal_i2c.c: 252:          MSSP_I2C_Master_Send_Repeated_Start(i2c_obj);
  9585   0046E8  C012  F00D         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Send_Repeated_Start
      +                          @i2c_obj
  9586   0046EC  C013  F00E         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Send_Repeated_Sta
      +                          rt@i2c_obj+1
  9587   0046F0  EC64  F02A         	call	_MSSP_I2C_Master_Send_Repeated_Start	;wreg free
  9588   0046F4                     
  9589                           ;MKAL_layer/I2C/hal_i2c.c: 253:          MSSP_I2C_Master_Write_Blocking(i2c_obj,(i2c_dat
      +                          a_1 + 0x01),_ack);
  9590   0046F4  C012  F00D         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Write_Blocking@i2c_
      +                          obj
  9591   0046F8  C013  F00E         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Write_Blocking@i2
      +                          c_obj+1
  9592   0046FC  2814               	incf	MSSP_I2C_Master_read_data_in_register@i2c_data_1^0,w,c
  9593   0046FE  6E0F               	movwf	MSSP_I2C_Master_Write_Blocking@i2c_data^0,c
  9594   004700  C018  F010         	movff	MSSP_I2C_Master_read_data_in_register@_ack,MSSP_I2C_Master_Write_Blocking@_ack
  9595   004704  ECC6  F026         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
  9596   004708                     
  9597                           ;MKAL_layer/I2C/hal_i2c.c: 254:          MSSP_I2C_Master_Read_Blocking(i2c_obj,1,ret_dat
      +                          a);
  9598   004708  C012  F00D         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj,MSSP_I2C_Master_Read_Blocking@i2c_o
      +                          bj
  9599   00470C  C013  F00E         	movff	MSSP_I2C_Master_read_data_in_register@i2c_obj+1,MSSP_I2C_Master_Read_Blocking@i2c
      +                          _obj+1
  9600   004710  0E01               	movlw	1
  9601   004712  6E0F               	movwf	MSSP_I2C_Master_Read_Blocking@ack^0,c
  9602   004714  C016  F010         	movff	MSSP_I2C_Master_read_data_in_register@ret_data,MSSP_I2C_Master_Read_Blocking@i2c_
      +                          data
  9603   004718  C017  F011         	movff	MSSP_I2C_Master_read_data_in_register@ret_data+1,MSSP_I2C_Master_Read_Blocking@i2
      +                          c_data+1
  9604   00471C  EC2B  F024         	call	_MSSP_I2C_Master_Read_Blocking	;wreg free
  9605   004720                     
  9606                           ;MKAL_layer/I2C/hal_i2c.c: 255:          _delay((unsigned long)((10)*(8000000UL/4000.0))
      +                          );
  9607   004720  0E1A               	movlw	26
  9608   004722  6E19               	movwf	??_MSSP_I2C_Master_read_data_in_register^0,c
  9609   004724  0EF8               	movlw	248
  9610   004726                     u12467:
  9611   004726  2EE8               	decfsz	wreg,f,c
  9612   004728  D7FE               	bra	u12467
  9613   00472A  2E19               	decfsz	??_MSSP_I2C_Master_read_data_in_register^0,f,c
  9614   00472C  D7FC               	bra	u12467
  9615   00472E  D000               	nop2	
  9616   004730                     l1045:
  9617   004730  0012               	return		;funcret
  9618   004732                     __end_of_MSSP_I2C_Master_read_data_in_register:
  9619                           	callstack 0
  9620                           
  9621 ;; *************** function _MSSP_I2C_Master_Write_Blocking *****************
  9622 ;; Defined at:
  9623 ;;		line 164 in file "MKAL_layer/I2C/hal_i2c.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;  i2c_obj         2   12[COMRAM] PTR const struct .
  9626 ;;		 -> read_byte_24c02c@mssp_i2c(2), write_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
  9627 ;;  i2c_data        1   14[COMRAM] unsigned char 
  9628 ;;  _ack            1   15[COMRAM] PTR unsigned char 
  9629 ;;		 -> i2c_ack(1), 
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;  ret             1    0        unsigned char 
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  1    wreg      unsigned char 
  9634 ;; Registers used:
  9635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;Total ram usage:        4 bytes
  9646 ;; Hardware stack levels used: 1
  9647 ;; Hardware stack levels required when called: 4
  9648 ;; This function calls:
  9649 ;;		Nothing
  9650 ;; This function is called by:
  9651 ;;		_MSSP_I2C_Master_read_data_in_register
  9652 ;;		_write_byte_24c02c
  9653 ;;		_read_byte_24c02c
  9654 ;;		_MSSP_I2C_Master_call_slave
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text56
  9659   004D8C                     __ptext56:
  9660                           	callstack 0
  9661   004D8C                     _MSSP_I2C_Master_Write_Blocking:
  9662                           	callstack 24
  9663   004D8C                     
  9664                           ;MKAL_layer/I2C/hal_i2c.c: 166:     if((((void*)0) == i2c_obj) || (((void*)0) == _ack)){
  9665   004D8C  500D               	movf	MSSP_I2C_Master_Write_Blocking@i2c_obj^0,w,c
  9666   004D8E  100E               	iorwf	(MSSP_I2C_Master_Write_Blocking@i2c_obj+1)^0,w,c
  9667   004D90  B4D8               	btfsc	status,2,c
  9668   004D92  EFCD  F026         	goto	u10281
  9669   004D96  EFCF  F026         	goto	u10280
  9670   004D9A                     u10281:
  9671   004D9A  EFD7  F026         	goto	l10286
  9672   004D9E                     u10280:
  9673   004D9E  5010               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
  9674   004DA0  A4D8               	btfss	status,2,c
  9675   004DA2  EFD5  F026         	goto	u10291
  9676   004DA6  EFD7  F026         	goto	u10290
  9677   004DAA                     u10291:
  9678   004DAA  EFD9  F026         	goto	l995
  9679   004DAE                     u10290:
  9680   004DAE                     l10286:
  9681                           
  9682                           ;MKAL_layer/I2C/hal_i2c.c: 168:     }
  9683   004DAE  EFF5  F026         	goto	l1004
  9684   004DB2                     l995:
  9685                           
  9686                           ;MKAL_layer/I2C/hal_i2c.c: 171:         SSPBUF = i2c_data;
  9687   004DB2  C00F  FFC9         	movff	MSSP_I2C_Master_Write_Blocking@i2c_data,4041	;volatile
  9688   004DB6                     l999:
  9689   004DB6  B0C7               	btfsc	199,0,c	;volatile
  9690   004DB8  EFE0  F026         	goto	u10301
  9691   004DBC  EFE2  F026         	goto	u10300
  9692   004DC0                     u10301:
  9693   004DC0  EFDB  F026         	goto	l999
  9694   004DC4                     u10300:
  9695   004DC4                     
  9696                           ;MKAL_layer/I2C/hal_i2c.c: 175:         PIR1bits.SSPIF = 0;
  9697   004DC4  969E               	bcf	158,3,c	;volatile
  9698                           
  9699                           ;MKAL_layer/I2C/hal_i2c.c: 177:         if(0 == SSPCON2bits.ACKSTAT){
  9700   004DC6  BCC5               	btfsc	197,6,c	;volatile
  9701   004DC8  EFE8  F026         	goto	u10311
  9702   004DCC  EFEA  F026         	goto	u10310
  9703   004DD0                     u10311:
  9704   004DD0  EFF0  F026         	goto	l10290
  9705   004DD4                     u10310:
  9706   004DD4                     
  9707                           ;MKAL_layer/I2C/hal_i2c.c: 178:             *_ack = 0;
  9708   004DD4  5010               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
  9709   004DD6  6ED9               	movwf	fsr2l,c
  9710   004DD8  6ADA               	clrf	fsr2h,c
  9711   004DDA  6ADF               	clrf	indf2,c
  9712                           
  9713                           ;MKAL_layer/I2C/hal_i2c.c: 179:         }
  9714   004DDC  EFF5  F026         	goto	l10292
  9715   004DE0                     l10290:
  9716                           
  9717                           ;MKAL_layer/I2C/hal_i2c.c: 181:             *_ack = 1;
  9718   004DE0  5010               	movf	MSSP_I2C_Master_Write_Blocking@_ack^0,w,c
  9719   004DE2  6ED9               	movwf	fsr2l,c
  9720   004DE4  6ADA               	clrf	fsr2h,c
  9721   004DE6  0E01               	movlw	1
  9722   004DE8  6EDF               	movwf	indf2,c
  9723   004DEA                     l10292:
  9724   004DEA                     l1004:
  9725   004DEA  0012               	return		;funcret
  9726   004DEC                     __end_of_MSSP_I2C_Master_Write_Blocking:
  9727                           	callstack 0
  9728                           
  9729 ;; *************** function _MSSP_I2C_Master_Send_Repeated_Start *****************
  9730 ;; Defined at:
  9731 ;;		line 124 in file "MKAL_layer/I2C/hal_i2c.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  i2c_obj         2   12[COMRAM] PTR const struct .
  9734 ;;		 -> mssp_i2c(15), 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;  ret             1    0        unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      unsigned char 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9750 ;;Total ram usage:        2 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; Hardware stack levels required when called: 4
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		_MSSP_I2C_Master_read_data_in_register
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           	psect	text57
  9761   0054C8                     __ptext57:
  9762                           	callstack 0
  9763   0054C8                     _MSSP_I2C_Master_Send_Repeated_Start:
  9764                           	callstack 24
  9765   0054C8                     
  9766                           ;MKAL_layer/I2C/hal_i2c.c: 126:     if(((void*)0) == i2c_obj){
  9767   0054C8  500D               	movf	MSSP_I2C_Master_Send_Repeated_Start@i2c_obj^0,w,c
  9768   0054CA  100E               	iorwf	(MSSP_I2C_Master_Send_Repeated_Start@i2c_obj+1)^0,w,c
  9769   0054CC  A4D8               	btfss	status,2,c
  9770   0054CE  EF6B  F02A         	goto	u10431
  9771   0054D2  EF6D  F02A         	goto	u10430
  9772   0054D6                     u10431:
  9773   0054D6  EF6F  F02A         	goto	l977
  9774   0054DA                     u10430:
  9775   0054DA                     
  9776                           ;MKAL_layer/I2C/hal_i2c.c: 128:     }
  9777   0054DA  EF78  F02A         	goto	l982
  9778   0054DE                     l977:
  9779                           
  9780                           ;MKAL_layer/I2C/hal_i2c.c: 131:         SSPCON2bits.RSEN = 1;
  9781   0054DE  82C5               	bsf	197,1,c	;volatile
  9782   0054E0                     l979:
  9783   0054E0  B2C5               	btfsc	197,1,c	;volatile
  9784   0054E2  EF75  F02A         	goto	u10441
  9785   0054E6  EF77  F02A         	goto	u10440
  9786   0054EA                     u10441:
  9787   0054EA  EF70  F02A         	goto	l979
  9788   0054EE                     u10440:
  9789   0054EE                     
  9790                           ;MKAL_layer/I2C/hal_i2c.c: 135:         PIR1bits.SSPIF = 0;
  9791   0054EE  969E               	bcf	158,3,c	;volatile
  9792   0054F0                     l982:
  9793   0054F0  0012               	return		;funcret
  9794   0054F2                     __end_of_MSSP_I2C_Master_Send_Repeated_Start:
  9795                           	callstack 0
  9796                           
  9797 ;; *************** function _MSSP_I2C_Master_Read_Blocking *****************
  9798 ;; Defined at:
  9799 ;;		line 199 in file "MKAL_layer/I2C/hal_i2c.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  i2c_obj         2   12[COMRAM] PTR const struct .
  9802 ;;		 -> read_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
  9803 ;;  ack             1   14[COMRAM] unsigned char 
  9804 ;;  i2c_data        2   15[COMRAM] PTR unsigned char 
  9805 ;;		 -> ds13_data(6), tc74(1), 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  ret             1    0        unsigned char 
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      unsigned char 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9817 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;Total ram usage:        5 bytes
  9822 ;; Hardware stack levels used: 1
  9823 ;; Hardware stack levels required when called: 4
  9824 ;; This function calls:
  9825 ;;		Nothing
  9826 ;; This function is called by:
  9827 ;;		_MSSP_I2C_Master_read_data_in_register
  9828 ;;		_read_byte_24c02c
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text58
  9833   004856                     __ptext58:
  9834                           	callstack 0
  9835   004856                     _MSSP_I2C_Master_Read_Blocking:
  9836                           	callstack 24
  9837   004856                     
  9838                           ;MKAL_layer/I2C/hal_i2c.c: 201:     if((((void*)0) == i2c_obj) || (((void*)0) == i2c_dat
      +                          a)){
  9839   004856  500D               	movf	MSSP_I2C_Master_Read_Blocking@i2c_obj^0,w,c
  9840   004858  100E               	iorwf	(MSSP_I2C_Master_Read_Blocking@i2c_obj+1)^0,w,c
  9841   00485A  B4D8               	btfsc	status,2,c
  9842   00485C  EF32  F024         	goto	u10321
  9843   004860  EF34  F024         	goto	u10320
  9844   004864                     u10321:
  9845   004864  EF3D  F024         	goto	l10302
  9846   004868                     u10320:
  9847   004868  5010               	movf	MSSP_I2C_Master_Read_Blocking@i2c_data^0,w,c
  9848   00486A  1011               	iorwf	(MSSP_I2C_Master_Read_Blocking@i2c_data+1)^0,w,c
  9849   00486C  A4D8               	btfss	status,2,c
  9850   00486E  EF3B  F024         	goto	u10331
  9851   004872  EF3D  F024         	goto	u10330
  9852   004876                     u10331:
  9853   004876  EF3F  F024         	goto	l1014
  9854   00487A                     u10330:
  9855   00487A                     l10302:
  9856                           
  9857                           ;MKAL_layer/I2C/hal_i2c.c: 203:     }
  9858   00487A  EF71  F024         	goto	l1031
  9859   00487E                     l1014:
  9860                           
  9861                           ;MKAL_layer/I2C/hal_i2c.c: 206:         (SSPCON2bits.RCEN = 1);
  9862   00487E  86C5               	bsf	197,3,c	;volatile
  9863   004880                     l1018:
  9864   004880  A0C7               	btfss	199,0,c	;volatile
  9865   004882  EF45  F024         	goto	u10341
  9866   004886  EF47  F024         	goto	u10340
  9867   00488A                     u10341:
  9868   00488A  EF40  F024         	goto	l1018
  9869   00488E                     u10340:
  9870   00488E                     
  9871                           ;MKAL_layer/I2C/hal_i2c.c: 210:         *i2c_data = SSPBUF;
  9872   00488E  C010  FFD9         	movff	MSSP_I2C_Master_Read_Blocking@i2c_data,fsr2l
  9873   004892  C011  FFDA         	movff	MSSP_I2C_Master_Read_Blocking@i2c_data+1,fsr2h
  9874   004896  CFC9 FFDF          	movff	4041,indf2	;volatile
  9875   00489A                     
  9876                           ;MKAL_layer/I2C/hal_i2c.c: 212:         if(0 == ack){
  9877   00489A  500F               	movf	MSSP_I2C_Master_Read_Blocking@ack^0,w,c
  9878   00489C  A4D8               	btfss	status,2,c
  9879   00489E  EF53  F024         	goto	u10351
  9880   0048A2  EF55  F024         	goto	u10350
  9881   0048A6                     u10351:
  9882   0048A6  EF60  F024         	goto	l10310
  9883   0048AA                     u10350:
  9884   0048AA                     
  9885                           ;MKAL_layer/I2C/hal_i2c.c: 213:             SSPCON2bits.ACKDT = 0;
  9886   0048AA  9AC5               	bcf	197,5,c	;volatile
  9887                           
  9888                           ;MKAL_layer/I2C/hal_i2c.c: 215:             SSPCON2bits.ACKEN = 1;
  9889   0048AC  88C5               	bsf	197,4,c	;volatile
  9890   0048AE                     l1022:
  9891   0048AE  B8C5               	btfsc	197,4,c	;volatile
  9892   0048B0  EF5C  F024         	goto	u10361
  9893   0048B4  EF5E  F024         	goto	u10360
  9894   0048B8                     u10361:
  9895   0048B8  EF57  F024         	goto	l1022
  9896   0048BC                     u10360:
  9897   0048BC  EF71  F024         	goto	l10314
  9898   0048C0                     l10310:
  9899   0048C0  040F               	decf	MSSP_I2C_Master_Read_Blocking@ack^0,w,c
  9900   0048C2  A4D8               	btfss	status,2,c
  9901   0048C4  EF66  F024         	goto	u10371
  9902   0048C8  EF68  F024         	goto	u10370
  9903   0048CC                     u10371:
  9904   0048CC  EF71  F024         	goto	l10314
  9905   0048D0                     u10370:
  9906   0048D0                     
  9907                           ;MKAL_layer/I2C/hal_i2c.c: 219:             SSPCON2bits.ACKDT = 1;
  9908   0048D0  8AC5               	bsf	197,5,c	;volatile
  9909                           
  9910                           ;MKAL_layer/I2C/hal_i2c.c: 221:             SSPCON2bits.ACKEN = 1;
  9911   0048D2  88C5               	bsf	197,4,c	;volatile
  9912   0048D4                     l1027:
  9913   0048D4  B8C5               	btfsc	197,4,c	;volatile
  9914   0048D6  EF6F  F024         	goto	u10381
  9915   0048DA  EF71  F024         	goto	u10380
  9916   0048DE                     u10381:
  9917   0048DE  EF6A  F024         	goto	l1027
  9918   0048E2                     u10380:
  9919   0048E2                     l10314:
  9920   0048E2                     l1031:
  9921   0048E2  0012               	return		;funcret
  9922   0048E4                     __end_of_MSSP_I2C_Master_Read_Blocking:
  9923                           	callstack 0
  9924                           
  9925 ;; *************** function _MSSP_I2C_Master_Send_Stop *****************
  9926 ;; Defined at:
  9927 ;;		line 141 in file "MKAL_layer/I2C/hal_i2c.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  i2c_obj         2   12[COMRAM] PTR const struct .
  9930 ;;		 -> read_byte_24c02c@mssp_i2c(2), write_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  ret             1    0        unsigned char 
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  1    wreg      unsigned char 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9946 ;;Total ram usage:        2 bytes
  9947 ;; Hardware stack levels used: 1
  9948 ;; Hardware stack levels required when called: 4
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_ds1307_read_values
  9953 ;;		_tc74_read_value
  9954 ;;		_write_byte_24c02c
  9955 ;;		_read_byte_24c02c
  9956 ;;		_MSSP_I2C_Master_call_slave
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           	psect	text59
  9961   00529C                     __ptext59:
  9962                           	callstack 0
  9963   00529C                     _MSSP_I2C_Master_Send_Stop:
  9964                           	callstack 25
  9965   00529C                     
  9966                           ;MKAL_layer/I2C/hal_i2c.c: 143:     if(((void*)0) == i2c_obj){
  9967   00529C  500D               	movf	MSSP_I2C_Master_Send_Stop@i2c_obj^0,w,c
  9968   00529E  100E               	iorwf	(MSSP_I2C_Master_Send_Stop@i2c_obj+1)^0,w,c
  9969   0052A0  A4D8               	btfss	status,2,c
  9970   0052A2  EF55  F029         	goto	u11131
  9971   0052A6  EF57  F029         	goto	u11130
  9972   0052AA                     u11131:
  9973   0052AA  EF59  F029         	goto	l985
  9974   0052AE                     u11130:
  9975   0052AE                     l11034:
  9976                           
  9977                           ;MKAL_layer/I2C/hal_i2c.c: 145:     }
  9978   0052AE  EF69  F029         	goto	l992
  9979   0052B2                     l985:
  9980                           
  9981                           ;MKAL_layer/I2C/hal_i2c.c: 148:         SSPCON2bits.PEN = 1;
  9982   0052B2  84C5               	bsf	197,2,c	;volatile
  9983   0052B4                     l987:
  9984   0052B4  B4C5               	btfsc	197,2,c	;volatile
  9985   0052B6  EF5F  F029         	goto	u11141
  9986   0052BA  EF61  F029         	goto	u11140
  9987   0052BE                     u11141:
  9988   0052BE  EF5A  F029         	goto	l987
  9989   0052C2                     u11140:
  9990   0052C2                     
  9991                           ;MKAL_layer/I2C/hal_i2c.c: 152:         PIR1bits.SSPIF = 0;
  9992   0052C2  969E               	bcf	158,3,c	;volatile
  9993                           
  9994                           ;MKAL_layer/I2C/hal_i2c.c: 154:         if(1 == SSPSTATbits.P){
  9995   0052C4  A8C7               	btfss	199,4,c	;volatile
  9996   0052C6  EF67  F029         	goto	u11151
  9997   0052CA  EF69  F029         	goto	u11150
  9998   0052CE                     u11151:
  9999   0052CE  EF57  F029         	goto	l11034
 10000   0052D2                     u11150:
 10001   0052D2                     l992:
 10002   0052D2  0012               	return		;funcret
 10003   0052D4                     __end_of_MSSP_I2C_Master_Send_Stop:
 10004                           	callstack 0
 10005                           
 10006 ;; *************** function _MSSP_I2C_Master_Send_Start *****************
 10007 ;; Defined at:
 10008 ;;		line 101 in file "MKAL_layer/I2C/hal_i2c.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;  i2c_obj         2   12[COMRAM] PTR const struct .
 10011 ;;		 -> read_byte_24c02c@mssp_i2c(2), write_byte_24c02c@mssp_i2c(2), mssp_i2c(15), 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;  ret             1    0        unsigned char 
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      unsigned char 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2, status,0
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10027 ;;Total ram usage:        2 bytes
 10028 ;; Hardware stack levels used: 1
 10029 ;; Hardware stack levels required when called: 4
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		_ds1307_read_values
 10034 ;;		_tc74_read_value
 10035 ;;		_write_byte_24c02c
 10036 ;;		_read_byte_24c02c
 10037 ;;		_MSSP_I2C_Master_call_slave
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           	psect	text60
 10042   0052D4                     __ptext60:
 10043                           	callstack 0
 10044   0052D4                     _MSSP_I2C_Master_Send_Start:
 10045                           	callstack 25
 10046   0052D4                     
 10047                           ;MKAL_layer/I2C/hal_i2c.c: 103:     if(((void*)0) == i2c_obj){
 10048   0052D4  500D               	movf	MSSP_I2C_Master_Send_Start@i2c_obj^0,w,c
 10049   0052D6  100E               	iorwf	(MSSP_I2C_Master_Send_Start@i2c_obj+1)^0,w,c
 10050   0052D8  A4D8               	btfss	status,2,c
 10051   0052DA  EF71  F029         	goto	u11101
 10052   0052DE  EF73  F029         	goto	u11100
 10053   0052E2                     u11101:
 10054   0052E2  EF75  F029         	goto	l967
 10055   0052E6                     u11100:
 10056   0052E6                     l11022:
 10057                           
 10058                           ;MKAL_layer/I2C/hal_i2c.c: 105:     }
 10059   0052E6  EF85  F029         	goto	l974
 10060   0052EA                     l967:
 10061                           
 10062                           ;MKAL_layer/I2C/hal_i2c.c: 108:         SSPCON2bits.SEN = 1;
 10063   0052EA  80C5               	bsf	197,0,c	;volatile
 10064   0052EC                     l969:
 10065   0052EC  B0C5               	btfsc	197,0,c	;volatile
 10066   0052EE  EF7B  F029         	goto	u11111
 10067   0052F2  EF7D  F029         	goto	u11110
 10068   0052F6                     u11111:
 10069   0052F6  EF76  F029         	goto	l969
 10070   0052FA                     u11110:
 10071   0052FA                     
 10072                           ;MKAL_layer/I2C/hal_i2c.c: 112:         PIR1bits.SSPIF = 0;
 10073   0052FA  969E               	bcf	158,3,c	;volatile
 10074                           
 10075                           ;MKAL_layer/I2C/hal_i2c.c: 114:         if(1 == SSPSTATbits.S){
 10076   0052FC  A6C7               	btfss	199,3,c	;volatile
 10077   0052FE  EF83  F029         	goto	u11121
 10078   005302  EF85  F029         	goto	u11120
 10079   005306                     u11121:
 10080   005306  EF73  F029         	goto	l11022
 10081   00530A                     u11120:
 10082   00530A                     l974:
 10083   00530A  0012               	return		;funcret
 10084   00530C                     __end_of_MSSP_I2C_Master_Send_Start:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function _convert_hex_to_dec *****************
 10088 ;; Defined at:
 10089 ;;		line 217 in file "main.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  num             1    wreg     unsigned char 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;  num             1   13[COMRAM] unsigned char 
 10094 ;;  l_num           1   12[COMRAM] unsigned char 
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1    wreg      unsigned char 
 10097 ;; Registers used:
 10098 ;;		wreg, status,2, status,0, prodl, prodh
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;Total ram usage:        2 bytes
 10109 ;; Hardware stack levels used: 1
 10110 ;; Hardware stack levels required when called: 4
 10111 ;; This function calls:
 10112 ;;		Nothing
 10113 ;; This function is called by:
 10114 ;;		_main
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text61
 10119   00565A                     __ptext61:
 10120                           	callstack 0
 10121   00565A                     _convert_hex_to_dec:
 10122                           	callstack 26
 10123                           
 10124                           ;incstack = 0
 10125                           ;convert_hex_to_dec@num stored from wreg
 10126   00565A  6E0E               	movwf	convert_hex_to_dec@num^0,c
 10127   00565C                     
 10128                           ;main.c: 218:     uint8 l_num = num >> 4;
 10129   00565C  380E               	swapf	convert_hex_to_dec@num^0,w,c
 10130   00565E  0B0F               	andlw	15
 10131   005660  6E0D               	movwf	convert_hex_to_dec@l_num^0,c
 10132   005662                     
 10133                           ;main.c: 219:     return (num - (l_num*6));
 10134   005662  500D               	movf	convert_hex_to_dec@l_num^0,w,c
 10135   005664  0DFA               	mullw	250
 10136   005666  50F3               	movf	243,w,c
 10137   005668  240E               	addwf	convert_hex_to_dec@num^0,w,c
 10138   00566A  0012               	return		;funcret
 10139   00566C                     __end_of_convert_hex_to_dec:
 10140                           	callstack 0
 10141                           
 10142 ;; *************** function _ccp2_pwm_set_duty *****************
 10143 ;; Defined at:
 10144 ;;		line 118 in file "MKAL_layer/CCP2/hal_ccp2.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  duty            1    wreg     const unsigned char 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  duty            1    4[BANK1 ] const unsigned char 
 10149 ;;  l_duty_temp     2    6[BANK1 ] unsigned short 
 10150 ;;  duty_           1    5[BANK1 ] unsigned char 
 10151 ;;  ret             1    0        unsigned char 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      unsigned char 
 10154 ;; Registers used:
 10155 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;Total ram usage:       10 bytes
 10166 ;; Hardware stack levels used: 1
 10167 ;; Hardware stack levels required when called: 5
 10168 ;; This function calls:
 10169 ;;		___fladd
 10170 ;;		___fldiv
 10171 ;;		___flmul
 10172 ;;		___fltol
 10173 ;;		___xxtofl
 10174 ;; This function is called by:
 10175 ;;		_main
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           	psect	text62
 10180   003850                     __ptext62:
 10181                           	callstack 0
 10182   003850                     _ccp2_pwm_set_duty:
 10183                           	callstack 25
 10184                           
 10185                           ;incstack = 0
 10186                           ;ccp2_pwm_set_duty@duty stored from wreg
 10187   003850  0101               	movlb	1	; () banked
 10188   003852  6F99               	movwf	ccp2_pwm_set_duty@duty& (0+255),b
 10189   003854                     
 10190                           ;MKAL_layer/CCP2/hal_ccp2.c: 120:     uint8 duty_ =100 - duty;
 10191   003854  0101               	movlb	1	; () banked
 10192   003856  5199               	movf	ccp2_pwm_set_duty@duty& (0+255),w,b
 10193   003858  0864               	sublw	100
 10194   00385A  6F9A               	movwf	ccp2_pwm_set_duty@duty_& (0+255),b
 10195   00385C                     
 10196                           ; BSR set to: 1
 10197                           ;MKAL_layer/CCP2/hal_ccp2.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 10198   00385C  0E00               	movlw	0
 10199   00385E  6E48               	movwf	___flmul@a^0,c
 10200   003860  0E00               	movlw	0
 10201   003862  6E49               	movwf	(___flmul@a+1)^0,c
 10202   003864  0E80               	movlw	128
 10203   003866  6E4A               	movwf	(___flmul@a+2)^0,c
 10204   003868  0E40               	movlw	64
 10205   00386A  6E4B               	movwf	(___flmul@a+3)^0,c
 10206   00386C  0E00               	movlw	0
 10207   00386E  6E38               	movwf	___fladd@a^0,c
 10208   003870  0E00               	movlw	0
 10209   003872  6E39               	movwf	(___fladd@a+1)^0,c
 10210   003874  0E80               	movlw	128
 10211   003876  6E3A               	movwf	(___fladd@a+2)^0,c
 10212   003878  0E3F               	movlw	63
 10213   00387A  6E3B               	movwf	(___fladd@a+3)^0,c
 10214   00387C  50CB               	movf	203,w,c	;volatile
 10215   00387E  6E0D               	movwf	___xxtofl@val^0,c
 10216   003880  6A0E               	clrf	(___xxtofl@val+1)^0,c
 10217   003882  6A0F               	clrf	(___xxtofl@val+2)^0,c
 10218   003884  6A10               	clrf	(___xxtofl@val+3)^0,c
 10219   003886  0E00               	movlw	0
 10220   003888  ECC9  F016         	call	___xxtofl
 10221   00388C  C00D  F034         	movff	?___xxtofl,___fladd@b
 10222   003890  C00E  F035         	movff	?___xxtofl+1,___fladd@b+1
 10223   003894  C00F  F036         	movff	?___xxtofl+2,___fladd@b+2
 10224   003898  C010  F037         	movff	?___xxtofl+3,___fladd@b+3
 10225   00389C  EC95  F00D         	call	___fladd	;wreg free
 10226   0038A0  C034  F044         	movff	?___fladd,___flmul@b
 10227   0038A4  C035  F045         	movff	?___fladd+1,___flmul@b+1
 10228   0038A8  C036  F046         	movff	?___fladd+2,___flmul@b+2
 10229   0038AC  C037  F047         	movff	?___fladd+3,___flmul@b+3
 10230   0038B0  ECF5  F00F         	call	___flmul	;wreg free
 10231   0038B4  C044  F195         	movff	?___flmul,_ccp2_pwm_set_duty$5694
 10232   0038B8  C045  F196         	movff	?___flmul+1,_ccp2_pwm_set_duty$5694+1
 10233   0038BC  C046  F197         	movff	?___flmul+2,_ccp2_pwm_set_duty$5694+2
 10234   0038C0  C047  F198         	movff	?___flmul+3,_ccp2_pwm_set_duty$5694+3
 10235   0038C4                     
 10236                           ;MKAL_layer/CCP2/hal_ccp2.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 10237   0038C4  0E00               	movlw	0
 10238   0038C6  6E1F               	movwf	___fldiv@a^0,c
 10239   0038C8  0E00               	movlw	0
 10240   0038CA  6E20               	movwf	(___fldiv@a+1)^0,c
 10241   0038CC  0EC8               	movlw	200
 10242   0038CE  6E21               	movwf	(___fldiv@a+2)^0,c
 10243   0038D0  0E42               	movlw	66
 10244   0038D2  6E22               	movwf	(___fldiv@a+3)^0,c
 10245   0038D4  0101               	movlb	1	; () banked
 10246   0038D6  519A               	movf	ccp2_pwm_set_duty@duty_& (0+255),w,b
 10247   0038D8  6E0D               	movwf	___xxtofl@val^0,c
 10248   0038DA  6A0E               	clrf	(___xxtofl@val+1)^0,c
 10249   0038DC  6A0F               	clrf	(___xxtofl@val+2)^0,c
 10250   0038DE  6A10               	clrf	(___xxtofl@val+3)^0,c
 10251   0038E0  0E00               	movlw	0
 10252   0038E2  ECC9  F016         	call	___xxtofl
 10253   0038E6  C00D  F01B         	movff	?___xxtofl,___fldiv@b
 10254   0038EA  C00E  F01C         	movff	?___xxtofl+1,___fldiv@b+1
 10255   0038EE  C00F  F01D         	movff	?___xxtofl+2,___fldiv@b+2
 10256   0038F2  C010  F01E         	movff	?___xxtofl+3,___fldiv@b+3
 10257   0038F6  EC15  F014         	call	___fldiv	;wreg free
 10258   0038FA  C01B  F048         	movff	?___fldiv,___flmul@a
 10259   0038FE  C01C  F049         	movff	?___fldiv+1,___flmul@a+1
 10260   003902  C01D  F04A         	movff	?___fldiv+2,___flmul@a+2
 10261   003906  C01E  F04B         	movff	?___fldiv+3,___flmul@a+3
 10262   00390A  C195  F044         	movff	_ccp2_pwm_set_duty$5694,___flmul@b
 10263   00390E  C196  F045         	movff	_ccp2_pwm_set_duty$5694+1,___flmul@b+1
 10264   003912  C197  F046         	movff	_ccp2_pwm_set_duty$5694+2,___flmul@b+2
 10265   003916  C198  F047         	movff	_ccp2_pwm_set_duty$5694+3,___flmul@b+3
 10266   00391A  ECF5  F00F         	call	___flmul	;wreg free
 10267   00391E  C044  F05D         	movff	?___flmul,___fltol@f1
 10268   003922  C045  F05E         	movff	?___flmul+1,___fltol@f1+1
 10269   003926  C046  F05F         	movff	?___flmul+2,___fltol@f1+2
 10270   00392A  C047  F060         	movff	?___flmul+3,___fltol@f1+3
 10271   00392E  EC42  F01D         	call	___fltol	;wreg free
 10272   003932  C05D  F19B         	movff	?___fltol,ccp2_pwm_set_duty@l_duty_temp
 10273   003936  C05E  F19C         	movff	?___fltol+1,ccp2_pwm_set_duty@l_duty_temp+1
 10274   00393A                     
 10275                           ;MKAL_layer/CCP2/hal_ccp2.c: 123:     CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
 10276   00393A  C19B  F0FB         	movff	ccp2_pwm_set_duty@l_duty_temp,??_ccp2_pwm_set_duty
 10277   00393E  0E03               	movlw	3
 10278   003940  0100               	movlb	0	; () banked
 10279   003942  17FB               	andwf	??_ccp2_pwm_set_duty& (0+255),f,b
 10280   003944  3BFB               	swapf	??_ccp2_pwm_set_duty& (0+255),f,b
 10281   003946  50BD               	movf	189,w,c	;volatile
 10282   003948  19FB               	xorwf	??_ccp2_pwm_set_duty& (0+255),w,b
 10283   00394A  0BCF               	andlw	-49
 10284   00394C  19FB               	xorwf	??_ccp2_pwm_set_duty& (0+255),w,b
 10285   00394E  6EBD               	movwf	189,c	;volatile
 10286   003950                     
 10287                           ; BSR set to: 0
 10288                           ;MKAL_layer/CCP2/hal_ccp2.c: 124:     CCPR2L = (uint8)(l_duty_temp >> 2);
 10289   003950  C19B  F0FB         	movff	ccp2_pwm_set_duty@l_duty_temp,??_ccp2_pwm_set_duty
 10290   003954  C19C  F0FC         	movff	ccp2_pwm_set_duty@l_duty_temp+1,??_ccp2_pwm_set_duty+1
 10291   003958  90D8               	bcf	status,0,c
 10292   00395A  33FC               	rrcf	(??_ccp2_pwm_set_duty+1)& (0+255),f,b
 10293   00395C  33FB               	rrcf	??_ccp2_pwm_set_duty& (0+255),f,b
 10294   00395E  90D8               	bcf	status,0,c
 10295   003960  33FC               	rrcf	(??_ccp2_pwm_set_duty+1)& (0+255),f,b
 10296   003962  33FB               	rrcf	??_ccp2_pwm_set_duty& (0+255),f,b
 10297   003964  51FB               	movf	??_ccp2_pwm_set_duty& (0+255),w,b
 10298   003966  6EBB               	movwf	187,c	;volatile
 10299   003968                     
 10300                           ; BSR set to: 0
 10301   003968  0012               	return		;funcret
 10302   00396A                     __end_of_ccp2_pwm_set_duty:
 10303                           	callstack 0
 10304                           
 10305 ;; *************** function _ccp1_pwm_set_duty *****************
 10306 ;; Defined at:
 10307 ;;		line 118 in file "MKAL_layer/CCP1/hal_ccp1.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  duty            1    wreg     const unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  duty            1    4[BANK1 ] const unsigned char 
 10312 ;;  l_duty_temp     2    6[BANK1 ] unsigned short 
 10313 ;;  duty_           1    5[BANK1 ] unsigned char 
 10314 ;;  ret             1    0        unsigned char 
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  1    wreg      unsigned char 
 10317 ;; Registers used:
 10318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;Total ram usage:       10 bytes
 10329 ;; Hardware stack levels used: 1
 10330 ;; Hardware stack levels required when called: 5
 10331 ;; This function calls:
 10332 ;;		___fladd
 10333 ;;		___fldiv
 10334 ;;		___flmul
 10335 ;;		___fltol
 10336 ;;		___xxtofl
 10337 ;; This function is called by:
 10338 ;;		_main
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           	psect	text63
 10343   00396A                     __ptext63:
 10344                           	callstack 0
 10345   00396A                     _ccp1_pwm_set_duty:
 10346                           	callstack 25
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;incstack = 0
 10350                           ;ccp1_pwm_set_duty@duty stored from wreg
 10351   00396A  0101               	movlb	1	; () banked
 10352   00396C  6F99               	movwf	ccp1_pwm_set_duty@duty& (0+255),b
 10353   00396E                     
 10354                           ;MKAL_layer/CCP1/hal_ccp1.c: 120:     uint8 duty_ =100 - duty;
 10355   00396E  0101               	movlb	1	; () banked
 10356   003970  5199               	movf	ccp1_pwm_set_duty@duty& (0+255),w,b
 10357   003972  0864               	sublw	100
 10358   003974  6F9A               	movwf	ccp1_pwm_set_duty@duty_& (0+255),b
 10359   003976                     
 10360                           ; BSR set to: 1
 10361                           ;MKAL_layer/CCP1/hal_ccp1.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 10362   003976  0E00               	movlw	0
 10363   003978  6E48               	movwf	___flmul@a^0,c
 10364   00397A  0E00               	movlw	0
 10365   00397C  6E49               	movwf	(___flmul@a+1)^0,c
 10366   00397E  0E80               	movlw	128
 10367   003980  6E4A               	movwf	(___flmul@a+2)^0,c
 10368   003982  0E40               	movlw	64
 10369   003984  6E4B               	movwf	(___flmul@a+3)^0,c
 10370   003986  0E00               	movlw	0
 10371   003988  6E38               	movwf	___fladd@a^0,c
 10372   00398A  0E00               	movlw	0
 10373   00398C  6E39               	movwf	(___fladd@a+1)^0,c
 10374   00398E  0E80               	movlw	128
 10375   003990  6E3A               	movwf	(___fladd@a+2)^0,c
 10376   003992  0E3F               	movlw	63
 10377   003994  6E3B               	movwf	(___fladd@a+3)^0,c
 10378   003996  50CB               	movf	203,w,c	;volatile
 10379   003998  6E0D               	movwf	___xxtofl@val^0,c
 10380   00399A  6A0E               	clrf	(___xxtofl@val+1)^0,c
 10381   00399C  6A0F               	clrf	(___xxtofl@val+2)^0,c
 10382   00399E  6A10               	clrf	(___xxtofl@val+3)^0,c
 10383   0039A0  0E00               	movlw	0
 10384   0039A2  ECC9  F016         	call	___xxtofl
 10385   0039A6  C00D  F034         	movff	?___xxtofl,___fladd@b
 10386   0039AA  C00E  F035         	movff	?___xxtofl+1,___fladd@b+1
 10387   0039AE  C00F  F036         	movff	?___xxtofl+2,___fladd@b+2
 10388   0039B2  C010  F037         	movff	?___xxtofl+3,___fladd@b+3
 10389   0039B6  EC95  F00D         	call	___fladd	;wreg free
 10390   0039BA  C034  F044         	movff	?___fladd,___flmul@b
 10391   0039BE  C035  F045         	movff	?___fladd+1,___flmul@b+1
 10392   0039C2  C036  F046         	movff	?___fladd+2,___flmul@b+2
 10393   0039C6  C037  F047         	movff	?___fladd+3,___flmul@b+3
 10394   0039CA  ECF5  F00F         	call	___flmul	;wreg free
 10395   0039CE  C044  F195         	movff	?___flmul,_ccp1_pwm_set_duty$5693
 10396   0039D2  C045  F196         	movff	?___flmul+1,_ccp1_pwm_set_duty$5693+1
 10397   0039D6  C046  F197         	movff	?___flmul+2,_ccp1_pwm_set_duty$5693+2
 10398   0039DA  C047  F198         	movff	?___flmul+3,_ccp1_pwm_set_duty$5693+3
 10399   0039DE                     
 10400                           ;MKAL_layer/CCP1/hal_ccp1.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
 10401   0039DE  0E00               	movlw	0
 10402   0039E0  6E1F               	movwf	___fldiv@a^0,c
 10403   0039E2  0E00               	movlw	0
 10404   0039E4  6E20               	movwf	(___fldiv@a+1)^0,c
 10405   0039E6  0EC8               	movlw	200
 10406   0039E8  6E21               	movwf	(___fldiv@a+2)^0,c
 10407   0039EA  0E42               	movlw	66
 10408   0039EC  6E22               	movwf	(___fldiv@a+3)^0,c
 10409   0039EE  0101               	movlb	1	; () banked
 10410   0039F0  519A               	movf	ccp1_pwm_set_duty@duty_& (0+255),w,b
 10411   0039F2  6E0D               	movwf	___xxtofl@val^0,c
 10412   0039F4  6A0E               	clrf	(___xxtofl@val+1)^0,c
 10413   0039F6  6A0F               	clrf	(___xxtofl@val+2)^0,c
 10414   0039F8  6A10               	clrf	(___xxtofl@val+3)^0,c
 10415   0039FA  0E00               	movlw	0
 10416   0039FC  ECC9  F016         	call	___xxtofl
 10417   003A00  C00D  F01B         	movff	?___xxtofl,___fldiv@b
 10418   003A04  C00E  F01C         	movff	?___xxtofl+1,___fldiv@b+1
 10419   003A08  C00F  F01D         	movff	?___xxtofl+2,___fldiv@b+2
 10420   003A0C  C010  F01E         	movff	?___xxtofl+3,___fldiv@b+3
 10421   003A10  EC15  F014         	call	___fldiv	;wreg free
 10422   003A14  C01B  F048         	movff	?___fldiv,___flmul@a
 10423   003A18  C01C  F049         	movff	?___fldiv+1,___flmul@a+1
 10424   003A1C  C01D  F04A         	movff	?___fldiv+2,___flmul@a+2
 10425   003A20  C01E  F04B         	movff	?___fldiv+3,___flmul@a+3
 10426   003A24  C195  F044         	movff	_ccp1_pwm_set_duty$5693,___flmul@b
 10427   003A28  C196  F045         	movff	_ccp1_pwm_set_duty$5693+1,___flmul@b+1
 10428   003A2C  C197  F046         	movff	_ccp1_pwm_set_duty$5693+2,___flmul@b+2
 10429   003A30  C198  F047         	movff	_ccp1_pwm_set_duty$5693+3,___flmul@b+3
 10430   003A34  ECF5  F00F         	call	___flmul	;wreg free
 10431   003A38  C044  F05D         	movff	?___flmul,___fltol@f1
 10432   003A3C  C045  F05E         	movff	?___flmul+1,___fltol@f1+1
 10433   003A40  C046  F05F         	movff	?___flmul+2,___fltol@f1+2
 10434   003A44  C047  F060         	movff	?___flmul+3,___fltol@f1+3
 10435   003A48  EC42  F01D         	call	___fltol	;wreg free
 10436   003A4C  C05D  F19B         	movff	?___fltol,ccp1_pwm_set_duty@l_duty_temp
 10437   003A50  C05E  F19C         	movff	?___fltol+1,ccp1_pwm_set_duty@l_duty_temp+1
 10438   003A54                     
 10439                           ;MKAL_layer/CCP1/hal_ccp1.c: 123:     CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
 10440   003A54  C19B  F0FB         	movff	ccp1_pwm_set_duty@l_duty_temp,??_ccp1_pwm_set_duty
 10441   003A58  0E03               	movlw	3
 10442   003A5A  0100               	movlb	0	; () banked
 10443   003A5C  17FB               	andwf	??_ccp1_pwm_set_duty& (0+255),f,b
 10444   003A5E  3BFB               	swapf	??_ccp1_pwm_set_duty& (0+255),f,b
 10445   003A60  50BD               	movf	189,w,c	;volatile
 10446   003A62  19FB               	xorwf	??_ccp1_pwm_set_duty& (0+255),w,b
 10447   003A64  0BCF               	andlw	-49
 10448   003A66  19FB               	xorwf	??_ccp1_pwm_set_duty& (0+255),w,b
 10449   003A68  6EBD               	movwf	189,c	;volatile
 10450   003A6A                     
 10451                           ; BSR set to: 0
 10452                           ;MKAL_layer/CCP1/hal_ccp1.c: 124:     CCPR1L = (uint8)(l_duty_temp >> 2);
 10453   003A6A  C19B  F0FB         	movff	ccp1_pwm_set_duty@l_duty_temp,??_ccp1_pwm_set_duty
 10454   003A6E  C19C  F0FC         	movff	ccp1_pwm_set_duty@l_duty_temp+1,??_ccp1_pwm_set_duty+1
 10455   003A72  90D8               	bcf	status,0,c
 10456   003A74  33FC               	rrcf	(??_ccp1_pwm_set_duty+1)& (0+255),f,b
 10457   003A76  33FB               	rrcf	??_ccp1_pwm_set_duty& (0+255),f,b
 10458   003A78  90D8               	bcf	status,0,c
 10459   003A7A  33FC               	rrcf	(??_ccp1_pwm_set_duty+1)& (0+255),f,b
 10460   003A7C  33FB               	rrcf	??_ccp1_pwm_set_duty& (0+255),f,b
 10461   003A7E  51FB               	movf	??_ccp1_pwm_set_duty& (0+255),w,b
 10462   003A80  6EBE               	movwf	190,c	;volatile
 10463   003A82                     
 10464                           ; BSR set to: 0
 10465   003A82  0012               	return		;funcret
 10466   003A84                     __end_of_ccp1_pwm_set_duty:
 10467                           	callstack 0
 10468                           
 10469 ;; *************** function ___xxtofl *****************
 10470 ;; Defined at:
 10471 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  sign            1    wreg     unsigned char 
 10474 ;;  val             4   12[COMRAM] long 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  sign            1   20[COMRAM] unsigned char 
 10477 ;;  arg             4   22[COMRAM] unsigned long 
 10478 ;;  exp             1   21[COMRAM] unsigned char 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  4   12[COMRAM] unsigned char 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10491 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;Total ram usage:       14 bytes
 10493 ;; Hardware stack levels used: 1
 10494 ;; Hardware stack levels required when called: 4
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_ccp1_pwm_set_duty
 10499 ;;		_ccp2_pwm_set_duty
 10500 ;;		_I2C_Master_Mode_Clock_Configurations
 10501 ;;		_baudrate_calculate
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text64
 10506   002D92                     __ptext64:
 10507                           	callstack 0
 10508   002D92                     ___xxtofl:
 10509                           	callstack 23
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;incstack = 0
 10513                           ;___xxtofl@sign stored from wreg
 10514   002D92  6E15               	movwf	___xxtofl@sign^0,c
 10515   002D94  5015               	movf	___xxtofl@sign^0,w,c
 10516   002D96  B4D8               	btfsc	status,2,c
 10517   002D98  EFD0  F016         	goto	u10121
 10518   002D9C  EFD2  F016         	goto	u10120
 10519   002DA0                     u10121:
 10520   002DA0  EFF4  F016         	goto	l2421
 10521   002DA4                     u10120:
 10522   002DA4  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 10523   002DA6  EFD9  F016         	goto	u10130
 10524   002DAA  EFD7  F016         	goto	u10131
 10525   002DAE                     u10131:
 10526   002DAE  EFF4  F016         	goto	l2421
 10527   002DB2                     u10130:
 10528   002DB2  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 10529   002DB6  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 10530   002DBA  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 10531   002DBE  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 10532   002DC2  1E11               	comf	??___xxtofl^0,f,c
 10533   002DC4  1E12               	comf	(??___xxtofl+1)^0,f,c
 10534   002DC6  1E13               	comf	(??___xxtofl+2)^0,f,c
 10535   002DC8  1E14               	comf	(??___xxtofl+3)^0,f,c
 10536   002DCA  2A11               	incf	??___xxtofl^0,f,c
 10537   002DCC  0E00               	movlw	0
 10538   002DCE  2212               	addwfc	(??___xxtofl+1)^0,f,c
 10539   002DD0  2213               	addwfc	(??___xxtofl+2)^0,f,c
 10540   002DD2  2214               	addwfc	(??___xxtofl+3)^0,f,c
 10541   002DD4  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 10542   002DD8  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 10543   002DDC  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 10544   002DE0  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 10545   002DE4  EFFC  F016         	goto	l10212
 10546   002DE8                     l2421:
 10547   002DE8  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 10548   002DEC  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10549   002DF0  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10550   002DF4  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10551   002DF8                     l10212:
 10552   002DF8  500D               	movf	___xxtofl@val^0,w,c
 10553   002DFA  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 10554   002DFC  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 10555   002DFE  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 10556   002E00  A4D8               	btfss	status,2,c
 10557   002E02  EF05  F017         	goto	u10141
 10558   002E06  EF07  F017         	goto	u10140
 10559   002E0A                     u10141:
 10560   002E0A  EF11  F017         	goto	l10218
 10561   002E0E                     u10140:
 10562   002E0E  0E00               	movlw	0
 10563   002E10  6E0D               	movwf	?___xxtofl^0,c
 10564   002E12  0E00               	movlw	0
 10565   002E14  6E0E               	movwf	(?___xxtofl+1)^0,c
 10566   002E16  0E00               	movlw	0
 10567   002E18  6E0F               	movwf	(?___xxtofl+2)^0,c
 10568   002E1A  0E00               	movlw	0
 10569   002E1C  6E10               	movwf	(?___xxtofl+3)^0,c
 10570   002E1E  EFA2  F017         	goto	l2424
 10571   002E22                     l10218:
 10572   002E22  0E96               	movlw	150
 10573   002E24  6E16               	movwf	___xxtofl@exp^0,c
 10574   002E26  EF1B  F017         	goto	l10222
 10575   002E2A                     l10220:
 10576   002E2A  2A16               	incf	___xxtofl@exp^0,f,c
 10577   002E2C  90D8               	bcf	status,0,c
 10578   002E2E  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 10579   002E30  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 10580   002E32  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 10581   002E34  3217               	rrcf	___xxtofl@arg^0,f,c
 10582   002E36                     l10222:
 10583   002E36  0E00               	movlw	0
 10584   002E38  1417               	andwf	___xxtofl@arg^0,w,c
 10585   002E3A  6E11               	movwf	??___xxtofl^0,c
 10586   002E3C  0E00               	movlw	0
 10587   002E3E  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 10588   002E40  6E12               	movwf	(??___xxtofl+1)^0,c
 10589   002E42  0E00               	movlw	0
 10590   002E44  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 10591   002E46  6E13               	movwf	(??___xxtofl+2)^0,c
 10592   002E48  0EFE               	movlw	254
 10593   002E4A  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 10594   002E4C  6E14               	movwf	(??___xxtofl+3)^0,c
 10595   002E4E  5011               	movf	??___xxtofl^0,w,c
 10596   002E50  1012               	iorwf	(??___xxtofl+1)^0,w,c
 10597   002E52  1013               	iorwf	(??___xxtofl+2)^0,w,c
 10598   002E54  1014               	iorwf	(??___xxtofl+3)^0,w,c
 10599   002E56  A4D8               	btfss	status,2,c
 10600   002E58  EF30  F017         	goto	u10151
 10601   002E5C  EF32  F017         	goto	u10150
 10602   002E60                     u10151:
 10603   002E60  EF15  F017         	goto	l10220
 10604   002E64                     u10150:
 10605   002E64  EF40  F017         	goto	l2428
 10606   002E68                     l10224:
 10607   002E68  2A16               	incf	___xxtofl@exp^0,f,c
 10608   002E6A  0E01               	movlw	1
 10609   002E6C  2617               	addwf	___xxtofl@arg^0,f,c
 10610   002E6E  0E00               	movlw	0
 10611   002E70  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 10612   002E72  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 10613   002E74  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 10614   002E76  90D8               	bcf	status,0,c
 10615   002E78  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 10616   002E7A  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 10617   002E7C  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 10618   002E7E  3217               	rrcf	___xxtofl@arg^0,f,c
 10619   002E80                     l2428:
 10620   002E80  0E00               	movlw	0
 10621   002E82  1417               	andwf	___xxtofl@arg^0,w,c
 10622   002E84  6E11               	movwf	??___xxtofl^0,c
 10623   002E86  0E00               	movlw	0
 10624   002E88  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 10625   002E8A  6E12               	movwf	(??___xxtofl+1)^0,c
 10626   002E8C  0E00               	movlw	0
 10627   002E8E  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 10628   002E90  6E13               	movwf	(??___xxtofl+2)^0,c
 10629   002E92  0EFF               	movlw	255
 10630   002E94  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 10631   002E96  6E14               	movwf	(??___xxtofl+3)^0,c
 10632   002E98  5011               	movf	??___xxtofl^0,w,c
 10633   002E9A  1012               	iorwf	(??___xxtofl+1)^0,w,c
 10634   002E9C  1013               	iorwf	(??___xxtofl+2)^0,w,c
 10635   002E9E  1014               	iorwf	(??___xxtofl+3)^0,w,c
 10636   002EA0  A4D8               	btfss	status,2,c
 10637   002EA2  EF55  F017         	goto	u10161
 10638   002EA6  EF57  F017         	goto	u10160
 10639   002EAA                     u10161:
 10640   002EAA  EF34  F017         	goto	l10224
 10641   002EAE                     u10160:
 10642   002EAE  EF5F  F017         	goto	l10232
 10643   002EB2                     l10230:
 10644   002EB2  0616               	decf	___xxtofl@exp^0,f,c
 10645   002EB4  90D8               	bcf	status,0,c
 10646   002EB6  3617               	rlcf	___xxtofl@arg^0,f,c
 10647   002EB8  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 10648   002EBA  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 10649   002EBC  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 10650   002EBE                     l10232:
 10651   002EBE  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 10652   002EC0  EF64  F017         	goto	u10171
 10653   002EC4  EF66  F017         	goto	u10170
 10654   002EC8                     u10171:
 10655   002EC8  EF6E  F017         	goto	l2435
 10656   002ECC                     u10170:
 10657   002ECC  0E02               	movlw	2
 10658   002ECE  6016               	cpfslt	___xxtofl@exp^0,c
 10659   002ED0  EF6C  F017         	goto	u10181
 10660   002ED4  EF6E  F017         	goto	u10180
 10661   002ED8                     u10181:
 10662   002ED8  EF59  F017         	goto	l10230
 10663   002EDC                     u10180:
 10664   002EDC                     l2435:
 10665   002EDC  B016               	btfsc	___xxtofl@exp^0,0,c
 10666   002EDE  EF73  F017         	goto	u10191
 10667   002EE2  EF75  F017         	goto	u10190
 10668   002EE6                     u10191:
 10669   002EE6  EF76  F017         	goto	l10238
 10670   002EEA                     u10190:
 10671   002EEA  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 10672   002EEC                     l10238:
 10673   002EEC  90D8               	bcf	status,0,c
 10674   002EEE  3216               	rrcf	___xxtofl@exp^0,f,c
 10675   002EF0  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 10676   002EF4  6A12               	clrf	(??___xxtofl+1)^0,c
 10677   002EF6  6A13               	clrf	(??___xxtofl+2)^0,c
 10678   002EF8  6A14               	clrf	(??___xxtofl+3)^0,c
 10679   002EFA  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 10680   002EFE  6A13               	clrf	(??___xxtofl+2)^0,c
 10681   002F00  6A12               	clrf	(??___xxtofl+1)^0,c
 10682   002F02  6A11               	clrf	??___xxtofl^0,c
 10683   002F04  5011               	movf	??___xxtofl^0,w,c
 10684   002F06  1217               	iorwf	___xxtofl@arg^0,f,c
 10685   002F08  5012               	movf	(??___xxtofl+1)^0,w,c
 10686   002F0A  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 10687   002F0C  5013               	movf	(??___xxtofl+2)^0,w,c
 10688   002F0E  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 10689   002F10  5014               	movf	(??___xxtofl+3)^0,w,c
 10690   002F12  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 10691   002F14  5015               	movf	___xxtofl@sign^0,w,c
 10692   002F16  B4D8               	btfsc	status,2,c
 10693   002F18  EF90  F017         	goto	u10201
 10694   002F1C  EF92  F017         	goto	u10200
 10695   002F20                     u10201:
 10696   002F20  EF9A  F017         	goto	l10248
 10697   002F24                     u10200:
 10698   002F24  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 10699   002F26  EF99  F017         	goto	u10210
 10700   002F2A  EF97  F017         	goto	u10211
 10701   002F2E                     u10211:
 10702   002F2E  EF9A  F017         	goto	l10248
 10703   002F32                     u10210:
 10704   002F32  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 10705   002F34                     l10248:
 10706   002F34  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 10707   002F38  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 10708   002F3C  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 10709   002F40  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 10710   002F44                     l2424:
 10711   002F44  0012               	return		;funcret
 10712   002F46                     __end_of___xxtofl:
 10713                           	callstack 0
 10714                           
 10715 ;; *************** function ___fltol *****************
 10716 ;; Defined at:
 10717 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;  f1              4   92[COMRAM] unsigned char 
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  exp1            1  101[COMRAM] unsigned char 
 10722 ;;  sign1           1  100[COMRAM] unsigned char 
 10723 ;; Return value:  Size  Location     Type
 10724 ;;                  4   92[COMRAM] long 
 10725 ;; Registers used:
 10726 ;;		wreg, status,2, status,0
 10727 ;; Tracked objects:
 10728 ;;		On entry : 0/0
 10729 ;;		On exit  : 0/0
 10730 ;;		Unchanged: 0/0
 10731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;Total ram usage:       10 bytes
 10737 ;; Hardware stack levels used: 1
 10738 ;; Hardware stack levels required when called: 4
 10739 ;; This function calls:
 10740 ;;		Nothing
 10741 ;; This function is called by:
 10742 ;;		_ccp1_pwm_set_duty
 10743 ;;		_ccp2_pwm_set_duty
 10744 ;;		_I2C_Master_Mode_Clock_Configurations
 10745 ;;		_baudrate_calculate
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text65
 10750   003A84                     __ptext65:
 10751                           	callstack 0
 10752   003A84                     ___fltol:
 10753                           	callstack 23
 10754   003A84  345F               	rlcf	(___fltol@f1+2)^0,w,c
 10755   003A86  3460               	rlcf	(___fltol@f1+3)^0,w,c
 10756   003A88  6E66               	movwf	___fltol@exp1^0,c
 10757   003A8A  5066               	movf	___fltol@exp1^0,w,c
 10758   003A8C  A4D8               	btfss	status,2,c
 10759   003A8E  EF4B  F01D         	goto	u10051
 10760   003A92  EF4D  F01D         	goto	u10050
 10761   003A96                     u10051:
 10762   003A96  EF57  F01D         	goto	l10168
 10763   003A9A                     u10050:
 10764   003A9A                     l10164:
 10765   003A9A  0E00               	movlw	0
 10766   003A9C  6E5D               	movwf	?___fltol^0,c
 10767   003A9E  0E00               	movlw	0
 10768   003AA0  6E5E               	movwf	(?___fltol+1)^0,c
 10769   003AA2  0E00               	movlw	0
 10770   003AA4  6E5F               	movwf	(?___fltol+2)^0,c
 10771   003AA6  0E00               	movlw	0
 10772   003AA8  6E60               	movwf	(?___fltol+3)^0,c
 10773   003AAA  EFC4  F01D         	goto	l2063
 10774   003AAE                     l10168:
 10775   003AAE  C05D  F061         	movff	___fltol@f1,??___fltol
 10776   003AB2  C05E  F062         	movff	___fltol@f1+1,??___fltol+1
 10777   003AB6  C05F  F063         	movff	___fltol@f1+2,??___fltol+2
 10778   003ABA  C060  F064         	movff	___fltol@f1+3,??___fltol+3
 10779   003ABE  0E20               	movlw	32
 10780   003AC0  EF67  F01D         	goto	u10060
 10781   003AC4                     u10065:
 10782   003AC4  90D8               	bcf	status,0,c
 10783   003AC6  3264               	rrcf	(??___fltol+3)^0,f,c
 10784   003AC8  3263               	rrcf	(??___fltol+2)^0,f,c
 10785   003ACA  3262               	rrcf	(??___fltol+1)^0,f,c
 10786   003ACC  3261               	rrcf	??___fltol^0,f,c
 10787   003ACE                     u10060:
 10788   003ACE  2EE8               	decfsz	wreg,f,c
 10789   003AD0  EF62  F01D         	goto	u10065
 10790   003AD4  5061               	movf	??___fltol^0,w,c
 10791   003AD6  6E65               	movwf	___fltol@sign1^0,c
 10792   003AD8  8E5F               	bsf	(___fltol@f1+2)^0,7,c
 10793   003ADA  0EFF               	movlw	255
 10794   003ADC  165D               	andwf	___fltol@f1^0,f,c
 10795   003ADE  0EFF               	movlw	255
 10796   003AE0  165E               	andwf	(___fltol@f1+1)^0,f,c
 10797   003AE2  0EFF               	movlw	255
 10798   003AE4  165F               	andwf	(___fltol@f1+2)^0,f,c
 10799   003AE6  0E00               	movlw	0
 10800   003AE8  1660               	andwf	(___fltol@f1+3)^0,f,c
 10801   003AEA  0E96               	movlw	150
 10802   003AEC  5E66               	subwf	___fltol@exp1^0,f,c
 10803   003AEE  BE66               	btfsc	___fltol@exp1^0,7,c
 10804   003AF0  EF7E  F01D         	goto	u10070
 10805   003AF4  EF7C  F01D         	goto	u10071
 10806   003AF8                     u10071:
 10807   003AF8  EF94  F01D         	goto	l10188
 10808   003AFC                     u10070:
 10809   003AFC  5066               	movf	___fltol@exp1^0,w,c
 10810   003AFE  0A80               	xorlw	128
 10811   003B00  0F97               	addlw	151
 10812   003B02  B0D8               	btfsc	status,0,c
 10813   003B04  EF86  F01D         	goto	u10081
 10814   003B08  EF88  F01D         	goto	u10080
 10815   003B0C                     u10081:
 10816   003B0C  EF8A  F01D         	goto	l10184
 10817   003B10                     u10080:
 10818   003B10  EF4D  F01D         	goto	l10164
 10819   003B14                     l10184:
 10820   003B14  90D8               	bcf	status,0,c
 10821   003B16  3260               	rrcf	(___fltol@f1+3)^0,f,c
 10822   003B18  325F               	rrcf	(___fltol@f1+2)^0,f,c
 10823   003B1A  325E               	rrcf	(___fltol@f1+1)^0,f,c
 10824   003B1C  325D               	rrcf	___fltol@f1^0,f,c
 10825   003B1E  3E66               	incfsz	___fltol@exp1^0,f,c
 10826   003B20  EF8A  F01D         	goto	l10184
 10827   003B24  EFAC  F01D         	goto	l10198
 10828   003B28                     l10188:
 10829   003B28  0E1F               	movlw	31
 10830   003B2A  6466               	cpfsgt	___fltol@exp1^0,c
 10831   003B2C  EF9A  F01D         	goto	u10091
 10832   003B30  EF9C  F01D         	goto	u10090
 10833   003B34                     u10091:
 10834   003B34  EFA4  F01D         	goto	l10196
 10835   003B38                     u10090:
 10836   003B38  EF4D  F01D         	goto	l10164
 10837   003B3C                     l10194:
 10838   003B3C  90D8               	bcf	status,0,c
 10839   003B3E  365D               	rlcf	___fltol@f1^0,f,c
 10840   003B40  365E               	rlcf	(___fltol@f1+1)^0,f,c
 10841   003B42  365F               	rlcf	(___fltol@f1+2)^0,f,c
 10842   003B44  3660               	rlcf	(___fltol@f1+3)^0,f,c
 10843   003B46  0666               	decf	___fltol@exp1^0,f,c
 10844   003B48                     l10196:
 10845   003B48  5066               	movf	___fltol@exp1^0,w,c
 10846   003B4A  A4D8               	btfss	status,2,c
 10847   003B4C  EFAA  F01D         	goto	u10101
 10848   003B50  EFAC  F01D         	goto	u10100
 10849   003B54                     u10101:
 10850   003B54  EF9E  F01D         	goto	l10194
 10851   003B58                     u10100:
 10852   003B58                     l10198:
 10853   003B58  5065               	movf	___fltol@sign1^0,w,c
 10854   003B5A  B4D8               	btfsc	status,2,c
 10855   003B5C  EFB2  F01D         	goto	u10111
 10856   003B60  EFB4  F01D         	goto	u10110
 10857   003B64                     u10111:
 10858   003B64  EFBC  F01D         	goto	l10202
 10859   003B68                     u10110:
 10860   003B68  1E60               	comf	(___fltol@f1+3)^0,f,c
 10861   003B6A  1E5F               	comf	(___fltol@f1+2)^0,f,c
 10862   003B6C  1E5E               	comf	(___fltol@f1+1)^0,f,c
 10863   003B6E  6C5D               	negf	___fltol@f1^0,c
 10864   003B70  0E00               	movlw	0
 10865   003B72  225E               	addwfc	(___fltol@f1+1)^0,f,c
 10866   003B74  225F               	addwfc	(___fltol@f1+2)^0,f,c
 10867   003B76  2260               	addwfc	(___fltol@f1+3)^0,f,c
 10868   003B78                     l10202:
 10869   003B78  C05D  F05D         	movff	___fltol@f1,?___fltol
 10870   003B7C  C05E  F05E         	movff	___fltol@f1+1,?___fltol+1
 10871   003B80  C05F  F05F         	movff	___fltol@f1+2,?___fltol+2
 10872   003B84  C060  F060         	movff	___fltol@f1+3,?___fltol+3
 10873   003B88                     l2063:
 10874   003B88  0012               	return		;funcret
 10875   003B8A                     __end_of___fltol:
 10876                           	callstack 0
 10877                           
 10878 ;; *************** function ___flmul *****************
 10879 ;; Defined at:
 10880 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  b               4   67[COMRAM] long 
 10883 ;;  a               4   71[COMRAM] long 
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;  prod            4   86[COMRAM] struct .
 10886 ;;  grs             4   81[COMRAM] unsigned long 
 10887 ;;  temp            2   90[COMRAM] struct .
 10888 ;;  bexp            1   85[COMRAM] unsigned char 
 10889 ;;  aexp            1   80[COMRAM] unsigned char 
 10890 ;;  sign            1   79[COMRAM] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  4   67[COMRAM] unsigned char 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, prodl, prodh
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10900 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10901 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;Total ram usage:       25 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; Hardware stack levels required when called: 4
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_ccp1_pwm_set_duty
 10911 ;;		_ccp2_pwm_set_duty
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           	psect	text66
 10916   001FEA                     __ptext66:
 10917                           	callstack 0
 10918   001FEA                     ___flmul:
 10919                           	callstack 25
 10920   001FEA  5047               	movf	(___flmul@b+3)^0,w,c
 10921   001FEC  0B80               	andlw	128
 10922   001FEE  6E50               	movwf	___flmul@sign^0,c
 10923   001FF0  5047               	movf	(___flmul@b+3)^0,w,c
 10924   001FF2  2447               	addwf	(___flmul@b+3)^0,w,c
 10925   001FF4  6E56               	movwf	___flmul@bexp^0,c
 10926   001FF6  AE46               	btfss	(___flmul@b+2)^0,7,c
 10927   001FF8  EF00  F010         	goto	u11331
 10928   001FFC  EF02  F010         	goto	u11330
 10929   002000                     u11331:
 10930   002000  EF03  F010         	goto	l11202
 10931   002004                     u11330:
 10932   002004  8056               	bsf	___flmul@bexp^0,0,c
 10933   002006                     l11202:
 10934   002006  5056               	movf	___flmul@bexp^0,w,c
 10935   002008  B4D8               	btfsc	status,2,c
 10936   00200A  EF09  F010         	goto	u11341
 10937   00200E  EF0B  F010         	goto	u11340
 10938   002012                     u11341:
 10939   002012  EF1E  F010         	goto	l11210
 10940   002016                     u11340:
 10941   002016  2856               	incf	___flmul@bexp^0,w,c
 10942   002018  A4D8               	btfss	status,2,c
 10943   00201A  EF11  F010         	goto	u11351
 10944   00201E  EF13  F010         	goto	u11350
 10945   002022                     u11351:
 10946   002022  EF1B  F010         	goto	l11208
 10947   002026                     u11350:
 10948   002026  0E00               	movlw	0
 10949   002028  6E44               	movwf	___flmul@b^0,c
 10950   00202A  0E00               	movlw	0
 10951   00202C  6E45               	movwf	(___flmul@b+1)^0,c
 10952   00202E  0E00               	movlw	0
 10953   002030  6E46               	movwf	(___flmul@b+2)^0,c
 10954   002032  0E00               	movlw	0
 10955   002034  6E47               	movwf	(___flmul@b+3)^0,c
 10956   002036                     l11208:
 10957   002036  8E46               	bsf	(___flmul@b+2)^0,7,c
 10958   002038  EF26  F010         	goto	l11212
 10959   00203C                     l11210:
 10960   00203C  0E00               	movlw	0
 10961   00203E  6E44               	movwf	___flmul@b^0,c
 10962   002040  0E00               	movlw	0
 10963   002042  6E45               	movwf	(___flmul@b+1)^0,c
 10964   002044  0E00               	movlw	0
 10965   002046  6E46               	movwf	(___flmul@b+2)^0,c
 10966   002048  0E00               	movlw	0
 10967   00204A  6E47               	movwf	(___flmul@b+3)^0,c
 10968   00204C                     l11212:
 10969   00204C  504B               	movf	(___flmul@a+3)^0,w,c
 10970   00204E  0B80               	andlw	128
 10971   002050  1A50               	xorwf	___flmul@sign^0,f,c
 10972   002052  504B               	movf	(___flmul@a+3)^0,w,c
 10973   002054  244B               	addwf	(___flmul@a+3)^0,w,c
 10974   002056  6E51               	movwf	___flmul@aexp^0,c
 10975   002058  AE4A               	btfss	(___flmul@a+2)^0,7,c
 10976   00205A  EF31  F010         	goto	u11361
 10977   00205E  EF33  F010         	goto	u11360
 10978   002062                     u11361:
 10979   002062  EF34  F010         	goto	l11220
 10980   002066                     u11360:
 10981   002066  8051               	bsf	___flmul@aexp^0,0,c
 10982   002068                     l11220:
 10983   002068  5051               	movf	___flmul@aexp^0,w,c
 10984   00206A  B4D8               	btfsc	status,2,c
 10985   00206C  EF3A  F010         	goto	u11371
 10986   002070  EF3C  F010         	goto	u11370
 10987   002074                     u11371:
 10988   002074  EF4F  F010         	goto	l11228
 10989   002078                     u11370:
 10990   002078  2851               	incf	___flmul@aexp^0,w,c
 10991   00207A  A4D8               	btfss	status,2,c
 10992   00207C  EF42  F010         	goto	u11381
 10993   002080  EF44  F010         	goto	u11380
 10994   002084                     u11381:
 10995   002084  EF4C  F010         	goto	l11226
 10996   002088                     u11380:
 10997   002088  0E00               	movlw	0
 10998   00208A  6E48               	movwf	___flmul@a^0,c
 10999   00208C  0E00               	movlw	0
 11000   00208E  6E49               	movwf	(___flmul@a+1)^0,c
 11001   002090  0E00               	movlw	0
 11002   002092  6E4A               	movwf	(___flmul@a+2)^0,c
 11003   002094  0E00               	movlw	0
 11004   002096  6E4B               	movwf	(___flmul@a+3)^0,c
 11005   002098                     l11226:
 11006   002098  8E4A               	bsf	(___flmul@a+2)^0,7,c
 11007   00209A  EF57  F010         	goto	l2380
 11008   00209E                     l11228:
 11009   00209E  0E00               	movlw	0
 11010   0020A0  6E48               	movwf	___flmul@a^0,c
 11011   0020A2  0E00               	movlw	0
 11012   0020A4  6E49               	movwf	(___flmul@a+1)^0,c
 11013   0020A6  0E00               	movlw	0
 11014   0020A8  6E4A               	movwf	(___flmul@a+2)^0,c
 11015   0020AA  0E00               	movlw	0
 11016   0020AC  6E4B               	movwf	(___flmul@a+3)^0,c
 11017   0020AE                     l2380:
 11018   0020AE  5051               	movf	___flmul@aexp^0,w,c
 11019   0020B0  B4D8               	btfsc	status,2,c
 11020   0020B2  EF5D  F010         	goto	u11391
 11021   0020B6  EF5F  F010         	goto	u11390
 11022   0020BA                     u11391:
 11023   0020BA  EF67  F010         	goto	l11232
 11024   0020BE                     u11390:
 11025   0020BE  5056               	movf	___flmul@bexp^0,w,c
 11026   0020C0  A4D8               	btfss	status,2,c
 11027   0020C2  EF65  F010         	goto	u11401
 11028   0020C6  EF67  F010         	goto	u11400
 11029   0020CA                     u11401:
 11030   0020CA  EF71  F010         	goto	l11236
 11031   0020CE                     u11400:
 11032   0020CE                     l11232:
 11033   0020CE  0E00               	movlw	0
 11034   0020D0  6E44               	movwf	?___flmul^0,c
 11035   0020D2  0E00               	movlw	0
 11036   0020D4  6E45               	movwf	(?___flmul+1)^0,c
 11037   0020D6  0E00               	movlw	0
 11038   0020D8  6E46               	movwf	(?___flmul+2)^0,c
 11039   0020DA  0E00               	movlw	0
 11040   0020DC  6E47               	movwf	(?___flmul+3)^0,c
 11041   0020DE  EF09  F012         	goto	l2384
 11042   0020E2                     l11236:
 11043   0020E2  504A               	movf	(___flmul@a+2)^0,w,c
 11044   0020E4  0244               	mulwf	___flmul@b^0,c
 11045   0020E6  CFF3 F05B          	movff	prodl,___flmul@temp
 11046   0020EA  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11047   0020EE  505B               	movf	___flmul@temp^0,w,c
 11048   0020F0  6E52               	movwf	___flmul@grs^0,c
 11049   0020F2  6A53               	clrf	(___flmul@grs+1)^0,c
 11050   0020F4  6A54               	clrf	(___flmul@grs+2)^0,c
 11051   0020F6  6A55               	clrf	(___flmul@grs+3)^0,c
 11052   0020F8  505C               	movf	(___flmul@temp+1)^0,w,c
 11053   0020FA  6E57               	movwf	___flmul@prod^0,c
 11054   0020FC  6A58               	clrf	(___flmul@prod+1)^0,c
 11055   0020FE  6A59               	clrf	(___flmul@prod+2)^0,c
 11056   002100  6A5A               	clrf	(___flmul@prod+3)^0,c
 11057   002102  5049               	movf	(___flmul@a+1)^0,w,c
 11058   002104  0245               	mulwf	(___flmul@b+1)^0,c
 11059   002106  CFF3 F05B          	movff	prodl,___flmul@temp
 11060   00210A  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11061   00210E  505B               	movf	___flmul@temp^0,w,c
 11062   002110  2652               	addwf	___flmul@grs^0,f,c
 11063   002112  0E00               	movlw	0
 11064   002114  2253               	addwfc	(___flmul@grs+1)^0,f,c
 11065   002116  2254               	addwfc	(___flmul@grs+2)^0,f,c
 11066   002118  2255               	addwfc	(___flmul@grs+3)^0,f,c
 11067   00211A  505C               	movf	(___flmul@temp+1)^0,w,c
 11068   00211C  2657               	addwf	___flmul@prod^0,f,c
 11069   00211E  0E00               	movlw	0
 11070   002120  2258               	addwfc	(___flmul@prod+1)^0,f,c
 11071   002122  2259               	addwfc	(___flmul@prod+2)^0,f,c
 11072   002124  225A               	addwfc	(___flmul@prod+3)^0,f,c
 11073   002126  5048               	movf	___flmul@a^0,w,c
 11074   002128  0246               	mulwf	(___flmul@b+2)^0,c
 11075   00212A  CFF3 F05B          	movff	prodl,___flmul@temp
 11076   00212E  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11077   002132  505B               	movf	___flmul@temp^0,w,c
 11078   002134  2652               	addwf	___flmul@grs^0,f,c
 11079   002136  0E00               	movlw	0
 11080   002138  2253               	addwfc	(___flmul@grs+1)^0,f,c
 11081   00213A  2254               	addwfc	(___flmul@grs+2)^0,f,c
 11082   00213C  2255               	addwfc	(___flmul@grs+3)^0,f,c
 11083   00213E  505C               	movf	(___flmul@temp+1)^0,w,c
 11084   002140  2657               	addwf	___flmul@prod^0,f,c
 11085   002142  0E00               	movlw	0
 11086   002144  2258               	addwfc	(___flmul@prod+1)^0,f,c
 11087   002146  2259               	addwfc	(___flmul@prod+2)^0,f,c
 11088   002148  225A               	addwfc	(___flmul@prod+3)^0,f,c
 11089   00214A  C054  F055         	movff	___flmul@grs+2,___flmul@grs+3
 11090   00214E  C053  F054         	movff	___flmul@grs+1,___flmul@grs+2
 11091   002152  C052  F053         	movff	___flmul@grs,___flmul@grs+1
 11092   002156  6A52               	clrf	___flmul@grs^0,c
 11093   002158  5048               	movf	___flmul@a^0,w,c
 11094   00215A  0245               	mulwf	(___flmul@b+1)^0,c
 11095   00215C  CFF3 F05B          	movff	prodl,___flmul@temp
 11096   002160  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11097   002164  505B               	movf	___flmul@temp^0,w,c
 11098   002166  2652               	addwf	___flmul@grs^0,f,c
 11099   002168  505C               	movf	(___flmul@temp+1)^0,w,c
 11100   00216A  2253               	addwfc	(___flmul@grs+1)^0,f,c
 11101   00216C  0E00               	movlw	0
 11102   00216E  2254               	addwfc	(___flmul@grs+2)^0,f,c
 11103   002170  0E00               	movlw	0
 11104   002172  2255               	addwfc	(___flmul@grs+3)^0,f,c
 11105   002174  5049               	movf	(___flmul@a+1)^0,w,c
 11106   002176  0244               	mulwf	___flmul@b^0,c
 11107   002178  CFF3 F05B          	movff	prodl,___flmul@temp
 11108   00217C  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11109   002180  505B               	movf	___flmul@temp^0,w,c
 11110   002182  2652               	addwf	___flmul@grs^0,f,c
 11111   002184  505C               	movf	(___flmul@temp+1)^0,w,c
 11112   002186  2253               	addwfc	(___flmul@grs+1)^0,f,c
 11113   002188  0E00               	movlw	0
 11114   00218A  2254               	addwfc	(___flmul@grs+2)^0,f,c
 11115   00218C  0E00               	movlw	0
 11116   00218E  2255               	addwfc	(___flmul@grs+3)^0,f,c
 11117   002190  C054  F055         	movff	___flmul@grs+2,___flmul@grs+3
 11118   002194  C053  F054         	movff	___flmul@grs+1,___flmul@grs+2
 11119   002198  C052  F053         	movff	___flmul@grs,___flmul@grs+1
 11120   00219C  6A52               	clrf	___flmul@grs^0,c
 11121   00219E  5048               	movf	___flmul@a^0,w,c
 11122   0021A0  0244               	mulwf	___flmul@b^0,c
 11123   0021A2  CFF3 F05B          	movff	prodl,___flmul@temp
 11124   0021A6  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11125   0021AA  505B               	movf	___flmul@temp^0,w,c
 11126   0021AC  2652               	addwf	___flmul@grs^0,f,c
 11127   0021AE  505C               	movf	(___flmul@temp+1)^0,w,c
 11128   0021B0  2253               	addwfc	(___flmul@grs+1)^0,f,c
 11129   0021B2  0E00               	movlw	0
 11130   0021B4  2254               	addwfc	(___flmul@grs+2)^0,f,c
 11131   0021B6  0E00               	movlw	0
 11132   0021B8  2255               	addwfc	(___flmul@grs+3)^0,f,c
 11133   0021BA  504A               	movf	(___flmul@a+2)^0,w,c
 11134   0021BC  0245               	mulwf	(___flmul@b+1)^0,c
 11135   0021BE  CFF3 F05B          	movff	prodl,___flmul@temp
 11136   0021C2  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11137   0021C6  505B               	movf	___flmul@temp^0,w,c
 11138   0021C8  2657               	addwf	___flmul@prod^0,f,c
 11139   0021CA  505C               	movf	(___flmul@temp+1)^0,w,c
 11140   0021CC  2258               	addwfc	(___flmul@prod+1)^0,f,c
 11141   0021CE  0E00               	movlw	0
 11142   0021D0  2259               	addwfc	(___flmul@prod+2)^0,f,c
 11143   0021D2  0E00               	movlw	0
 11144   0021D4  225A               	addwfc	(___flmul@prod+3)^0,f,c
 11145   0021D6  5049               	movf	(___flmul@a+1)^0,w,c
 11146   0021D8  0246               	mulwf	(___flmul@b+2)^0,c
 11147   0021DA  CFF3 F05B          	movff	prodl,___flmul@temp
 11148   0021DE  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11149   0021E2  505B               	movf	___flmul@temp^0,w,c
 11150   0021E4  2657               	addwf	___flmul@prod^0,f,c
 11151   0021E6  505C               	movf	(___flmul@temp+1)^0,w,c
 11152   0021E8  2258               	addwfc	(___flmul@prod+1)^0,f,c
 11153   0021EA  0E00               	movlw	0
 11154   0021EC  2259               	addwfc	(___flmul@prod+2)^0,f,c
 11155   0021EE  0E00               	movlw	0
 11156   0021F0  225A               	addwfc	(___flmul@prod+3)^0,f,c
 11157   0021F2  504A               	movf	(___flmul@a+2)^0,w,c
 11158   0021F4  0246               	mulwf	(___flmul@b+2)^0,c
 11159   0021F6  CFF3 F05B          	movff	prodl,___flmul@temp
 11160   0021FA  CFF4 F05C          	movff	prodh,___flmul@temp+1
 11161   0021FE  505B               	movf	___flmul@temp^0,w,c
 11162   002200  6E4C               	movwf	??___flmul^0,c
 11163   002202  505C               	movf	(___flmul@temp+1)^0,w,c
 11164   002204  6E4D               	movwf	(??___flmul+1)^0,c
 11165   002206  6A4E               	clrf	(??___flmul+2)^0,c
 11166   002208  6A4F               	clrf	(??___flmul+3)^0,c
 11167   00220A  C04E  F04F         	movff	??___flmul+2,??___flmul+3
 11168   00220E  C04D  F04E         	movff	??___flmul+1,??___flmul+2
 11169   002212  C04C  F04D         	movff	??___flmul,??___flmul+1
 11170   002216  6A4C               	clrf	??___flmul^0,c
 11171   002218  504C               	movf	??___flmul^0,w,c
 11172   00221A  2657               	addwf	___flmul@prod^0,f,c
 11173   00221C  504D               	movf	(??___flmul+1)^0,w,c
 11174   00221E  2258               	addwfc	(___flmul@prod+1)^0,f,c
 11175   002220  504E               	movf	(??___flmul+2)^0,w,c
 11176   002222  2259               	addwfc	(___flmul@prod+2)^0,f,c
 11177   002224  504F               	movf	(??___flmul+3)^0,w,c
 11178   002226  225A               	addwfc	(___flmul@prod+3)^0,f,c
 11179   002228  C052  F04C         	movff	___flmul@grs,??___flmul
 11180   00222C  C053  F04D         	movff	___flmul@grs+1,??___flmul+1
 11181   002230  C054  F04E         	movff	___flmul@grs+2,??___flmul+2
 11182   002234  C055  F04F         	movff	___flmul@grs+3,??___flmul+3
 11183   002238  0E19               	movlw	25
 11184   00223A  EF24  F011         	goto	u11410
 11185   00223E                     u11415:
 11186   00223E  90D8               	bcf	status,0,c
 11187   002240  324F               	rrcf	(??___flmul+3)^0,f,c
 11188   002242  324E               	rrcf	(??___flmul+2)^0,f,c
 11189   002244  324D               	rrcf	(??___flmul+1)^0,f,c
 11190   002246  324C               	rrcf	??___flmul^0,f,c
 11191   002248                     u11410:
 11192   002248  2EE8               	decfsz	wreg,f,c
 11193   00224A  EF1F  F011         	goto	u11415
 11194   00224E  504C               	movf	??___flmul^0,w,c
 11195   002250  2657               	addwf	___flmul@prod^0,f,c
 11196   002252  504D               	movf	(??___flmul+1)^0,w,c
 11197   002254  2258               	addwfc	(___flmul@prod+1)^0,f,c
 11198   002256  504E               	movf	(??___flmul+2)^0,w,c
 11199   002258  2259               	addwfc	(___flmul@prod+2)^0,f,c
 11200   00225A  504F               	movf	(??___flmul+3)^0,w,c
 11201   00225C  225A               	addwfc	(___flmul@prod+3)^0,f,c
 11202   00225E  C054  F055         	movff	___flmul@grs+2,___flmul@grs+3
 11203   002262  C053  F054         	movff	___flmul@grs+1,___flmul@grs+2
 11204   002266  C052  F053         	movff	___flmul@grs,___flmul@grs+1
 11205   00226A  6A52               	clrf	___flmul@grs^0,c
 11206   00226C  5051               	movf	___flmul@aexp^0,w,c
 11207   00226E  C056  F04C         	movff	___flmul@bexp,??___flmul
 11208   002272  6A4D               	clrf	(??___flmul+1)^0,c
 11209   002274  264C               	addwf	??___flmul^0,f,c
 11210   002276  0E00               	movlw	0
 11211   002278  224D               	addwfc	(??___flmul+1)^0,f,c
 11212   00227A  0E82               	movlw	130
 11213   00227C  244C               	addwf	??___flmul^0,w,c
 11214   00227E  6E5B               	movwf	___flmul@temp^0,c
 11215   002280  0EFF               	movlw	255
 11216   002282  204D               	addwfc	(??___flmul+1)^0,w,c
 11217   002284  6E5C               	movwf	(___flmul@temp+1)^0,c
 11218   002286  EF5A  F011         	goto	l11284
 11219   00228A                     l11278:
 11220   00228A  90D8               	bcf	status,0,c
 11221   00228C  3657               	rlcf	___flmul@prod^0,f,c
 11222   00228E  3658               	rlcf	(___flmul@prod+1)^0,f,c
 11223   002290  3659               	rlcf	(___flmul@prod+2)^0,f,c
 11224   002292  365A               	rlcf	(___flmul@prod+3)^0,f,c
 11225   002294  AE55               	btfss	(___flmul@grs+3)^0,7,c
 11226   002296  EF4F  F011         	goto	u11421
 11227   00229A  EF51  F011         	goto	u11420
 11228   00229E                     u11421:
 11229   00229E  EF52  F011         	goto	l2387
 11230   0022A2                     u11420:
 11231   0022A2  8057               	bsf	___flmul@prod^0,0,c
 11232   0022A4                     l2387:
 11233   0022A4  90D8               	bcf	status,0,c
 11234   0022A6  3652               	rlcf	___flmul@grs^0,f,c
 11235   0022A8  3653               	rlcf	(___flmul@grs+1)^0,f,c
 11236   0022AA  3654               	rlcf	(___flmul@grs+2)^0,f,c
 11237   0022AC  3655               	rlcf	(___flmul@grs+3)^0,f,c
 11238   0022AE  065B               	decf	___flmul@temp^0,f,c
 11239   0022B0  A0D8               	btfss	status,0,c
 11240   0022B2  065C               	decf	(___flmul@temp+1)^0,f,c
 11241   0022B4                     l11284:
 11242   0022B4  AE59               	btfss	(___flmul@prod+2)^0,7,c
 11243   0022B6  EF5F  F011         	goto	u11431
 11244   0022BA  EF61  F011         	goto	u11430
 11245   0022BE                     u11431:
 11246   0022BE  EF45  F011         	goto	l11278
 11247   0022C2                     u11430:
 11248   0022C2  0E00               	movlw	0
 11249   0022C4  6E51               	movwf	___flmul@aexp^0,c
 11250   0022C6  AE55               	btfss	(___flmul@grs+3)^0,7,c
 11251   0022C8  EF68  F011         	goto	u11441
 11252   0022CC  EF6A  F011         	goto	u11440
 11253   0022D0                     u11441:
 11254   0022D0  EF8E  F011         	goto	l2389
 11255   0022D4                     u11440:
 11256   0022D4  0EFF               	movlw	255
 11257   0022D6  1452               	andwf	___flmul@grs^0,w,c
 11258   0022D8  6E4C               	movwf	??___flmul^0,c
 11259   0022DA  0EFF               	movlw	255
 11260   0022DC  1453               	andwf	(___flmul@grs+1)^0,w,c
 11261   0022DE  6E4D               	movwf	(??___flmul+1)^0,c
 11262   0022E0  0EFF               	movlw	255
 11263   0022E2  1454               	andwf	(___flmul@grs+2)^0,w,c
 11264   0022E4  6E4E               	movwf	(??___flmul+2)^0,c
 11265   0022E6  0E7F               	movlw	127
 11266   0022E8  1455               	andwf	(___flmul@grs+3)^0,w,c
 11267   0022EA  6E4F               	movwf	(??___flmul+3)^0,c
 11268   0022EC  504C               	movf	??___flmul^0,w,c
 11269   0022EE  104D               	iorwf	(??___flmul+1)^0,w,c
 11270   0022F0  104E               	iorwf	(??___flmul+2)^0,w,c
 11271   0022F2  104F               	iorwf	(??___flmul+3)^0,w,c
 11272   0022F4  B4D8               	btfsc	status,2,c
 11273   0022F6  EF7F  F011         	goto	u11451
 11274   0022FA  EF81  F011         	goto	u11450
 11275   0022FE                     u11451:
 11276   0022FE  EF85  F011         	goto	l2390
 11277   002302                     u11450:
 11278   002302                     l11292:
 11279   002302  0E01               	movlw	1
 11280   002304  6E51               	movwf	___flmul@aexp^0,c
 11281   002306  EF8E  F011         	goto	l2389
 11282   00230A                     l2390:
 11283   00230A  A057               	btfss	___flmul@prod^0,0,c
 11284   00230C  EF8A  F011         	goto	u11461
 11285   002310  EF8C  F011         	goto	u11460
 11286   002314                     u11461:
 11287   002314  EF8E  F011         	goto	l2389
 11288   002318                     u11460:
 11289   002318  EF81  F011         	goto	l11292
 11290   00231C                     l2389:
 11291   00231C  5051               	movf	___flmul@aexp^0,w,c
 11292   00231E  B4D8               	btfsc	status,2,c
 11293   002320  EF94  F011         	goto	u11471
 11294   002324  EF96  F011         	goto	u11470
 11295   002328                     u11471:
 11296   002328  EFBA  F011         	goto	l11304
 11297   00232C                     u11470:
 11298   00232C  0E01               	movlw	1
 11299   00232E  2657               	addwf	___flmul@prod^0,f,c
 11300   002330  0E00               	movlw	0
 11301   002332  2258               	addwfc	(___flmul@prod+1)^0,f,c
 11302   002334  2259               	addwfc	(___flmul@prod+2)^0,f,c
 11303   002336  225A               	addwfc	(___flmul@prod+3)^0,f,c
 11304   002338  A05A               	btfss	(___flmul@prod+3)^0,0,c
 11305   00233A  EFA1  F011         	goto	u11481
 11306   00233E  EFA3  F011         	goto	u11480
 11307   002342                     u11481:
 11308   002342  EFBA  F011         	goto	l11304
 11309   002346                     u11480:
 11310   002346  C057  F04C         	movff	___flmul@prod,??___flmul
 11311   00234A  C058  F04D         	movff	___flmul@prod+1,??___flmul+1
 11312   00234E  C059  F04E         	movff	___flmul@prod+2,??___flmul+2
 11313   002352  C05A  F04F         	movff	___flmul@prod+3,??___flmul+3
 11314   002356  344F               	rlcf	(??___flmul+3)^0,w,c
 11315   002358  324F               	rrcf	(??___flmul+3)^0,f,c
 11316   00235A  324E               	rrcf	(??___flmul+2)^0,f,c
 11317   00235C  324D               	rrcf	(??___flmul+1)^0,f,c
 11318   00235E  324C               	rrcf	??___flmul^0,f,c
 11319   002360  C04C  F057         	movff	??___flmul,___flmul@prod
 11320   002364  C04D  F058         	movff	??___flmul+1,___flmul@prod+1
 11321   002368  C04E  F059         	movff	??___flmul+2,___flmul@prod+2
 11322   00236C  C04F  F05A         	movff	??___flmul+3,___flmul@prod+3
 11323   002370  4A5B               	infsnz	___flmul@temp^0,f,c
 11324   002372  2A5C               	incf	(___flmul@temp+1)^0,f,c
 11325   002374                     l11304:
 11326   002374  BE5C               	btfsc	(___flmul@temp+1)^0,7,c
 11327   002376  EFC5  F011         	goto	u11491
 11328   00237A  505C               	movf	(___flmul@temp+1)^0,w,c
 11329   00237C  E108               	bnz	u11490
 11330   00237E  285B               	incf	___flmul@temp^0,w,c
 11331   002380  A0D8               	btfss	status,0,c
 11332   002382  EFC5  F011         	goto	u11491
 11333   002386  EFC7  F011         	goto	u11490
 11334   00238A                     u11491:
 11335   00238A  EFD1  F011         	goto	l11308
 11336   00238E                     u11490:
 11337   00238E  0E00               	movlw	0
 11338   002390  6E57               	movwf	___flmul@prod^0,c
 11339   002392  0E00               	movlw	0
 11340   002394  6E58               	movwf	(___flmul@prod+1)^0,c
 11341   002396  0E80               	movlw	128
 11342   002398  6E59               	movwf	(___flmul@prod+2)^0,c
 11343   00239A  0E7F               	movlw	127
 11344   00239C  6E5A               	movwf	(___flmul@prod+3)^0,c
 11345   00239E  EFFF  F011         	goto	l11320
 11346   0023A2                     l11308:
 11347   0023A2  BE5C               	btfsc	(___flmul@temp+1)^0,7,c
 11348   0023A4  EFDE  F011         	goto	u11500
 11349   0023A8  505C               	movf	(___flmul@temp+1)^0,w,c
 11350   0023AA  E106               	bnz	u11501
 11351   0023AC  045B               	decf	___flmul@temp^0,w,c
 11352   0023AE  B0D8               	btfsc	status,0,c
 11353   0023B0  EFDC  F011         	goto	u11501
 11354   0023B4  EFDE  F011         	goto	u11500
 11355   0023B8                     u11501:
 11356   0023B8  EFEA  F011         	goto	l2397
 11357   0023BC                     u11500:
 11358   0023BC  0E00               	movlw	0
 11359   0023BE  6E57               	movwf	___flmul@prod^0,c
 11360   0023C0  0E00               	movlw	0
 11361   0023C2  6E58               	movwf	(___flmul@prod+1)^0,c
 11362   0023C4  0E00               	movlw	0
 11363   0023C6  6E59               	movwf	(___flmul@prod+2)^0,c
 11364   0023C8  0E00               	movlw	0
 11365   0023CA  6E5A               	movwf	(___flmul@prod+3)^0,c
 11366   0023CC  0E00               	movlw	0
 11367   0023CE  6E50               	movwf	___flmul@sign^0,c
 11368   0023D0  EFFF  F011         	goto	l11320
 11369   0023D4                     l2397:
 11370   0023D4  C05B  F056         	movff	___flmul@temp,___flmul@bexp
 11371   0023D8  0EFF               	movlw	255
 11372   0023DA  1657               	andwf	___flmul@prod^0,f,c
 11373   0023DC  0EFF               	movlw	255
 11374   0023DE  1658               	andwf	(___flmul@prod+1)^0,f,c
 11375   0023E0  0E7F               	movlw	127
 11376   0023E2  1659               	andwf	(___flmul@prod+2)^0,f,c
 11377   0023E4  0E00               	movlw	0
 11378   0023E6  165A               	andwf	(___flmul@prod+3)^0,f,c
 11379   0023E8  A056               	btfss	___flmul@bexp^0,0,c
 11380   0023EA  EFF9  F011         	goto	u11511
 11381   0023EE  EFFB  F011         	goto	u11510
 11382   0023F2                     u11511:
 11383   0023F2  EFFC  F011         	goto	l11318
 11384   0023F6                     u11510:
 11385   0023F6  8E59               	bsf	(___flmul@prod+2)^0,7,c
 11386   0023F8                     l11318:
 11387   0023F8  90D8               	bcf	status,0,c
 11388   0023FA  3056               	rrcf	___flmul@bexp^0,w,c
 11389   0023FC  6E5A               	movwf	(___flmul@prod+3)^0,c
 11390   0023FE                     l11320:
 11391   0023FE  5050               	movf	___flmul@sign^0,w,c
 11392   002400  125A               	iorwf	(___flmul@prod+3)^0,f,c
 11393   002402  C057  F044         	movff	___flmul@prod,?___flmul
 11394   002406  C058  F045         	movff	___flmul@prod+1,?___flmul+1
 11395   00240A  C059  F046         	movff	___flmul@prod+2,?___flmul+2
 11396   00240E  C05A  F047         	movff	___flmul@prod+3,?___flmul+3
 11397   002412                     l2384:
 11398   002412  0012               	return		;funcret
 11399   002414                     __end_of___flmul:
 11400                           	callstack 0
 11401                           
 11402 ;; *************** function ___fldiv *****************
 11403 ;; Defined at:
 11404 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;  b               4   26[COMRAM] unsigned char 
 11407 ;;  a               4   30[COMRAM] unsigned char 
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;  grs             4   45[COMRAM] unsigned long 
 11410 ;;  rem             4   38[COMRAM] unsigned long 
 11411 ;;  new_exp         2   43[COMRAM] short 
 11412 ;;  aexp            1   50[COMRAM] unsigned char 
 11413 ;;  bexp            1   49[COMRAM] unsigned char 
 11414 ;;  sign            1   42[COMRAM] unsigned char 
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  4   26[COMRAM] unsigned char 
 11417 ;; Registers used:
 11418 ;;		wreg, status,2, status,0
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11427 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11428 ;;Total ram usage:       25 bytes
 11429 ;; Hardware stack levels used: 1
 11430 ;; Hardware stack levels required when called: 4
 11431 ;; This function calls:
 11432 ;;		Nothing
 11433 ;; This function is called by:
 11434 ;;		_ccp1_pwm_set_duty
 11435 ;;		_ccp2_pwm_set_duty
 11436 ;;		_I2C_Master_Mode_Clock_Configurations
 11437 ;;		_baudrate_calculate
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           
 11441                           	psect	text67
 11442   00282A                     __ptext67:
 11443                           	callstack 0
 11444   00282A                     ___fldiv:
 11445                           	callstack 23
 11446   00282A  501E               	movf	(___fldiv@b+3)^0,w,c
 11447   00282C  0B80               	andlw	128
 11448   00282E  6E2B               	movwf	___fldiv@sign^0,c
 11449   002830  501E               	movf	(___fldiv@b+3)^0,w,c
 11450   002832  241E               	addwf	(___fldiv@b+3)^0,w,c
 11451   002834  6E32               	movwf	___fldiv@bexp^0,c
 11452   002836  AE1D               	btfss	(___fldiv@b+2)^0,7,c
 11453   002838  EF20  F014         	goto	u9701
 11454   00283C  EF22  F014         	goto	u9700
 11455   002840                     u9701:
 11456   002840  EF23  F014         	goto	l9950
 11457   002844                     u9700:
 11458   002844  8032               	bsf	___fldiv@bexp^0,0,c
 11459   002846                     l9950:
 11460   002846  5032               	movf	___fldiv@bexp^0,w,c
 11461   002848  B4D8               	btfsc	status,2,c
 11462   00284A  EF29  F014         	goto	u9711
 11463   00284E  EF2B  F014         	goto	u9710
 11464   002852                     u9711:
 11465   002852  EF40  F014         	goto	l9960
 11466   002856                     u9710:
 11467   002856  2832               	incf	___fldiv@bexp^0,w,c
 11468   002858  A4D8               	btfss	status,2,c
 11469   00285A  EF31  F014         	goto	u9721
 11470   00285E  EF33  F014         	goto	u9720
 11471   002862                     u9721:
 11472   002862  EF3B  F014         	goto	l9956
 11473   002866                     u9720:
 11474   002866  0E00               	movlw	0
 11475   002868  6E1B               	movwf	___fldiv@b^0,c
 11476   00286A  0E00               	movlw	0
 11477   00286C  6E1C               	movwf	(___fldiv@b+1)^0,c
 11478   00286E  0E00               	movlw	0
 11479   002870  6E1D               	movwf	(___fldiv@b+2)^0,c
 11480   002872  0E00               	movlw	0
 11481   002874  6E1E               	movwf	(___fldiv@b+3)^0,c
 11482   002876                     l9956:
 11483   002876  8E1D               	bsf	(___fldiv@b+2)^0,7,c
 11484   002878  0E00               	movlw	0
 11485   00287A  6E1E               	movwf	(___fldiv@b+3)^0,c
 11486   00287C  EF48  F014         	goto	l9962
 11487   002880                     l9960:
 11488   002880  0E00               	movlw	0
 11489   002882  6E1B               	movwf	___fldiv@b^0,c
 11490   002884  0E00               	movlw	0
 11491   002886  6E1C               	movwf	(___fldiv@b+1)^0,c
 11492   002888  0E00               	movlw	0
 11493   00288A  6E1D               	movwf	(___fldiv@b+2)^0,c
 11494   00288C  0E00               	movlw	0
 11495   00288E  6E1E               	movwf	(___fldiv@b+3)^0,c
 11496   002890                     l9962:
 11497   002890  5022               	movf	(___fldiv@a+3)^0,w,c
 11498   002892  0B80               	andlw	128
 11499   002894  1A2B               	xorwf	___fldiv@sign^0,f,c
 11500   002896  5022               	movf	(___fldiv@a+3)^0,w,c
 11501   002898  2422               	addwf	(___fldiv@a+3)^0,w,c
 11502   00289A  6E33               	movwf	___fldiv@aexp^0,c
 11503   00289C  AE21               	btfss	(___fldiv@a+2)^0,7,c
 11504   00289E  EF53  F014         	goto	u9731
 11505   0028A2  EF55  F014         	goto	u9730
 11506   0028A6                     u9731:
 11507   0028A6  EF56  F014         	goto	l9970
 11508   0028AA                     u9730:
 11509   0028AA  8033               	bsf	___fldiv@aexp^0,0,c
 11510   0028AC                     l9970:
 11511   0028AC  5033               	movf	___fldiv@aexp^0,w,c
 11512   0028AE  B4D8               	btfsc	status,2,c
 11513   0028B0  EF5C  F014         	goto	u9741
 11514   0028B4  EF5E  F014         	goto	u9740
 11515   0028B8                     u9741:
 11516   0028B8  EF73  F014         	goto	l9980
 11517   0028BC                     u9740:
 11518   0028BC  2833               	incf	___fldiv@aexp^0,w,c
 11519   0028BE  A4D8               	btfss	status,2,c
 11520   0028C0  EF64  F014         	goto	u9751
 11521   0028C4  EF66  F014         	goto	u9750
 11522   0028C8                     u9751:
 11523   0028C8  EF6E  F014         	goto	l9976
 11524   0028CC                     u9750:
 11525   0028CC  0E00               	movlw	0
 11526   0028CE  6E1F               	movwf	___fldiv@a^0,c
 11527   0028D0  0E00               	movlw	0
 11528   0028D2  6E20               	movwf	(___fldiv@a+1)^0,c
 11529   0028D4  0E00               	movlw	0
 11530   0028D6  6E21               	movwf	(___fldiv@a+2)^0,c
 11531   0028D8  0E00               	movlw	0
 11532   0028DA  6E22               	movwf	(___fldiv@a+3)^0,c
 11533   0028DC                     l9976:
 11534   0028DC  8E21               	bsf	(___fldiv@a+2)^0,7,c
 11535   0028DE  0E00               	movlw	0
 11536   0028E0  6E22               	movwf	(___fldiv@a+3)^0,c
 11537   0028E2  EF7B  F014         	goto	l9982
 11538   0028E6                     l9980:
 11539   0028E6  0E00               	movlw	0
 11540   0028E8  6E1F               	movwf	___fldiv@a^0,c
 11541   0028EA  0E00               	movlw	0
 11542   0028EC  6E20               	movwf	(___fldiv@a+1)^0,c
 11543   0028EE  0E00               	movlw	0
 11544   0028F0  6E21               	movwf	(___fldiv@a+2)^0,c
 11545   0028F2  0E00               	movlw	0
 11546   0028F4  6E22               	movwf	(___fldiv@a+3)^0,c
 11547   0028F6                     l9982:
 11548   0028F6  501F               	movf	___fldiv@a^0,w,c
 11549   0028F8  1020               	iorwf	(___fldiv@a+1)^0,w,c
 11550   0028FA  1021               	iorwf	(___fldiv@a+2)^0,w,c
 11551   0028FC  1022               	iorwf	(___fldiv@a+3)^0,w,c
 11552   0028FE  A4D8               	btfss	status,2,c
 11553   002900  EF84  F014         	goto	u9761
 11554   002904  EF86  F014         	goto	u9760
 11555   002908                     u9761:
 11556   002908  EF9E  F014         	goto	l9994
 11557   00290C                     u9760:
 11558   00290C  0E00               	movlw	0
 11559   00290E  6E1B               	movwf	___fldiv@b^0,c
 11560   002910  0E00               	movlw	0
 11561   002912  6E1C               	movwf	(___fldiv@b+1)^0,c
 11562   002914  0E00               	movlw	0
 11563   002916  6E1D               	movwf	(___fldiv@b+2)^0,c
 11564   002918  0E00               	movlw	0
 11565   00291A  6E1E               	movwf	(___fldiv@b+3)^0,c
 11566   00291C  0E80               	movlw	128
 11567   00291E  121D               	iorwf	(___fldiv@b+2)^0,f,c
 11568   002920  0E7F               	movlw	127
 11569   002922  121E               	iorwf	(___fldiv@b+3)^0,f,c
 11570   002924                     l9988:
 11571   002924  502B               	movf	___fldiv@sign^0,w,c
 11572   002926  121E               	iorwf	(___fldiv@b+3)^0,f,c
 11573   002928  C01B  F01B         	movff	___fldiv@b,?___fldiv
 11574   00292C  C01C  F01C         	movff	___fldiv@b+1,?___fldiv+1
 11575   002930  C01D  F01D         	movff	___fldiv@b+2,?___fldiv+2
 11576   002934  C01E  F01E         	movff	___fldiv@b+3,?___fldiv+3
 11577   002938  EFE1  F015         	goto	l2348
 11578   00293C                     l9994:
 11579   00293C  5032               	movf	___fldiv@bexp^0,w,c
 11580   00293E  A4D8               	btfss	status,2,c
 11581   002940  EFA4  F014         	goto	u9771
 11582   002944  EFA6  F014         	goto	u9770
 11583   002948                     u9771:
 11584   002948  EFB0  F014         	goto	l10002
 11585   00294C                     u9770:
 11586   00294C  0E00               	movlw	0
 11587   00294E  6E1B               	movwf	?___fldiv^0,c
 11588   002950  0E00               	movlw	0
 11589   002952  6E1C               	movwf	(?___fldiv+1)^0,c
 11590   002954  0E00               	movlw	0
 11591   002956  6E1D               	movwf	(?___fldiv+2)^0,c
 11592   002958  0E00               	movlw	0
 11593   00295A  6E1E               	movwf	(?___fldiv+3)^0,c
 11594   00295C  EFE1  F015         	goto	l2348
 11595   002960                     l10002:
 11596   002960  5033               	movf	___fldiv@aexp^0,w,c
 11597   002962  C032  F023         	movff	___fldiv@bexp,??___fldiv
 11598   002966  6A24               	clrf	(??___fldiv+1)^0,c
 11599   002968  5E23               	subwf	??___fldiv^0,f,c
 11600   00296A  0E00               	movlw	0
 11601   00296C  5A24               	subwfb	(??___fldiv+1)^0,f,c
 11602   00296E  0E7F               	movlw	127
 11603   002970  2423               	addwf	??___fldiv^0,w,c
 11604   002972  6E2C               	movwf	___fldiv@new_exp^0,c
 11605   002974  0E00               	movlw	0
 11606   002976  2024               	addwfc	(??___fldiv+1)^0,w,c
 11607   002978  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
 11608   00297A  C01B  F027         	movff	___fldiv@b,___fldiv@rem
 11609   00297E  C01C  F028         	movff	___fldiv@b+1,___fldiv@rem+1
 11610   002982  C01D  F029         	movff	___fldiv@b+2,___fldiv@rem+2
 11611   002986  C01E  F02A         	movff	___fldiv@b+3,___fldiv@rem+3
 11612   00298A  0E00               	movlw	0
 11613   00298C  6E1B               	movwf	___fldiv@b^0,c
 11614   00298E  0E00               	movlw	0
 11615   002990  6E1C               	movwf	(___fldiv@b+1)^0,c
 11616   002992  0E00               	movlw	0
 11617   002994  6E1D               	movwf	(___fldiv@b+2)^0,c
 11618   002996  0E00               	movlw	0
 11619   002998  6E1E               	movwf	(___fldiv@b+3)^0,c
 11620   00299A  0E00               	movlw	0
 11621   00299C  6E2E               	movwf	___fldiv@grs^0,c
 11622   00299E  0E00               	movlw	0
 11623   0029A0  6E2F               	movwf	(___fldiv@grs+1)^0,c
 11624   0029A2  0E00               	movlw	0
 11625   0029A4  6E30               	movwf	(___fldiv@grs+2)^0,c
 11626   0029A6  0E00               	movlw	0
 11627   0029A8  6E31               	movwf	(___fldiv@grs+3)^0,c
 11628   0029AA  0E00               	movlw	0
 11629   0029AC  6E33               	movwf	___fldiv@aexp^0,c
 11630   0029AE  EF11  F015         	goto	l2350
 11631   0029B2                     l10012:
 11632   0029B2  5033               	movf	___fldiv@aexp^0,w,c
 11633   0029B4  B4D8               	btfsc	status,2,c
 11634   0029B6  EFDF  F014         	goto	u9781
 11635   0029BA  EFE1  F014         	goto	u9780
 11636   0029BE                     u9781:
 11637   0029BE  EFF8  F014         	goto	l10020
 11638   0029C2                     u9780:
 11639   0029C2  90D8               	bcf	status,0,c
 11640   0029C4  3627               	rlcf	___fldiv@rem^0,f,c
 11641   0029C6  3628               	rlcf	(___fldiv@rem+1)^0,f,c
 11642   0029C8  3629               	rlcf	(___fldiv@rem+2)^0,f,c
 11643   0029CA  362A               	rlcf	(___fldiv@rem+3)^0,f,c
 11644   0029CC  90D8               	bcf	status,0,c
 11645   0029CE  361B               	rlcf	___fldiv@b^0,f,c
 11646   0029D0  361C               	rlcf	(___fldiv@b+1)^0,f,c
 11647   0029D2  361D               	rlcf	(___fldiv@b+2)^0,f,c
 11648   0029D4  361E               	rlcf	(___fldiv@b+3)^0,f,c
 11649   0029D6  AE31               	btfss	(___fldiv@grs+3)^0,7,c
 11650   0029D8  EFF0  F014         	goto	u9791
 11651   0029DC  EFF2  F014         	goto	u9790
 11652   0029E0                     u9791:
 11653   0029E0  EFF3  F014         	goto	l2353
 11654   0029E4                     u9790:
 11655   0029E4  801B               	bsf	___fldiv@b^0,0,c
 11656   0029E6                     l2353:
 11657   0029E6  90D8               	bcf	status,0,c
 11658   0029E8  362E               	rlcf	___fldiv@grs^0,f,c
 11659   0029EA  362F               	rlcf	(___fldiv@grs+1)^0,f,c
 11660   0029EC  3630               	rlcf	(___fldiv@grs+2)^0,f,c
 11661   0029EE  3631               	rlcf	(___fldiv@grs+3)^0,f,c
 11662   0029F0                     l10020:
 11663   0029F0  501F               	movf	___fldiv@a^0,w,c
 11664   0029F2  5C27               	subwf	___fldiv@rem^0,w,c
 11665   0029F4  5020               	movf	(___fldiv@a+1)^0,w,c
 11666   0029F6  5828               	subwfb	(___fldiv@rem+1)^0,w,c
 11667   0029F8  5021               	movf	(___fldiv@a+2)^0,w,c
 11668   0029FA  5829               	subwfb	(___fldiv@rem+2)^0,w,c
 11669   0029FC  5022               	movf	(___fldiv@a+3)^0,w,c
 11670   0029FE  582A               	subwfb	(___fldiv@rem+3)^0,w,c
 11671   002A00  A0D8               	btfss	status,0,c
 11672   002A02  EF05  F015         	goto	u9801
 11673   002A06  EF07  F015         	goto	u9800
 11674   002A0A                     u9801:
 11675   002A0A  EF10  F015         	goto	l10026
 11676   002A0E                     u9800:
 11677   002A0E  8C31               	bsf	(___fldiv@grs+3)^0,6,c
 11678   002A10  501F               	movf	___fldiv@a^0,w,c
 11679   002A12  5E27               	subwf	___fldiv@rem^0,f,c
 11680   002A14  5020               	movf	(___fldiv@a+1)^0,w,c
 11681   002A16  5A28               	subwfb	(___fldiv@rem+1)^0,f,c
 11682   002A18  5021               	movf	(___fldiv@a+2)^0,w,c
 11683   002A1A  5A29               	subwfb	(___fldiv@rem+2)^0,f,c
 11684   002A1C  5022               	movf	(___fldiv@a+3)^0,w,c
 11685   002A1E  5A2A               	subwfb	(___fldiv@rem+3)^0,f,c
 11686   002A20                     l10026:
 11687   002A20  2A33               	incf	___fldiv@aexp^0,f,c
 11688   002A22                     l2350:
 11689   002A22  0E19               	movlw	25
 11690   002A24  6433               	cpfsgt	___fldiv@aexp^0,c
 11691   002A26  EF17  F015         	goto	u9811
 11692   002A2A  EF19  F015         	goto	u9810
 11693   002A2E                     u9811:
 11694   002A2E  EFD9  F014         	goto	l10012
 11695   002A32                     u9810:
 11696   002A32  5027               	movf	___fldiv@rem^0,w,c
 11697   002A34  1028               	iorwf	(___fldiv@rem+1)^0,w,c
 11698   002A36  1029               	iorwf	(___fldiv@rem+2)^0,w,c
 11699   002A38  102A               	iorwf	(___fldiv@rem+3)^0,w,c
 11700   002A3A  B4D8               	btfsc	status,2,c
 11701   002A3C  EF22  F015         	goto	u9821
 11702   002A40  EF24  F015         	goto	u9820
 11703   002A44                     u9821:
 11704   002A44  EF3C  F015         	goto	l10038
 11705   002A48                     u9820:
 11706   002A48  802E               	bsf	___fldiv@grs^0,0,c
 11707   002A4A  EF3C  F015         	goto	l10038
 11708   002A4E                     l10032:
 11709   002A4E  90D8               	bcf	status,0,c
 11710   002A50  361B               	rlcf	___fldiv@b^0,f,c
 11711   002A52  361C               	rlcf	(___fldiv@b+1)^0,f,c
 11712   002A54  361D               	rlcf	(___fldiv@b+2)^0,f,c
 11713   002A56  361E               	rlcf	(___fldiv@b+3)^0,f,c
 11714   002A58  AE31               	btfss	(___fldiv@grs+3)^0,7,c
 11715   002A5A  EF31  F015         	goto	u9831
 11716   002A5E  EF33  F015         	goto	u9830
 11717   002A62                     u9831:
 11718   002A62  EF34  F015         	goto	l2359
 11719   002A66                     u9830:
 11720   002A66  801B               	bsf	___fldiv@b^0,0,c
 11721   002A68                     l2359:
 11722   002A68  90D8               	bcf	status,0,c
 11723   002A6A  362E               	rlcf	___fldiv@grs^0,f,c
 11724   002A6C  362F               	rlcf	(___fldiv@grs+1)^0,f,c
 11725   002A6E  3630               	rlcf	(___fldiv@grs+2)^0,f,c
 11726   002A70  3631               	rlcf	(___fldiv@grs+3)^0,f,c
 11727   002A72  062C               	decf	___fldiv@new_exp^0,f,c
 11728   002A74  A0D8               	btfss	status,0,c
 11729   002A76  062D               	decf	(___fldiv@new_exp+1)^0,f,c
 11730   002A78                     l10038:
 11731   002A78  AE1D               	btfss	(___fldiv@b+2)^0,7,c
 11732   002A7A  EF41  F015         	goto	u9841
 11733   002A7E  EF43  F015         	goto	u9840
 11734   002A82                     u9841:
 11735   002A82  EF27  F015         	goto	l10032
 11736   002A86                     u9840:
 11737   002A86  0E00               	movlw	0
 11738   002A88  6E33               	movwf	___fldiv@aexp^0,c
 11739   002A8A  AE31               	btfss	(___fldiv@grs+3)^0,7,c
 11740   002A8C  EF4A  F015         	goto	u9851
 11741   002A90  EF4C  F015         	goto	u9850
 11742   002A94                     u9851:
 11743   002A94  EF70  F015         	goto	l2361
 11744   002A98                     u9850:
 11745   002A98  0EFF               	movlw	255
 11746   002A9A  142E               	andwf	___fldiv@grs^0,w,c
 11747   002A9C  6E23               	movwf	??___fldiv^0,c
 11748   002A9E  0EFF               	movlw	255
 11749   002AA0  142F               	andwf	(___fldiv@grs+1)^0,w,c
 11750   002AA2  6E24               	movwf	(??___fldiv+1)^0,c
 11751   002AA4  0EFF               	movlw	255
 11752   002AA6  1430               	andwf	(___fldiv@grs+2)^0,w,c
 11753   002AA8  6E25               	movwf	(??___fldiv+2)^0,c
 11754   002AAA  0E7F               	movlw	127
 11755   002AAC  1431               	andwf	(___fldiv@grs+3)^0,w,c
 11756   002AAE  6E26               	movwf	(??___fldiv+3)^0,c
 11757   002AB0  5023               	movf	??___fldiv^0,w,c
 11758   002AB2  1024               	iorwf	(??___fldiv+1)^0,w,c
 11759   002AB4  1025               	iorwf	(??___fldiv+2)^0,w,c
 11760   002AB6  1026               	iorwf	(??___fldiv+3)^0,w,c
 11761   002AB8  B4D8               	btfsc	status,2,c
 11762   002ABA  EF61  F015         	goto	u9861
 11763   002ABE  EF63  F015         	goto	u9860
 11764   002AC2                     u9861:
 11765   002AC2  EF67  F015         	goto	l2362
 11766   002AC6                     u9860:
 11767   002AC6                     l10046:
 11768   002AC6  0E01               	movlw	1
 11769   002AC8  6E33               	movwf	___fldiv@aexp^0,c
 11770   002ACA  EF70  F015         	goto	l2361
 11771   002ACE                     l2362:
 11772   002ACE  A01B               	btfss	___fldiv@b^0,0,c
 11773   002AD0  EF6C  F015         	goto	u9871
 11774   002AD4  EF6E  F015         	goto	u9870
 11775   002AD8                     u9871:
 11776   002AD8  EF70  F015         	goto	l2361
 11777   002ADC                     u9870:
 11778   002ADC  EF63  F015         	goto	l10046
 11779   002AE0                     l2361:
 11780   002AE0  5033               	movf	___fldiv@aexp^0,w,c
 11781   002AE2  B4D8               	btfsc	status,2,c
 11782   002AE4  EF76  F015         	goto	u9881
 11783   002AE8  EF78  F015         	goto	u9880
 11784   002AEC                     u9881:
 11785   002AEC  EF9C  F015         	goto	l10058
 11786   002AF0                     u9880:
 11787   002AF0  0E01               	movlw	1
 11788   002AF2  261B               	addwf	___fldiv@b^0,f,c
 11789   002AF4  0E00               	movlw	0
 11790   002AF6  221C               	addwfc	(___fldiv@b+1)^0,f,c
 11791   002AF8  221D               	addwfc	(___fldiv@b+2)^0,f,c
 11792   002AFA  221E               	addwfc	(___fldiv@b+3)^0,f,c
 11793   002AFC  A01E               	btfss	(___fldiv@b+3)^0,0,c
 11794   002AFE  EF83  F015         	goto	u9891
 11795   002B02  EF85  F015         	goto	u9890
 11796   002B06                     u9891:
 11797   002B06  EF9C  F015         	goto	l10058
 11798   002B0A                     u9890:
 11799   002B0A  C01B  F023         	movff	___fldiv@b,??___fldiv
 11800   002B0E  C01C  F024         	movff	___fldiv@b+1,??___fldiv+1
 11801   002B12  C01D  F025         	movff	___fldiv@b+2,??___fldiv+2
 11802   002B16  C01E  F026         	movff	___fldiv@b+3,??___fldiv+3
 11803   002B1A  3426               	rlcf	(??___fldiv+3)^0,w,c
 11804   002B1C  3226               	rrcf	(??___fldiv+3)^0,f,c
 11805   002B1E  3225               	rrcf	(??___fldiv+2)^0,f,c
 11806   002B20  3224               	rrcf	(??___fldiv+1)^0,f,c
 11807   002B22  3223               	rrcf	??___fldiv^0,f,c
 11808   002B24  C023  F01B         	movff	??___fldiv,___fldiv@b
 11809   002B28  C024  F01C         	movff	??___fldiv+1,___fldiv@b+1
 11810   002B2C  C025  F01D         	movff	??___fldiv+2,___fldiv@b+2
 11811   002B30  C026  F01E         	movff	??___fldiv+3,___fldiv@b+3
 11812   002B34  4A2C               	infsnz	___fldiv@new_exp^0,f,c
 11813   002B36  2A2D               	incf	(___fldiv@new_exp+1)^0,f,c
 11814   002B38                     l10058:
 11815   002B38  BE2D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11816   002B3A  EFA7  F015         	goto	u9901
 11817   002B3E  502D               	movf	(___fldiv@new_exp+1)^0,w,c
 11818   002B40  E108               	bnz	u9900
 11819   002B42  282C               	incf	___fldiv@new_exp^0,w,c
 11820   002B44  A0D8               	btfss	status,0,c
 11821   002B46  EFA7  F015         	goto	u9901
 11822   002B4A  EFA9  F015         	goto	u9900
 11823   002B4E                     u9901:
 11824   002B4E  EFB4  F015         	goto	l10062
 11825   002B52                     u9900:
 11826   002B52  0E00               	movlw	0
 11827   002B54  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
 11828   002B56  682C               	setf	___fldiv@new_exp^0,c
 11829   002B58  0E00               	movlw	0
 11830   002B5A  6E1B               	movwf	___fldiv@b^0,c
 11831   002B5C  0E00               	movlw	0
 11832   002B5E  6E1C               	movwf	(___fldiv@b+1)^0,c
 11833   002B60  0E00               	movlw	0
 11834   002B62  6E1D               	movwf	(___fldiv@b+2)^0,c
 11835   002B64  0E00               	movlw	0
 11836   002B66  6E1E               	movwf	(___fldiv@b+3)^0,c
 11837   002B68                     l10062:
 11838   002B68  BE2D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11839   002B6A  EFC1  F015         	goto	u9910
 11840   002B6E  502D               	movf	(___fldiv@new_exp+1)^0,w,c
 11841   002B70  E106               	bnz	u9911
 11842   002B72  042C               	decf	___fldiv@new_exp^0,w,c
 11843   002B74  B0D8               	btfsc	status,0,c
 11844   002B76  EFBF  F015         	goto	u9911
 11845   002B7A  EFC1  F015         	goto	u9910
 11846   002B7E                     u9911:
 11847   002B7E  EFCF  F015         	goto	l10066
 11848   002B82                     u9910:
 11849   002B82  0E00               	movlw	0
 11850   002B84  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
 11851   002B86  0E00               	movlw	0
 11852   002B88  6E2C               	movwf	___fldiv@new_exp^0,c
 11853   002B8A  0E00               	movlw	0
 11854   002B8C  6E1B               	movwf	___fldiv@b^0,c
 11855   002B8E  0E00               	movlw	0
 11856   002B90  6E1C               	movwf	(___fldiv@b+1)^0,c
 11857   002B92  0E00               	movlw	0
 11858   002B94  6E1D               	movwf	(___fldiv@b+2)^0,c
 11859   002B96  0E00               	movlw	0
 11860   002B98  6E1E               	movwf	(___fldiv@b+3)^0,c
 11861   002B9A  0E00               	movlw	0
 11862   002B9C  6E2B               	movwf	___fldiv@sign^0,c
 11863   002B9E                     l10066:
 11864   002B9E  C02C  F032         	movff	___fldiv@new_exp,___fldiv@bexp
 11865   002BA2  A032               	btfss	___fldiv@bexp^0,0,c
 11866   002BA4  EFD6  F015         	goto	u9921
 11867   002BA8  EFD8  F015         	goto	u9920
 11868   002BAC                     u9921:
 11869   002BAC  EFDB  F015         	goto	l10072
 11870   002BB0                     u9920:
 11871   002BB0  8E1D               	bsf	(___fldiv@b+2)^0,7,c
 11872   002BB2  EFDC  F015         	goto	l10074
 11873   002BB6                     l10072:
 11874   002BB6  9E1D               	bcf	(___fldiv@b+2)^0,7,c
 11875   002BB8                     l10074:
 11876   002BB8  90D8               	bcf	status,0,c
 11877   002BBA  3032               	rrcf	___fldiv@bexp^0,w,c
 11878   002BBC  6E1E               	movwf	(___fldiv@b+3)^0,c
 11879   002BBE  EF92  F014         	goto	l9988
 11880   002BC2                     l2348:
 11881   002BC2  0012               	return		;funcret
 11882   002BC4                     __end_of___fldiv:
 11883                           	callstack 0
 11884                           
 11885 ;; *************** function ___fladd *****************
 11886 ;; Defined at:
 11887 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;  b               4   51[COMRAM] unsigned char 
 11890 ;;  a               4   55[COMRAM] unsigned char 
 11891 ;; Auto vars:     Size  Location     Type
 11892 ;;  grs             1   66[COMRAM] unsigned char 
 11893 ;;  bexp            1   65[COMRAM] unsigned char 
 11894 ;;  aexp            1   64[COMRAM] unsigned char 
 11895 ;;  signs           1   63[COMRAM] unsigned char 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  4   51[COMRAM] unsigned char 
 11898 ;; Registers used:
 11899 ;;		wreg, status,2, status,0
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11905 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11906 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11908 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11909 ;;Total ram usage:       16 bytes
 11910 ;; Hardware stack levels used: 1
 11911 ;; Hardware stack levels required when called: 4
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_ccp1_pwm_set_duty
 11916 ;;		_ccp2_pwm_set_duty
 11917 ;;		_I2C_Master_Mode_Clock_Configurations
 11918 ;;		_baudrate_calculate
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           	psect	text68
 11923   001B2A                     __ptext68:
 11924                           	callstack 0
 11925   001B2A                     ___fladd:
 11926                           	callstack 23
 11927   001B2A  5037               	movf	(___fladd@b+3)^0,w,c
 11928   001B2C  0B80               	andlw	128
 11929   001B2E  6E40               	movwf	___fladd@signs^0,c
 11930   001B30  5037               	movf	(___fladd@b+3)^0,w,c
 11931   001B32  2437               	addwf	(___fladd@b+3)^0,w,c
 11932   001B34  6E42               	movwf	___fladd@bexp^0,c
 11933   001B36  AE36               	btfss	(___fladd@b+2)^0,7,c
 11934   001B38  EFA0  F00D         	goto	u9311
 11935   001B3C  EFA2  F00D         	goto	u9310
 11936   001B40                     u9311:
 11937   001B40  EFA3  F00D         	goto	l9748
 11938   001B44                     u9310:
 11939   001B44  8042               	bsf	___fladd@bexp^0,0,c
 11940   001B46                     l9748:
 11941   001B46  5042               	movf	___fladd@bexp^0,w,c
 11942   001B48  B4D8               	btfsc	status,2,c
 11943   001B4A  EFA9  F00D         	goto	u9321
 11944   001B4E  EFAB  F00D         	goto	u9320
 11945   001B52                     u9321:
 11946   001B52  EFC0  F00D         	goto	l9758
 11947   001B56                     u9320:
 11948   001B56  2842               	incf	___fladd@bexp^0,w,c
 11949   001B58  A4D8               	btfss	status,2,c
 11950   001B5A  EFB1  F00D         	goto	u9331
 11951   001B5E  EFB3  F00D         	goto	u9330
 11952   001B62                     u9331:
 11953   001B62  EFBB  F00D         	goto	l9754
 11954   001B66                     u9330:
 11955   001B66  0E00               	movlw	0
 11956   001B68  6E34               	movwf	___fladd@b^0,c
 11957   001B6A  0E00               	movlw	0
 11958   001B6C  6E35               	movwf	(___fladd@b+1)^0,c
 11959   001B6E  0E00               	movlw	0
 11960   001B70  6E36               	movwf	(___fladd@b+2)^0,c
 11961   001B72  0E00               	movlw	0
 11962   001B74  6E37               	movwf	(___fladd@b+3)^0,c
 11963   001B76                     l9754:
 11964   001B76  8E36               	bsf	(___fladd@b+2)^0,7,c
 11965   001B78  0E00               	movlw	0
 11966   001B7A  6E37               	movwf	(___fladd@b+3)^0,c
 11967   001B7C  EFC8  F00D         	goto	l9760
 11968   001B80                     l9758:
 11969   001B80  0E00               	movlw	0
 11970   001B82  6E34               	movwf	___fladd@b^0,c
 11971   001B84  0E00               	movlw	0
 11972   001B86  6E35               	movwf	(___fladd@b+1)^0,c
 11973   001B88  0E00               	movlw	0
 11974   001B8A  6E36               	movwf	(___fladd@b+2)^0,c
 11975   001B8C  0E00               	movlw	0
 11976   001B8E  6E37               	movwf	(___fladd@b+3)^0,c
 11977   001B90                     l9760:
 11978   001B90  503B               	movf	(___fladd@a+3)^0,w,c
 11979   001B92  0B80               	andlw	128
 11980   001B94  6E41               	movwf	___fladd@aexp^0,c
 11981   001B96  5040               	movf	___fladd@signs^0,w,c
 11982   001B98  1841               	xorwf	___fladd@aexp^0,w,c
 11983   001B9A  B4D8               	btfsc	status,2,c
 11984   001B9C  EFD2  F00D         	goto	u9341
 11985   001BA0  EFD4  F00D         	goto	u9340
 11986   001BA4                     u9341:
 11987   001BA4  EFD5  F00D         	goto	l9766
 11988   001BA8                     u9340:
 11989   001BA8  8C40               	bsf	___fladd@signs^0,6,c
 11990   001BAA                     l9766:
 11991   001BAA  503B               	movf	(___fladd@a+3)^0,w,c
 11992   001BAC  243B               	addwf	(___fladd@a+3)^0,w,c
 11993   001BAE  6E41               	movwf	___fladd@aexp^0,c
 11994   001BB0  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11995   001BB2  EFDD  F00D         	goto	u9351
 11996   001BB6  EFDF  F00D         	goto	u9350
 11997   001BBA                     u9351:
 11998   001BBA  EFE0  F00D         	goto	l9772
 11999   001BBE                     u9350:
 12000   001BBE  8041               	bsf	___fladd@aexp^0,0,c
 12001   001BC0                     l9772:
 12002   001BC0  5041               	movf	___fladd@aexp^0,w,c
 12003   001BC2  B4D8               	btfsc	status,2,c
 12004   001BC4  EFE6  F00D         	goto	u9361
 12005   001BC8  EFE8  F00D         	goto	u9360
 12006   001BCC                     u9361:
 12007   001BCC  EFFD  F00D         	goto	l9782
 12008   001BD0                     u9360:
 12009   001BD0  2841               	incf	___fladd@aexp^0,w,c
 12010   001BD2  A4D8               	btfss	status,2,c
 12011   001BD4  EFEE  F00D         	goto	u9371
 12012   001BD8  EFF0  F00D         	goto	u9370
 12013   001BDC                     u9371:
 12014   001BDC  EFF8  F00D         	goto	l9778
 12015   001BE0                     u9370:
 12016   001BE0  0E00               	movlw	0
 12017   001BE2  6E38               	movwf	___fladd@a^0,c
 12018   001BE4  0E00               	movlw	0
 12019   001BE6  6E39               	movwf	(___fladd@a+1)^0,c
 12020   001BE8  0E00               	movlw	0
 12021   001BEA  6E3A               	movwf	(___fladd@a+2)^0,c
 12022   001BEC  0E00               	movlw	0
 12023   001BEE  6E3B               	movwf	(___fladd@a+3)^0,c
 12024   001BF0                     l9778:
 12025   001BF0  8E3A               	bsf	(___fladd@a+2)^0,7,c
 12026   001BF2  0E00               	movlw	0
 12027   001BF4  6E3B               	movwf	(___fladd@a+3)^0,c
 12028   001BF6  EF05  F00E         	goto	l9784
 12029   001BFA                     l9782:
 12030   001BFA  0E00               	movlw	0
 12031   001BFC  6E38               	movwf	___fladd@a^0,c
 12032   001BFE  0E00               	movlw	0
 12033   001C00  6E39               	movwf	(___fladd@a+1)^0,c
 12034   001C02  0E00               	movlw	0
 12035   001C04  6E3A               	movwf	(___fladd@a+2)^0,c
 12036   001C06  0E00               	movlw	0
 12037   001C08  6E3B               	movwf	(___fladd@a+3)^0,c
 12038   001C0A                     l9784:
 12039   001C0A  5042               	movf	___fladd@bexp^0,w,c
 12040   001C0C  5C41               	subwf	___fladd@aexp^0,w,c
 12041   001C0E  B0D8               	btfsc	status,0,c
 12042   001C10  EF0C  F00E         	goto	u9381
 12043   001C14  EF0E  F00E         	goto	u9380
 12044   001C18                     u9381:
 12045   001C18  EF35  F00E         	goto	l9820
 12046   001C1C                     u9380:
 12047   001C1C  AC40               	btfss	___fladd@signs^0,6,c
 12048   001C1E  EF13  F00E         	goto	u9391
 12049   001C22  EF15  F00E         	goto	u9390
 12050   001C26                     u9391:
 12051   001C26  EF17  F00E         	goto	l9790
 12052   001C2A                     u9390:
 12053   001C2A  0E80               	movlw	128
 12054   001C2C  1A40               	xorwf	___fladd@signs^0,f,c
 12055   001C2E                     l9790:
 12056   001C2E  C042  F043         	movff	___fladd@bexp,___fladd@grs
 12057   001C32  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 12058   001C36  C043  F041         	movff	___fladd@grs,___fladd@aexp
 12059   001C3A  C034  F043         	movff	___fladd@b,___fladd@grs
 12060   001C3E  C038  F034         	movff	___fladd@a,___fladd@b
 12061   001C42  C043  F038         	movff	___fladd@grs,___fladd@a
 12062   001C46  C035  F043         	movff	___fladd@b+1,___fladd@grs
 12063   001C4A  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 12064   001C4E  C043  F039         	movff	___fladd@grs,___fladd@a+1
 12065   001C52  C036  F043         	movff	___fladd@b+2,___fladd@grs
 12066   001C56  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 12067   001C5A  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 12068   001C5E  C037  F043         	movff	___fladd@b+3,___fladd@grs
 12069   001C62  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 12070   001C66  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 12071   001C6A                     l9820:
 12072   001C6A  0E00               	movlw	0
 12073   001C6C  6E43               	movwf	___fladd@grs^0,c
 12074   001C6E  5042               	movf	___fladd@bexp^0,w,c
 12075   001C70  C041  F03C         	movff	___fladd@aexp,??___fladd
 12076   001C74  6A3D               	clrf	(??___fladd+1)^0,c
 12077   001C76  5E3C               	subwf	??___fladd^0,f,c
 12078   001C78  0E00               	movlw	0
 12079   001C7A  5A3D               	subwfb	(??___fladd+1)^0,f,c
 12080   001C7C  BE3D               	btfsc	(??___fladd+1)^0,7,c
 12081   001C7E  EF4A  F00E         	goto	u9401
 12082   001C82  503D               	movf	(??___fladd+1)^0,w,c
 12083   001C84  E109               	bnz	u9400
 12084   001C86  0E1A               	movlw	26
 12085   001C88  5C3C               	subwf	??___fladd^0,w,c
 12086   001C8A  A0D8               	btfss	status,0,c
 12087   001C8C  EF4A  F00E         	goto	u9401
 12088   001C90  EF4C  F00E         	goto	u9400
 12089   001C94                     u9401:
 12090   001C94  EF83  F00E         	goto	l2295
 12091   001C98                     u9400:
 12092   001C98  5034               	movf	___fladd@b^0,w,c
 12093   001C9A  1035               	iorwf	(___fladd@b+1)^0,w,c
 12094   001C9C  1036               	iorwf	(___fladd@b+2)^0,w,c
 12095   001C9E  1037               	iorwf	(___fladd@b+3)^0,w,c
 12096   001CA0  A4D8               	btfss	status,2,c
 12097   001CA2  EF55  F00E         	goto	u9411
 12098   001CA6  EF58  F00E         	goto	u9410
 12099   001CAA                     u9411:
 12100   001CAA  0E01               	movlw	1
 12101   001CAC  EF59  F00E         	goto	u9420
 12102   001CB0                     u9410:
 12103   001CB0  0E00               	movlw	0
 12104   001CB2                     u9420:
 12105   001CB2  6E43               	movwf	___fladd@grs^0,c
 12106   001CB4  0E00               	movlw	0
 12107   001CB6  6E34               	movwf	___fladd@b^0,c
 12108   001CB8  0E00               	movlw	0
 12109   001CBA  6E35               	movwf	(___fladd@b+1)^0,c
 12110   001CBC  0E00               	movlw	0
 12111   001CBE  6E36               	movwf	(___fladd@b+2)^0,c
 12112   001CC0  0E00               	movlw	0
 12113   001CC2  6E37               	movwf	(___fladd@b+3)^0,c
 12114   001CC4  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 12115   001CC8  EF8C  F00E         	goto	l2294
 12116   001CCC                     l2296:
 12117   001CCC  A043               	btfss	___fladd@grs^0,0,c
 12118   001CCE  EF6B  F00E         	goto	u9431
 12119   001CD2  EF6D  F00E         	goto	u9430
 12120   001CD6                     u9431:
 12121   001CD6  EF73  F00E         	goto	l9832
 12122   001CDA                     u9430:
 12123   001CDA  90D8               	bcf	status,0,c
 12124   001CDC  3043               	rrcf	___fladd@grs^0,w,c
 12125   001CDE  0901               	iorlw	1
 12126   001CE0  6E43               	movwf	___fladd@grs^0,c
 12127   001CE2  EF75  F00E         	goto	l9834
 12128   001CE6                     l9832:
 12129   001CE6  90D8               	bcf	status,0,c
 12130   001CE8  3243               	rrcf	___fladd@grs^0,f,c
 12131   001CEA                     l9834:
 12132   001CEA  A034               	btfss	___fladd@b^0,0,c
 12133   001CEC  EF7A  F00E         	goto	u9441
 12134   001CF0  EF7C  F00E         	goto	u9440
 12135   001CF4                     u9441:
 12136   001CF4  EF7D  F00E         	goto	l9838
 12137   001CF8                     u9440:
 12138   001CF8  8E43               	bsf	___fladd@grs^0,7,c
 12139   001CFA                     l9838:
 12140   001CFA  3437               	rlcf	(___fladd@b+3)^0,w,c
 12141   001CFC  3237               	rrcf	(___fladd@b+3)^0,f,c
 12142   001CFE  3236               	rrcf	(___fladd@b+2)^0,f,c
 12143   001D00  3235               	rrcf	(___fladd@b+1)^0,f,c
 12144   001D02  3234               	rrcf	___fladd@b^0,f,c
 12145   001D04  2A42               	incf	___fladd@bexp^0,f,c
 12146   001D06                     l2295:
 12147   001D06  5041               	movf	___fladd@aexp^0,w,c
 12148   001D08  5C42               	subwf	___fladd@bexp^0,w,c
 12149   001D0A  A0D8               	btfss	status,0,c
 12150   001D0C  EF8A  F00E         	goto	u9451
 12151   001D10  EF8C  F00E         	goto	u9450
 12152   001D14                     u9451:
 12153   001D14  EF66  F00E         	goto	l2296
 12154   001D18                     u9450:
 12155   001D18                     l2294:
 12156   001D18  BC40               	btfsc	___fladd@signs^0,6,c
 12157   001D1A  EF91  F00E         	goto	u9461
 12158   001D1E  EF93  F00E         	goto	u9460
 12159   001D22                     u9461:
 12160   001D22  EFD3  F00E         	goto	l9866
 12161   001D26                     u9460:
 12162   001D26  5042               	movf	___fladd@bexp^0,w,c
 12163   001D28  A4D8               	btfss	status,2,c
 12164   001D2A  EF99  F00E         	goto	u9471
 12165   001D2E  EF9B  F00E         	goto	u9470
 12166   001D32                     u9471:
 12167   001D32  EFA5  F00E         	goto	l9848
 12168   001D36                     u9470:
 12169   001D36  0E00               	movlw	0
 12170   001D38  6E34               	movwf	?___fladd^0,c
 12171   001D3A  0E00               	movlw	0
 12172   001D3C  6E35               	movwf	(?___fladd+1)^0,c
 12173   001D3E  0E00               	movlw	0
 12174   001D40  6E36               	movwf	(?___fladd+2)^0,c
 12175   001D42  0E00               	movlw	0
 12176   001D44  6E37               	movwf	(?___fladd+3)^0,c
 12177   001D46  EFF4  F00F         	goto	l2303
 12178   001D4A                     l9848:
 12179   001D4A  5038               	movf	___fladd@a^0,w,c
 12180   001D4C  2634               	addwf	___fladd@b^0,f,c
 12181   001D4E  5039               	movf	(___fladd@a+1)^0,w,c
 12182   001D50  2235               	addwfc	(___fladd@b+1)^0,f,c
 12183   001D52  503A               	movf	(___fladd@a+2)^0,w,c
 12184   001D54  2236               	addwfc	(___fladd@b+2)^0,f,c
 12185   001D56  503B               	movf	(___fladd@a+3)^0,w,c
 12186   001D58  2237               	addwfc	(___fladd@b+3)^0,f,c
 12187   001D5A  A037               	btfss	(___fladd@b+3)^0,0,c
 12188   001D5C  EFB2  F00E         	goto	u9481
 12189   001D60  EFB4  F00E         	goto	u9480
 12190   001D64                     u9481:
 12191   001D64  EF60  F00F         	goto	l9902
 12192   001D68                     u9480:
 12193   001D68  A043               	btfss	___fladd@grs^0,0,c
 12194   001D6A  EFB9  F00E         	goto	u9491
 12195   001D6E  EFBB  F00E         	goto	u9490
 12196   001D72                     u9491:
 12197   001D72  EFC1  F00E         	goto	l9856
 12198   001D76                     u9490:
 12199   001D76  90D8               	bcf	status,0,c
 12200   001D78  3043               	rrcf	___fladd@grs^0,w,c
 12201   001D7A  0901               	iorlw	1
 12202   001D7C  6E43               	movwf	___fladd@grs^0,c
 12203   001D7E  EFC3  F00E         	goto	l9858
 12204   001D82                     l9856:
 12205   001D82  90D8               	bcf	status,0,c
 12206   001D84  3243               	rrcf	___fladd@grs^0,f,c
 12207   001D86                     l9858:
 12208   001D86  A034               	btfss	___fladd@b^0,0,c
 12209   001D88  EFC8  F00E         	goto	u9501
 12210   001D8C  EFCA  F00E         	goto	u9500
 12211   001D90                     u9501:
 12212   001D90  EFCB  F00E         	goto	l9862
 12213   001D94                     u9500:
 12214   001D94  8E43               	bsf	___fladd@grs^0,7,c
 12215   001D96                     l9862:
 12216   001D96  3437               	rlcf	(___fladd@b+3)^0,w,c
 12217   001D98  3237               	rrcf	(___fladd@b+3)^0,f,c
 12218   001D9A  3236               	rrcf	(___fladd@b+2)^0,f,c
 12219   001D9C  3235               	rrcf	(___fladd@b+1)^0,f,c
 12220   001D9E  3234               	rrcf	___fladd@b^0,f,c
 12221   001DA0  2A42               	incf	___fladd@bexp^0,f,c
 12222   001DA2  EF60  F00F         	goto	l9902
 12223   001DA6                     l9866:
 12224   001DA6  5038               	movf	___fladd@a^0,w,c
 12225   001DA8  5C34               	subwf	___fladd@b^0,w,c
 12226   001DAA  5039               	movf	(___fladd@a+1)^0,w,c
 12227   001DAC  5835               	subwfb	(___fladd@b+1)^0,w,c
 12228   001DAE  503A               	movf	(___fladd@a+2)^0,w,c
 12229   001DB0  5836               	subwfb	(___fladd@b+2)^0,w,c
 12230   001DB2  5037               	movf	(___fladd@b+3)^0,w,c
 12231   001DB4  0A80               	xorlw	128
 12232   001DB6  6E3C               	movwf	??___fladd^0,c
 12233   001DB8  503B               	movf	(___fladd@a+3)^0,w,c
 12234   001DBA  0A80               	xorlw	128
 12235   001DBC  583C               	subwfb	??___fladd^0,w,c
 12236   001DBE  B0D8               	btfsc	status,0,c
 12237   001DC0  EFE4  F00E         	goto	u9511
 12238   001DC4  EFE6  F00E         	goto	u9510
 12239   001DC8                     u9511:
 12240   001DC8  EF11  F00F         	goto	l9876
 12241   001DCC                     u9510:
 12242   001DCC  5034               	movf	___fladd@b^0,w,c
 12243   001DCE  5C38               	subwf	___fladd@a^0,w,c
 12244   001DD0  6E3C               	movwf	??___fladd^0,c
 12245   001DD2  5035               	movf	(___fladd@b+1)^0,w,c
 12246   001DD4  5839               	subwfb	(___fladd@a+1)^0,w,c
 12247   001DD6  6E3D               	movwf	(??___fladd+1)^0,c
 12248   001DD8  5036               	movf	(___fladd@b+2)^0,w,c
 12249   001DDA  583A               	subwfb	(___fladd@a+2)^0,w,c
 12250   001DDC  6E3E               	movwf	(??___fladd+2)^0,c
 12251   001DDE  5037               	movf	(___fladd@b+3)^0,w,c
 12252   001DE0  583B               	subwfb	(___fladd@a+3)^0,w,c
 12253   001DE2  6E3F               	movwf	(??___fladd+3)^0,c
 12254   001DE4  0EFF               	movlw	255
 12255   001DE6  243C               	addwf	??___fladd^0,w,c
 12256   001DE8  6E34               	movwf	___fladd@b^0,c
 12257   001DEA  0EFF               	movlw	255
 12258   001DEC  203D               	addwfc	(??___fladd+1)^0,w,c
 12259   001DEE  6E35               	movwf	(___fladd@b+1)^0,c
 12260   001DF0  0EFF               	movlw	255
 12261   001DF2  203E               	addwfc	(??___fladd+2)^0,w,c
 12262   001DF4  6E36               	movwf	(___fladd@b+2)^0,c
 12263   001DF6  0EFF               	movlw	255
 12264   001DF8  203F               	addwfc	(??___fladd+3)^0,w,c
 12265   001DFA  6E37               	movwf	(___fladd@b+3)^0,c
 12266   001DFC  0E80               	movlw	128
 12267   001DFE  1A40               	xorwf	___fladd@signs^0,f,c
 12268   001E00  6C43               	negf	___fladd@grs^0,c
 12269   001E02  5043               	movf	___fladd@grs^0,w,c
 12270   001E04  A4D8               	btfss	status,2,c
 12271   001E06  EF07  F00F         	goto	u9521
 12272   001E0A  EF09  F00F         	goto	u9520
 12273   001E0E                     u9521:
 12274   001E0E  EF19  F00F         	goto	l2311
 12275   001E12                     u9520:
 12276   001E12  0E01               	movlw	1
 12277   001E14  2634               	addwf	___fladd@b^0,f,c
 12278   001E16  0E00               	movlw	0
 12279   001E18  2235               	addwfc	(___fladd@b+1)^0,f,c
 12280   001E1A  2236               	addwfc	(___fladd@b+2)^0,f,c
 12281   001E1C  2237               	addwfc	(___fladd@b+3)^0,f,c
 12282   001E1E  EF19  F00F         	goto	l2311
 12283   001E22                     l9876:
 12284   001E22  5038               	movf	___fladd@a^0,w,c
 12285   001E24  5E34               	subwf	___fladd@b^0,f,c
 12286   001E26  5039               	movf	(___fladd@a+1)^0,w,c
 12287   001E28  5A35               	subwfb	(___fladd@b+1)^0,f,c
 12288   001E2A  503A               	movf	(___fladd@a+2)^0,w,c
 12289   001E2C  5A36               	subwfb	(___fladd@b+2)^0,f,c
 12290   001E2E  503B               	movf	(___fladd@a+3)^0,w,c
 12291   001E30  5A37               	subwfb	(___fladd@b+3)^0,f,c
 12292   001E32                     l2311:
 12293   001E32  5034               	movf	___fladd@b^0,w,c
 12294   001E34  1035               	iorwf	(___fladd@b+1)^0,w,c
 12295   001E36  1036               	iorwf	(___fladd@b+2)^0,w,c
 12296   001E38  1037               	iorwf	(___fladd@b+3)^0,w,c
 12297   001E3A  A4D8               	btfss	status,2,c
 12298   001E3C  EF22  F00F         	goto	u9531
 12299   001E40  EF24  F00F         	goto	u9530
 12300   001E44                     u9531:
 12301   001E44  EF59  F00F         	goto	l9900
 12302   001E48                     u9530:
 12303   001E48  5043               	movf	___fladd@grs^0,w,c
 12304   001E4A  A4D8               	btfss	status,2,c
 12305   001E4C  EF2A  F00F         	goto	u9541
 12306   001E50  EF2C  F00F         	goto	u9540
 12307   001E54                     u9541:
 12308   001E54  EF59  F00F         	goto	l9900
 12309   001E58                     u9540:
 12310   001E58  0E00               	movlw	0
 12311   001E5A  6E34               	movwf	?___fladd^0,c
 12312   001E5C  0E00               	movlw	0
 12313   001E5E  6E35               	movwf	(?___fladd+1)^0,c
 12314   001E60  0E00               	movlw	0
 12315   001E62  6E36               	movwf	(?___fladd+2)^0,c
 12316   001E64  0E00               	movlw	0
 12317   001E66  6E37               	movwf	(?___fladd+3)^0,c
 12318   001E68  EFF4  F00F         	goto	l2303
 12319   001E6C                     l9884:
 12320   001E6C  90D8               	bcf	status,0,c
 12321   001E6E  3634               	rlcf	___fladd@b^0,f,c
 12322   001E70  3635               	rlcf	(___fladd@b+1)^0,f,c
 12323   001E72  3636               	rlcf	(___fladd@b+2)^0,f,c
 12324   001E74  3637               	rlcf	(___fladd@b+3)^0,f,c
 12325   001E76  AE43               	btfss	___fladd@grs^0,7,c
 12326   001E78  EF40  F00F         	goto	u9551
 12327   001E7C  EF42  F00F         	goto	u9550
 12328   001E80                     u9551:
 12329   001E80  EF43  F00F         	goto	l9890
 12330   001E84                     u9550:
 12331   001E84  8034               	bsf	___fladd@b^0,0,c
 12332   001E86                     l9890:
 12333   001E86  A043               	btfss	___fladd@grs^0,0,c
 12334   001E88  EF48  F00F         	goto	u9561
 12335   001E8C  EF4A  F00F         	goto	u9560
 12336   001E90                     u9561:
 12337   001E90  EF4E  F00F         	goto	l9894
 12338   001E94                     u9560:
 12339   001E94  80D8               	bsf	status,0,c
 12340   001E96  3643               	rlcf	___fladd@grs^0,f,c
 12341   001E98  EF50  F00F         	goto	l9896
 12342   001E9C                     l9894:
 12343   001E9C  90D8               	bcf	status,0,c
 12344   001E9E  3643               	rlcf	___fladd@grs^0,f,c
 12345   001EA0                     l9896:
 12346   001EA0  5042               	movf	___fladd@bexp^0,w,c
 12347   001EA2  B4D8               	btfsc	status,2,c
 12348   001EA4  EF56  F00F         	goto	u9571
 12349   001EA8  EF58  F00F         	goto	u9570
 12350   001EAC                     u9571:
 12351   001EAC  EF59  F00F         	goto	l9900
 12352   001EB0                     u9570:
 12353   001EB0  0642               	decf	___fladd@bexp^0,f,c
 12354   001EB2                     l9900:
 12355   001EB2  AE36               	btfss	(___fladd@b+2)^0,7,c
 12356   001EB4  EF5E  F00F         	goto	u9581
 12357   001EB8  EF60  F00F         	goto	u9580
 12358   001EBC                     u9581:
 12359   001EBC  EF36  F00F         	goto	l9884
 12360   001EC0                     u9580:
 12361   001EC0                     l9902:
 12362   001EC0  0E00               	movlw	0
 12363   001EC2  6E41               	movwf	___fladd@aexp^0,c
 12364   001EC4  AE43               	btfss	___fladd@grs^0,7,c
 12365   001EC6  EF67  F00F         	goto	u9591
 12366   001ECA  EF69  F00F         	goto	u9590
 12367   001ECE                     u9591:
 12368   001ECE  EF81  F00F         	goto	l2320
 12369   001ED2                     u9590:
 12370   001ED2  C043  F03C         	movff	___fladd@grs,??___fladd
 12371   001ED6  0E7F               	movlw	127
 12372   001ED8  163C               	andwf	??___fladd^0,f,c
 12373   001EDA  B4D8               	btfsc	status,2,c
 12374   001EDC  EF72  F00F         	goto	u9601
 12375   001EE0  EF74  F00F         	goto	u9600
 12376   001EE4                     u9601:
 12377   001EE4  EF78  F00F         	goto	l2321
 12378   001EE8                     u9600:
 12379   001EE8                     l9908:
 12380   001EE8  0E01               	movlw	1
 12381   001EEA  6E41               	movwf	___fladd@aexp^0,c
 12382   001EEC  EF81  F00F         	goto	l2320
 12383   001EF0                     l2321:
 12384   001EF0  A034               	btfss	___fladd@b^0,0,c
 12385   001EF2  EF7D  F00F         	goto	u9611
 12386   001EF6  EF7F  F00F         	goto	u9610
 12387   001EFA                     u9611:
 12388   001EFA  EF81  F00F         	goto	l2320
 12389   001EFE                     u9610:
 12390   001EFE  EF74  F00F         	goto	l9908
 12391   001F02                     l2320:
 12392   001F02  5041               	movf	___fladd@aexp^0,w,c
 12393   001F04  B4D8               	btfsc	status,2,c
 12394   001F06  EF87  F00F         	goto	u9621
 12395   001F0A  EF89  F00F         	goto	u9620
 12396   001F0E                     u9621:
 12397   001F0E  EFB4  F00F         	goto	l9920
 12398   001F12                     u9620:
 12399   001F12  0E01               	movlw	1
 12400   001F14  2634               	addwf	___fladd@b^0,f,c
 12401   001F16  0E00               	movlw	0
 12402   001F18  2235               	addwfc	(___fladd@b+1)^0,f,c
 12403   001F1A  2236               	addwfc	(___fladd@b+2)^0,f,c
 12404   001F1C  2237               	addwfc	(___fladd@b+3)^0,f,c
 12405   001F1E  A037               	btfss	(___fladd@b+3)^0,0,c
 12406   001F20  EF94  F00F         	goto	u9631
 12407   001F24  EF96  F00F         	goto	u9630
 12408   001F28                     u9631:
 12409   001F28  EFB4  F00F         	goto	l9920
 12410   001F2C                     u9630:
 12411   001F2C  C034  F03C         	movff	___fladd@b,??___fladd
 12412   001F30  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 12413   001F34  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 12414   001F38  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 12415   001F3C  343F               	rlcf	(??___fladd+3)^0,w,c
 12416   001F3E  323F               	rrcf	(??___fladd+3)^0,f,c
 12417   001F40  323E               	rrcf	(??___fladd+2)^0,f,c
 12418   001F42  323D               	rrcf	(??___fladd+1)^0,f,c
 12419   001F44  323C               	rrcf	??___fladd^0,f,c
 12420   001F46  C03C  F034         	movff	??___fladd,___fladd@b
 12421   001F4A  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 12422   001F4E  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 12423   001F52  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 12424   001F56  2842               	incf	___fladd@bexp^0,w,c
 12425   001F58  B4D8               	btfsc	status,2,c
 12426   001F5A  EFB1  F00F         	goto	u9641
 12427   001F5E  EFB3  F00F         	goto	u9640
 12428   001F62                     u9641:
 12429   001F62  EFB4  F00F         	goto	l9920
 12430   001F66                     u9640:
 12431   001F66  2A42               	incf	___fladd@bexp^0,f,c
 12432   001F68                     l9920:
 12433   001F68  2842               	incf	___fladd@bexp^0,w,c
 12434   001F6A  B4D8               	btfsc	status,2,c
 12435   001F6C  EFBA  F00F         	goto	u9651
 12436   001F70  EFBC  F00F         	goto	u9650
 12437   001F74                     u9651:
 12438   001F74  EFC4  F00F         	goto	l9924
 12439   001F78                     u9650:
 12440   001F78  5042               	movf	___fladd@bexp^0,w,c
 12441   001F7A  A4D8               	btfss	status,2,c
 12442   001F7C  EFC2  F00F         	goto	u9661
 12443   001F80  EFC4  F00F         	goto	u9660
 12444   001F84                     u9661:
 12445   001F84  EFD6  F00F         	goto	l9928
 12446   001F88                     u9660:
 12447   001F88                     l9924:
 12448   001F88  0E00               	movlw	0
 12449   001F8A  6E34               	movwf	___fladd@b^0,c
 12450   001F8C  0E00               	movlw	0
 12451   001F8E  6E35               	movwf	(___fladd@b+1)^0,c
 12452   001F90  0E00               	movlw	0
 12453   001F92  6E36               	movwf	(___fladd@b+2)^0,c
 12454   001F94  0E00               	movlw	0
 12455   001F96  6E37               	movwf	(___fladd@b+3)^0,c
 12456   001F98  5042               	movf	___fladd@bexp^0,w,c
 12457   001F9A  A4D8               	btfss	status,2,c
 12458   001F9C  EFD2  F00F         	goto	u9671
 12459   001FA0  EFD4  F00F         	goto	u9670
 12460   001FA4                     u9671:
 12461   001FA4  EFD6  F00F         	goto	l9928
 12462   001FA8                     u9670:
 12463   001FA8  0E00               	movlw	0
 12464   001FAA  6E40               	movwf	___fladd@signs^0,c
 12465   001FAC                     l9928:
 12466   001FAC  A042               	btfss	___fladd@bexp^0,0,c
 12467   001FAE  EFDB  F00F         	goto	u9681
 12468   001FB2  EFDD  F00F         	goto	u9680
 12469   001FB6                     u9681:
 12470   001FB6  EFE0  F00F         	goto	l9932
 12471   001FBA                     u9680:
 12472   001FBA  8E36               	bsf	(___fladd@b+2)^0,7,c
 12473   001FBC  EFE1  F00F         	goto	l9934
 12474   001FC0                     l9932:
 12475   001FC0  9E36               	bcf	(___fladd@b+2)^0,7,c
 12476   001FC2                     l9934:
 12477   001FC2  90D8               	bcf	status,0,c
 12478   001FC4  3042               	rrcf	___fladd@bexp^0,w,c
 12479   001FC6  6E37               	movwf	(___fladd@b+3)^0,c
 12480   001FC8  AE40               	btfss	___fladd@signs^0,7,c
 12481   001FCA  EFE9  F00F         	goto	u9691
 12482   001FCE  EFEB  F00F         	goto	u9690
 12483   001FD2                     u9691:
 12484   001FD2  EFEC  F00F         	goto	l9940
 12485   001FD6                     u9690:
 12486   001FD6  8E37               	bsf	(___fladd@b+3)^0,7,c
 12487   001FD8                     l9940:
 12488   001FD8  C034  F034         	movff	___fladd@b,?___fladd
 12489   001FDC  C035  F035         	movff	___fladd@b+1,?___fladd+1
 12490   001FE0  C036  F036         	movff	___fladd@b+2,?___fladd+2
 12491   001FE4  C037  F037         	movff	___fladd@b+3,?___fladd+3
 12492   001FE8                     l2303:
 12493   001FE8  0012               	return		;funcret
 12494   001FEA                     __end_of___fladd:
 12495                           	callstack 0
 12496                           
 12497 ;; *************** function _GPIO_pIN_TOGGLE_LOGIC *****************
 12498 ;; Defined at:
 12499 ;;		line 101 in file "MKAL_layer/gpio/pro_gpio.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  config_pin      1   12[COMRAM] PTR const struct .
 12502 ;;		 -> relay_toggle@pin_config(1), led_toggle@pin_config(1), LED_ROOM_1(1), 
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;  ret             1   17[COMRAM] unsigned char 
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  1    wreg      unsigned char 
 12507 ;; Registers used:
 12508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12514 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12517 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;Total ram usage:        6 bytes
 12519 ;; Hardware stack levels used: 1
 12520 ;; Hardware stack levels required when called: 4
 12521 ;; This function calls:
 12522 ;;		Nothing
 12523 ;; This function is called by:
 12524 ;;		_main
 12525 ;;		_led_toggle
 12526 ;;		_relay_toggle
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           	psect	text69
 12531   0048E4                     __ptext69:
 12532                           	callstack 0
 12533   0048E4                     _GPIO_pIN_TOGGLE_LOGIC:
 12534                           	callstack 26
 12535   0048E4                     
 12536                           ;MKAL_layer/gpio/pro_gpio.c: 101: Std_ReturnType GPIO_pIN_TOGGLE_LOGIC(const pin_config_
      +                          t *config_pin);MKAL_layer/gpio/pro_gpio.c: 102: {;MKAL_layer/gpio/pro_gpio.c: 103:     S
      +                          td_ReturnType ret =(Std_ReturnType)0x01;
 12537   0048E4  0E01               	movlw	1
 12538   0048E6  6E12               	movwf	GPIO_pIN_TOGGLE_LOGIC@ret^0,c
 12539                           
 12540                           ;MKAL_layer/gpio/pro_gpio.c: 104:     if ((((void*)0) == config_pin) || (config_pin->pin
      +                           > 8 -1)){
 12541   0048E8  500D               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 12542   0048EA  B4D8               	btfsc	status,2,c
 12543   0048EC  EF7A  F024         	goto	u11631
 12544   0048F0  EF7C  F024         	goto	u11630
 12545   0048F4                     u11631:
 12546   0048F4  EF8C  F024         	goto	l11474
 12547   0048F8                     u11630:
 12548   0048F8  500D               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 12549   0048FA  6ED9               	movwf	fsr2l,c
 12550   0048FC  6ADA               	clrf	fsr2h,c
 12551   0048FE  30DF               	rrcf	223,w,c
 12552   004900  32E8               	rrcf	wreg,f,c
 12553   004902  32E8               	rrcf	wreg,f,c
 12554   004904  0B07               	andlw	7
 12555   004906  6E0E               	movwf	??_GPIO_pIN_TOGGLE_LOGIC^0,c
 12556   004908  0E07               	movlw	7
 12557   00490A  640E               	cpfsgt	??_GPIO_pIN_TOGGLE_LOGIC^0,c
 12558   00490C  EF8A  F024         	goto	u11641
 12559   004910  EF8C  F024         	goto	u11640
 12560   004914                     u11641:
 12561   004914  EF90  F024         	goto	l11476
 12562   004918                     u11640:
 12563   004918                     l11474:
 12564                           
 12565                           ;MKAL_layer/gpio/pro_gpio.c: 105:         ret =(Std_ReturnType)0x00;
 12566   004918  0E00               	movlw	0
 12567   00491A  6E12               	movwf	GPIO_pIN_TOGGLE_LOGIC@ret^0,c
 12568                           
 12569                           ;MKAL_layer/gpio/pro_gpio.c: 106:     }
 12570   00491C  EFB6  F024         	goto	l11478
 12571   004920                     l11476:
 12572                           
 12573                           ;MKAL_layer/gpio/pro_gpio.c: 108:         (*lat_regisrers[config_pin->port] ^= ((uint8)1
      +                           << config_pin->pin));
 12574   004920  500D               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 12575   004922  6ED9               	movwf	fsr2l,c
 12576   004924  6ADA               	clrf	fsr2h,c
 12577   004926  30DF               	rrcf	223,w,c
 12578   004928  32E8               	rrcf	wreg,f,c
 12579   00492A  32E8               	rrcf	wreg,f,c
 12580   00492C  0B07               	andlw	7
 12581   00492E  6E0E               	movwf	??_GPIO_pIN_TOGGLE_LOGIC^0,c
 12582   004930  0E01               	movlw	1
 12583   004932  6E0F               	movwf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,c
 12584   004934  2A0E               	incf	??_GPIO_pIN_TOGGLE_LOGIC^0,f,c
 12585   004936  EF9F  F024         	goto	u11654
 12586   00493A                     u11655:
 12587   00493A  90D8               	bcf	status,0,c
 12588   00493C  360F               	rlcf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,f,c
 12589   00493E                     u11654:
 12590   00493E  2E0E               	decfsz	??_GPIO_pIN_TOGGLE_LOGIC^0,f,c
 12591   004940  EF9D  F024         	goto	u11655
 12592   004944  500D               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 12593   004946  6ED9               	movwf	fsr2l,c
 12594   004948  6ADA               	clrf	fsr2h,c
 12595   00494A  50DF               	movf	223,w,c
 12596   00494C  0B07               	andlw	7
 12597   00494E  0D02               	mullw	2
 12598   004950  50F3               	movf	243,w,c
 12599   004952  0FD2               	addlw	low _lat_regisrers
 12600   004954  6ED9               	movwf	fsr2l,c
 12601   004956  6ADA               	clrf	fsr2h,c
 12602   004958  CFDE F010          	movff	postinc2,??_GPIO_pIN_TOGGLE_LOGIC+2
 12603   00495C  CFDD F011          	movff	postdec2,??_GPIO_pIN_TOGGLE_LOGIC+3
 12604   004960  C010  FFD9         	movff	??_GPIO_pIN_TOGGLE_LOGIC+2,fsr2l
 12605   004964  C011  FFDA         	movff	??_GPIO_pIN_TOGGLE_LOGIC+3,fsr2h
 12606   004968  500F               	movf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,w,c
 12607   00496A  1ADF               	xorwf	indf2,f,c
 12608   00496C                     l11478:
 12609                           
 12610                           ;MKAL_layer/gpio/pro_gpio.c: 110:     return ret;
 12611   00496C  5012               	movf	GPIO_pIN_TOGGLE_LOGIC@ret^0,w,c
 12612   00496E  0012               	return		;funcret
 12613   004970                     __end_of_GPIO_pIN_TOGGLE_LOGIC:
 12614                           	callstack 0
 12615                           
 12616 ;; *************** function _ADC_get_conversion_blocking *****************
 12617 ;; Defined at:
 12618 ;;		line 143 in file "MKAL_layer/ADC/hal_adc.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;  ADC_conf        2   20[COMRAM] PTR const struct .
 12621 ;;		 -> ADC_(6), 
 12622 ;;  ADC_CHANNAL_    1   22[COMRAM] enum E3044
 12623 ;;  conversion_s    1   23[COMRAM] PTR unsigned short 
 12624 ;;		 -> ADC_VALUE_2(4), ADC_VALUE(2), 
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;  ret             1   25[COMRAM] unsigned char 
 12627 ;;  l_conversion    1   24[COMRAM] unsigned char 
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  1    wreg      unsigned char 
 12630 ;; Registers used:
 12631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12641 ;;Total ram usage:        6 bytes
 12642 ;; Hardware stack levels used: 1
 12643 ;; Hardware stack levels required when called: 6
 12644 ;; This function calls:
 12645 ;;		_ADC_ISconversion_done
 12646 ;;		_ADC_ISconversion_result
 12647 ;;		_ADC_select_channal
 12648 ;;		_ADC_start_conversion
 12649 ;; This function is called by:
 12650 ;;		_main
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           	psect	text70
 12655   004A7A                     __ptext70:
 12656                           	callstack 0
 12657   004A7A                     _ADC_get_conversion_blocking:
 12658                           	callstack 24
 12659   004A7A                     
 12660                           ;MKAL_layer/ADC/hal_adc.c: 146:      uint8 l_conversion_status = 0;
 12661   004A7A  0E00               	movlw	0
 12662   004A7C  6E19               	movwf	ADC_get_conversion_blocking@l_conversion_status^0,c
 12663   004A7E                     
 12664                           ;MKAL_layer/ADC/hal_adc.c: 147:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_status)){
 12665   004A7E  5015               	movf	ADC_get_conversion_blocking@ADC_conf^0,w,c
 12666   004A80  1016               	iorwf	(ADC_get_conversion_blocking@ADC_conf+1)^0,w,c
 12667   004A82  B4D8               	btfsc	status,2,c
 12668   004A84  EF46  F025         	goto	u11571
 12669   004A88  EF48  F025         	goto	u11570
 12670   004A8C                     u11571:
 12671   004A8C  EF50  F025         	goto	l11376
 12672   004A90                     u11570:
 12673   004A90  5018               	movf	ADC_get_conversion_blocking@conversion_status^0,w,c
 12674   004A92  A4D8               	btfss	status,2,c
 12675   004A94  EF4E  F025         	goto	u11581
 12676   004A98  EF50  F025         	goto	u11580
 12677   004A9C                     u11581:
 12678   004A9C  EF52  F025         	goto	l11378
 12679   004AA0                     u11580:
 12680   004AA0                     l11376:
 12681                           
 12682                           ;MKAL_layer/ADC/hal_adc.c: 149:     }
 12683   004AA0  EF79  F025         	goto	l616
 12684   004AA4                     l11378:
 12685                           
 12686                           ;MKAL_layer/ADC/hal_adc.c: 152:         ret = ADC_select_channal(ADC_conf,ADC_CHANNAL_SE
      +                          LECT);
 12687   004AA4  C015  F010         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_select_channal@ADC_conf
 12688   004AA8  C016  F011         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_select_channal@ADC_conf+1
 12689   004AAC  C017  F012         	movff	ADC_get_conversion_blocking@ADC_CHANNAL_SELECT,ADC_select_channal@ADC_CHANNAL_SEL
      +                          ECT
 12690   004AB0  EC15  F029         	call	_ADC_select_channal	;wreg free
 12691   004AB4  6E1A               	movwf	ADC_get_conversion_blocking@ret^0,c
 12692                           
 12693                           ;MKAL_layer/ADC/hal_adc.c: 154:         ret = ADC_start_conversion(ADC_conf);
 12694   004AB6  C015  F00D         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_start_conversion@ADC_conf
 12695   004ABA  C016  F00E         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_start_conversion@ADC_conf+1
 12696   004ABE  EC8E  F02A         	call	_ADC_start_conversion	;wreg free
 12697   004AC2  6E1A               	movwf	ADC_get_conversion_blocking@ret^0,c
 12698   004AC4  C015  F00D         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_ISconversion_done@ADC_conf
 12699   004AC8  C016  F00E         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_ISconversion_done@ADC_conf+1
 12700   004ACC  0E19               	movlw	low ADC_get_conversion_blocking@l_conversion_status
 12701   004ACE  6E0F               	movwf	ADC_ISconversion_done@conversion_status^0,c
 12702   004AD0  EC81  F027         	call	_ADC_ISconversion_done	;wreg free
 12703   004AD4                     l613:
 12704   004AD4  B2C2               	btfsc	194,1,c	;volatile
 12705   004AD6  EF6F  F025         	goto	u11591
 12706   004ADA  EF71  F025         	goto	u11590
 12707   004ADE                     u11591:
 12708   004ADE  EF6A  F025         	goto	l613
 12709   004AE2                     u11590:
 12710   004AE2  C015  F00D         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_ISconversion_result@ADC_conf
 12711   004AE6  C016  F00E         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_ISconversion_result@ADC_conf+1
 12712   004AEA  C018  F00F         	movff	ADC_get_conversion_blocking@conversion_status,ADC_ISconversion_result@conversion_
      +                          result
 12713   004AEE  EC57  F020         	call	_ADC_ISconversion_result	;wreg free
 12714   004AF2                     l616:
 12715   004AF2  0012               	return		;funcret
 12716   004AF4                     __end_of_ADC_get_conversion_blocking:
 12717                           	callstack 0
 12718                           
 12719 ;; *************** function _ADC_start_conversion *****************
 12720 ;; Defined at:
 12721 ;;		line 99 in file "MKAL_layer/ADC/hal_adc.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;  ADC_conf        2   12[COMRAM] PTR const struct .
 12724 ;;		 -> ADC_(6), 
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;  ret             1   14[COMRAM] unsigned char 
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  1    wreg      unsigned char 
 12729 ;; Registers used:
 12730 ;;		wreg, status,2, status,0
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/0
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12739 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12740 ;;Total ram usage:        3 bytes
 12741 ;; Hardware stack levels used: 1
 12742 ;; Hardware stack levels required when called: 4
 12743 ;; This function calls:
 12744 ;;		Nothing
 12745 ;; This function is called by:
 12746 ;;		_ADC_get_conversion_blocking
 12747 ;;		_ADC_start_conversion_interrupt
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           	psect	text71
 12752   00551C                     __ptext71:
 12753                           	callstack 0
 12754   00551C                     _ADC_start_conversion:
 12755                           	callstack 25
 12756   00551C                     
 12757                           ;MKAL_layer/ADC/hal_adc.c: 101:     if (((void*)0) == ADC_conf){
 12758   00551C  500D               	movf	ADC_start_conversion@ADC_conf^0,w,c
 12759   00551E  100E               	iorwf	(ADC_start_conversion@ADC_conf+1)^0,w,c
 12760   005520  A4D8               	btfss	status,2,c
 12761   005522  EF95  F02A         	goto	u11231
 12762   005526  EF97  F02A         	goto	u11230
 12763   00552A                     u11231:
 12764   00552A  EF9B  F02A         	goto	l586
 12765   00552E                     u11230:
 12766   00552E                     
 12767                           ;MKAL_layer/ADC/hal_adc.c: 102:         ret =(Std_ReturnType)0x00;
 12768   00552E  0E00               	movlw	0
 12769   005530  6E0F               	movwf	ADC_start_conversion@ret^0,c
 12770                           
 12771                           ;MKAL_layer/ADC/hal_adc.c: 103:     }
 12772   005532  EF9E  F02A         	goto	l587
 12773   005536                     l586:
 12774                           
 12775                           ;MKAL_layer/ADC/hal_adc.c: 105:         (ADCON0bits.GODONE =1);
 12776   005536  82C2               	bsf	194,1,c	;volatile
 12777   005538                     
 12778                           ;MKAL_layer/ADC/hal_adc.c: 106:         ret = (Std_ReturnType)0x01;
 12779   005538  0E01               	movlw	1
 12780   00553A  6E0F               	movwf	ADC_start_conversion@ret^0,c
 12781   00553C                     l587:
 12782                           
 12783                           ;MKAL_layer/ADC/hal_adc.c: 108:     return ret;
 12784   00553C  500F               	movf	ADC_start_conversion@ret^0,w,c
 12785   00553E  0012               	return		;funcret
 12786   005540                     __end_of_ADC_start_conversion:
 12787                           	callstack 0
 12788                           
 12789 ;; *************** function _ADC_select_channal *****************
 12790 ;; Defined at:
 12791 ;;		line 86 in file "MKAL_layer/ADC/hal_adc.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;  ADC_conf        2   15[COMRAM] PTR const struct .
 12794 ;;		 -> ADC_(6), 
 12795 ;;  ADC_CHANNAL_    1   17[COMRAM] const enum E3044
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;  ret             1   19[COMRAM] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      unsigned char 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12807 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12810 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12811 ;;Total ram usage:        5 bytes
 12812 ;; Hardware stack levels used: 1
 12813 ;; Hardware stack levels required when called: 5
 12814 ;; This function calls:
 12815 ;;		_adc_channel_port_confige
 12816 ;; This function is called by:
 12817 ;;		_ADC_get_conversion_blocking
 12818 ;;		_ADC_start_conversion_interrupt
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text72
 12823   00522A                     __ptext72:
 12824                           	callstack 0
 12825   00522A                     _ADC_select_channal:
 12826                           	callstack 24
 12827   00522A                     
 12828                           ;MKAL_layer/ADC/hal_adc.c: 88:     if (((void*)0) == ADC_conf){
 12829   00522A  5010               	movf	ADC_select_channal@ADC_conf^0,w,c
 12830   00522C  1011               	iorwf	(ADC_select_channal@ADC_conf+1)^0,w,c
 12831   00522E  A4D8               	btfss	status,2,c
 12832   005230  EF1C  F029         	goto	u11221
 12833   005234  EF1E  F029         	goto	u11220
 12834   005238                     u11221:
 12835   005238  EF22  F029         	goto	l11136
 12836   00523C                     u11220:
 12837   00523C                     
 12838                           ;MKAL_layer/ADC/hal_adc.c: 89:         ret =(Std_ReturnType)0x00;
 12839   00523C  0E00               	movlw	0
 12840   00523E  6E14               	movwf	ADC_select_channal@ret^0,c
 12841                           
 12842                           ;MKAL_layer/ADC/hal_adc.c: 90:     }
 12843   005240  EF30  F029         	goto	l11142
 12844   005244                     l11136:
 12845                           
 12846                           ;MKAL_layer/ADC/hal_adc.c: 92:         ADCON0bits.CHS = ADC_CHANNAL_SELECT;
 12847   005244  C012  F013         	movff	ADC_select_channal@ADC_CHANNAL_SELECT,??_ADC_select_channal
 12848   005248  4613               	rlncf	??_ADC_select_channal^0,f,c
 12849   00524A  4613               	rlncf	??_ADC_select_channal^0,f,c
 12850   00524C  50C2               	movf	194,w,c	;volatile
 12851   00524E  1813               	xorwf	??_ADC_select_channal^0,w,c
 12852   005250  0BC3               	andlw	-61
 12853   005252  1813               	xorwf	??_ADC_select_channal^0,w,c
 12854   005254  6EC2               	movwf	194,c	;volatile
 12855   005256                     
 12856                           ;MKAL_layer/ADC/hal_adc.c: 93:         adc_channel_port_confige(ADC_CHANNAL_SELECT);
 12857   005256  5012               	movf	ADC_select_channal@ADC_CHANNAL_SELECT^0,w,c
 12858   005258  ECBF  F01E         	call	_adc_channel_port_confige
 12859   00525C                     
 12860                           ;MKAL_layer/ADC/hal_adc.c: 94:         ret = (Std_ReturnType)0x01;
 12861   00525C  0E01               	movlw	1
 12862   00525E  6E14               	movwf	ADC_select_channal@ret^0,c
 12863   005260                     l11142:
 12864                           
 12865                           ;MKAL_layer/ADC/hal_adc.c: 96:     return ret;
 12866   005260  5014               	movf	ADC_select_channal@ret^0,w,c
 12867   005262  0012               	return		;funcret
 12868   005264                     __end_of_ADC_select_channal:
 12869                           	callstack 0
 12870                           
 12871 ;; *************** function _adc_channel_port_confige *****************
 12872 ;; Defined at:
 12873 ;;		line 176 in file "MKAL_layer/ADC/hal_adc.c"
 12874 ;; Parameters:    Size  Location     Type
 12875 ;;  ADC_CHANNAL_    1    wreg     const enum E3044
 12876 ;; Auto vars:     Size  Location     Type
 12877 ;;  ADC_CHANNAL_    1   14[COMRAM] const enum E3044
 12878 ;; Return value:  Size  Location     Type
 12879 ;;                  1    wreg      void 
 12880 ;; Registers used:
 12881 ;;		wreg, status,2, status,0
 12882 ;; Tracked objects:
 12883 ;;		On entry : 0/0
 12884 ;;		On exit  : 0/0
 12885 ;;		Unchanged: 0/0
 12886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12890 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12891 ;;Total ram usage:        3 bytes
 12892 ;; Hardware stack levels used: 1
 12893 ;; Hardware stack levels required when called: 4
 12894 ;; This function calls:
 12895 ;;		Nothing
 12896 ;; This function is called by:
 12897 ;;		_ADC_inti
 12898 ;;		_ADC_select_channal
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text73
 12903   003D7E                     __ptext73:
 12904                           	callstack 0
 12905   003D7E                     _adc_channel_port_confige:
 12906                           	callstack 24
 12907                           
 12908                           ;incstack = 0
 12909                           ;adc_channel_port_confige@ADC_CHANNAL_SELECT stored from wreg
 12910   003D7E  6E0F               	movwf	adc_channel_port_confige@ADC_CHANNAL_SELECT^0,c
 12911   003D80                     
 12912                           ;MKAL_layer/ADC/hal_adc.c: 176: static __attribute__((inline)) void adc_channel_port_con
      +                          fige(const ADC_CHANNAL_SELECT_t ADC_CHANNAL_SELECT);MKAL_layer/ADC/hal_adc.c: 177: {;MKA
      +                          L_layer/ADC/hal_adc.c: 178:     switch (ADC_CHANNAL_SELECT){
 12913   003D80  EFE9  F01E         	goto	l10348
 12914   003D84                     l10320:
 12915   003D84  8092               	bsf	146,0,c	;volatile
 12916   003D86  EF2A  F01F         	goto	l639
 12917   003D8A                     l10322:
 12918   003D8A  8292               	bsf	146,1,c	;volatile
 12919   003D8C  EF2A  F01F         	goto	l639
 12920   003D90                     l10324:
 12921   003D90  8492               	bsf	146,2,c	;volatile
 12922   003D92  EF2A  F01F         	goto	l639
 12923   003D96                     l10326:
 12924   003D96  8692               	bsf	146,3,c	;volatile
 12925   003D98  EF2A  F01F         	goto	l639
 12926   003D9C                     l10328:
 12927   003D9C  8892               	bsf	146,4,c	;volatile
 12928   003D9E  EF2A  F01F         	goto	l639
 12929   003DA2                     l10330:
 12930   003DA2  8096               	bsf	150,0,c	;volatile
 12931   003DA4  EF2A  F01F         	goto	l639
 12932   003DA8                     l10332:
 12933   003DA8  8296               	bsf	150,1,c	;volatile
 12934   003DAA  EF2A  F01F         	goto	l639
 12935   003DAE                     l10334:
 12936   003DAE  8496               	bsf	150,2,c	;volatile
 12937   003DB0  EF2A  F01F         	goto	l639
 12938   003DB4                     l10336:
 12939   003DB4  8493               	bsf	147,2,c	;volatile
 12940   003DB6  EF2A  F01F         	goto	l639
 12941   003DBA                     l10338:
 12942   003DBA  8693               	bsf	147,3,c	;volatile
 12943   003DBC  EF2A  F01F         	goto	l639
 12944   003DC0                     l10340:
 12945   003DC0  8293               	bsf	147,1,c	;volatile
 12946   003DC2  EF2A  F01F         	goto	l639
 12947   003DC6                     l10342:
 12948   003DC6  8893               	bsf	147,4,c	;volatile
 12949   003DC8  EF2A  F01F         	goto	l639
 12950   003DCC                     l10344:
 12951   003DCC  8093               	bsf	147,0,c	;volatile
 12952   003DCE  EF2A  F01F         	goto	l639
 12953   003DD2                     l10348:
 12954   003DD2  500F               	movf	adc_channel_port_confige@ADC_CHANNAL_SELECT^0,w,c
 12955   003DD4  6E0D               	movwf	??_adc_channel_port_confige^0,c
 12956   003DD6  6A0E               	clrf	(??_adc_channel_port_confige+1)^0,c
 12957                           
 12958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12959                           ; Switch size 1, requested type "simple"
 12960                           ; Number of cases is 1, Range of values is 0 to 0
 12961                           ; switch strategies available:
 12962                           ; Name         Instructions Cycles
 12963                           ; simple_byte            4     3 (average)
 12964                           ;	Chosen strategy is simple_byte
 12965   003DD8  500E               	movf	(??_adc_channel_port_confige+1)^0,w,c
 12966   003DDA  0A00               	xorlw	0	; case 0
 12967   003DDC  B4D8               	btfsc	status,2,c
 12968   003DDE  EFF3  F01E         	goto	l12564
 12969   003DE2  EF2A  F01F         	goto	l639
 12970   003DE6                     l12564:
 12971                           
 12972                           ; Switch size 1, requested type "simple"
 12973                           ; Number of cases is 13, Range of values is 0 to 12
 12974                           ; switch strategies available:
 12975                           ; Name         Instructions Cycles
 12976                           ; simple_byte           40    21 (average)
 12977                           ;	Chosen strategy is simple_byte
 12978   003DE6  500D               	movf	??_adc_channel_port_confige^0,w,c
 12979   003DE8  0A00               	xorlw	0	; case 0
 12980   003DEA  B4D8               	btfsc	status,2,c
 12981   003DEC  EFC2  F01E         	goto	l10320
 12982   003DF0  0A01               	xorlw	1	; case 1
 12983   003DF2  B4D8               	btfsc	status,2,c
 12984   003DF4  EFC5  F01E         	goto	l10322
 12985   003DF8  0A03               	xorlw	3	; case 2
 12986   003DFA  B4D8               	btfsc	status,2,c
 12987   003DFC  EFC8  F01E         	goto	l10324
 12988   003E00  0A01               	xorlw	1	; case 3
 12989   003E02  B4D8               	btfsc	status,2,c
 12990   003E04  EFCB  F01E         	goto	l10326
 12991   003E08  0A07               	xorlw	7	; case 4
 12992   003E0A  B4D8               	btfsc	status,2,c
 12993   003E0C  EFCE  F01E         	goto	l10328
 12994   003E10  0A01               	xorlw	1	; case 5
 12995   003E12  B4D8               	btfsc	status,2,c
 12996   003E14  EFD1  F01E         	goto	l10330
 12997   003E18  0A03               	xorlw	3	; case 6
 12998   003E1A  B4D8               	btfsc	status,2,c
 12999   003E1C  EFD4  F01E         	goto	l10332
 13000   003E20  0A01               	xorlw	1	; case 7
 13001   003E22  B4D8               	btfsc	status,2,c
 13002   003E24  EFD7  F01E         	goto	l10334
 13003   003E28  0A0F               	xorlw	15	; case 8
 13004   003E2A  B4D8               	btfsc	status,2,c
 13005   003E2C  EFDA  F01E         	goto	l10336
 13006   003E30  0A01               	xorlw	1	; case 9
 13007   003E32  B4D8               	btfsc	status,2,c
 13008   003E34  EFDD  F01E         	goto	l10338
 13009   003E38  0A03               	xorlw	3	; case 10
 13010   003E3A  B4D8               	btfsc	status,2,c
 13011   003E3C  EFE0  F01E         	goto	l10340
 13012   003E40  0A01               	xorlw	1	; case 11
 13013   003E42  B4D8               	btfsc	status,2,c
 13014   003E44  EFE3  F01E         	goto	l10342
 13015   003E48  0A07               	xorlw	7	; case 12
 13016   003E4A  B4D8               	btfsc	status,2,c
 13017   003E4C  EFE6  F01E         	goto	l10344
 13018   003E50  EF2A  F01F         	goto	l639
 13019   003E54                     l639:
 13020   003E54  0012               	return		;funcret
 13021   003E56                     __end_of_adc_channel_port_confige:
 13022                           	callstack 0
 13023                           
 13024 ;; *************** function _ADC_ISconversion_result *****************
 13025 ;; Defined at:
 13026 ;;		line 123 in file "MKAL_layer/ADC/hal_adc.c"
 13027 ;; Parameters:    Size  Location     Type
 13028 ;;  ADC_conf        2   12[COMRAM] PTR const struct .
 13029 ;;		 -> ADC_(6), 
 13030 ;;  conversion_r    1   14[COMRAM] PTR unsigned short 
 13031 ;;		 -> ADC_VALUE_2(4), ADC_VALUE(2), 
 13032 ;; Auto vars:     Size  Location     Type
 13033 ;;  ret             1   18[COMRAM] unsigned char 
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      unsigned char 
 13036 ;; Registers used:
 13037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13043 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;Total ram usage:        7 bytes
 13048 ;; Hardware stack levels used: 1
 13049 ;; Hardware stack levels required when called: 4
 13050 ;; This function calls:
 13051 ;;		Nothing
 13052 ;; This function is called by:
 13053 ;;		_ADC_get_conversion_blocking
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           	psect	text74
 13058   0040AE                     __ptext74:
 13059                           	callstack 0
 13060   0040AE                     _ADC_ISconversion_result:
 13061                           	callstack 25
 13062   0040AE                     
 13063                           ;MKAL_layer/ADC/hal_adc.c: 125:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_result)){
 13064   0040AE  500D               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 13065   0040B0  100E               	iorwf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 13066   0040B2  B4D8               	btfsc	status,2,c
 13067   0040B4  EF5E  F020         	goto	u11281
 13068   0040B8  EF60  F020         	goto	u11280
 13069   0040BC                     u11281:
 13070   0040BC  EF68  F020         	goto	l11178
 13071   0040C0                     u11280:
 13072   0040C0  500F               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 13073   0040C2  A4D8               	btfss	status,2,c
 13074   0040C4  EF66  F020         	goto	u11291
 13075   0040C8  EF68  F020         	goto	u11290
 13076   0040CC                     u11291:
 13077   0040CC  EF6C  F020         	goto	l11180
 13078   0040D0                     u11290:
 13079   0040D0                     l11178:
 13080                           
 13081                           ;MKAL_layer/ADC/hal_adc.c: 126:         ret =(Std_ReturnType)0x00;
 13082   0040D0  0E00               	movlw	0
 13083   0040D2  6E13               	movwf	ADC_ISconversion_result@ret^0,c
 13084                           
 13085                           ;MKAL_layer/ADC/hal_adc.c: 127:     }
 13086   0040D4  EFB4  F020         	goto	l11192
 13087   0040D8                     l11180:
 13088                           
 13089                           ;MKAL_layer/ADC/hal_adc.c: 129:         if(ADC_conf->result_format == 1){
 13090   0040D8  EE20 F005          	lfsr	2,5
 13091   0040DC  500D               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 13092   0040DE  26D9               	addwf	fsr2l,f,c
 13093   0040E0  500E               	movf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 13094   0040E2  22DA               	addwfc	fsr2h,f,c
 13095   0040E4  A2DF               	btfss	indf2,1,c
 13096   0040E6  EF77  F020         	goto	u11301
 13097   0040EA  EF79  F020         	goto	u11300
 13098   0040EE                     u11301:
 13099   0040EE  EF8C  F020         	goto	l11184
 13100   0040F2                     u11300:
 13101   0040F2                     l11182:
 13102                           
 13103                           ;MKAL_layer/ADC/hal_adc.c: 130:             *conversion_result = ((ADRESH << 8) + ADRESL
      +                          );
 13104   0040F2  50C3               	movf	195,w,c	;volatile
 13105   0040F4  CFC4 F010          	movff	4036,??_ADC_ISconversion_result	;volatile
 13106   0040F8  6A11               	clrf	(??_ADC_ISconversion_result+1)^0,c
 13107   0040FA  C010  F011         	movff	??_ADC_ISconversion_result,??_ADC_ISconversion_result+1
 13108   0040FE  6A10               	clrf	??_ADC_ISconversion_result^0,c
 13109   004100  2610               	addwf	??_ADC_ISconversion_result^0,f,c
 13110   004102  0E00               	movlw	0
 13111   004104  2211               	addwfc	(??_ADC_ISconversion_result+1)^0,f,c
 13112   004106  500F               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 13113   004108  6ED9               	movwf	fsr2l,c
 13114   00410A  6ADA               	clrf	fsr2h,c
 13115   00410C  C010  FFDE         	movff	??_ADC_ISconversion_result,postinc2
 13116   004110  C011  FFDD         	movff	??_ADC_ISconversion_result+1,postdec2
 13117                           
 13118                           ;MKAL_layer/ADC/hal_adc.c: 131:         }else if(ADC_conf->result_format == 0){
 13119   004114  EFB2  F020         	goto	l11190
 13120   004118                     l11184:
 13121   004118  EE20 F005          	lfsr	2,5
 13122   00411C  500D               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 13123   00411E  26D9               	addwf	fsr2l,f,c
 13124   004120  500E               	movf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 13125   004122  22DA               	addwfc	fsr2h,f,c
 13126   004124  B2DF               	btfsc	indf2,1,c
 13127   004126  EF97  F020         	goto	u11311
 13128   00412A  EF99  F020         	goto	u11310
 13129   00412E                     u11311:
 13130   00412E  EF79  F020         	goto	l11182
 13131   004132                     u11310:
 13132   004132                     
 13133                           ;MKAL_layer/ADC/hal_adc.c: 132:             *conversion_result = (((ADRESH << 8) + ADRES
      +                          L) >> 6) ;
 13134   004132  50C3               	movf	195,w,c	;volatile
 13135   004134  CFC4 F010          	movff	4036,??_ADC_ISconversion_result	;volatile
 13136   004138  6A11               	clrf	(??_ADC_ISconversion_result+1)^0,c
 13137   00413A  C010  F011         	movff	??_ADC_ISconversion_result,??_ADC_ISconversion_result+1
 13138   00413E  6A10               	clrf	??_ADC_ISconversion_result^0,c
 13139   004140  2610               	addwf	??_ADC_ISconversion_result^0,f,c
 13140   004142  0E00               	movlw	0
 13141   004144  2211               	addwfc	(??_ADC_ISconversion_result+1)^0,f,c
 13142   004146  0E06               	movlw	6
 13143   004148  6E12               	movwf	(??_ADC_ISconversion_result+2)^0,c
 13144   00414A                     u11325:
 13145   00414A  3411               	rlcf	(??_ADC_ISconversion_result+1)^0,w,c
 13146   00414C  3211               	rrcf	(??_ADC_ISconversion_result+1)^0,f,c
 13147   00414E  3210               	rrcf	??_ADC_ISconversion_result^0,f,c
 13148   004150  2E12               	decfsz	(??_ADC_ISconversion_result+2)^0,f,c
 13149   004152  EFA5  F020         	goto	u11325
 13150   004156  500F               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 13151   004158  6ED9               	movwf	fsr2l,c
 13152   00415A  6ADA               	clrf	fsr2h,c
 13153   00415C  C010  FFDE         	movff	??_ADC_ISconversion_result,postinc2
 13154   004160  C011  FFDD         	movff	??_ADC_ISconversion_result+1,postdec2
 13155   004164                     l11190:
 13156                           
 13157                           ;MKAL_layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
 13158   004164  0E01               	movlw	1
 13159   004166  6E13               	movwf	ADC_ISconversion_result@ret^0,c
 13160   004168                     l11192:
 13161                           
 13162                           ;MKAL_layer/ADC/hal_adc.c: 140:      return ret;
 13163   004168  5013               	movf	ADC_ISconversion_result@ret^0,w,c
 13164   00416A  0012               	return		;funcret
 13165   00416C                     __end_of_ADC_ISconversion_result:
 13166                           	callstack 0
 13167                           
 13168 ;; *************** function _ADC_ISconversion_done *****************
 13169 ;; Defined at:
 13170 ;;		line 111 in file "MKAL_layer/ADC/hal_adc.c"
 13171 ;; Parameters:    Size  Location     Type
 13172 ;;  ADC_conf        2   12[COMRAM] PTR const struct .
 13173 ;;		 -> ADC_(6), 
 13174 ;;  conversion_s    1   14[COMRAM] PTR unsigned char 
 13175 ;;		 -> ADC_get_conversion_blocking@l_conversion_status(1), 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  ret             1   15[COMRAM] unsigned char 
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      unsigned char 
 13180 ;; Registers used:
 13181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13187 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;Total ram usage:        4 bytes
 13192 ;; Hardware stack levels used: 1
 13193 ;; Hardware stack levels required when called: 4
 13194 ;; This function calls:
 13195 ;;		Nothing
 13196 ;; This function is called by:
 13197 ;;		_ADC_get_conversion_blocking
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           	psect	text75
 13202   004F02                     __ptext75:
 13203                           	callstack 0
 13204   004F02                     _ADC_ISconversion_done:
 13205                           	callstack 25
 13206   004F02                     
 13207                           ;MKAL_layer/ADC/hal_adc.c: 113:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_status)){
 13208   004F02  500D               	movf	ADC_ISconversion_done@ADC_conf^0,w,c
 13209   004F04  100E               	iorwf	(ADC_ISconversion_done@ADC_conf+1)^0,w,c
 13210   004F06  B4D8               	btfsc	status,2,c
 13211   004F08  EF88  F027         	goto	u11241
 13212   004F0C  EF8A  F027         	goto	u11240
 13213   004F10                     u11241:
 13214   004F10  EF92  F027         	goto	l11162
 13215   004F14                     u11240:
 13216   004F14  500F               	movf	ADC_ISconversion_done@conversion_status^0,w,c
 13217   004F16  A4D8               	btfss	status,2,c
 13218   004F18  EF90  F027         	goto	u11251
 13219   004F1C  EF92  F027         	goto	u11250
 13220   004F20                     u11251:
 13221   004F20  EF96  F027         	goto	l11164
 13222   004F24                     u11250:
 13223   004F24                     l11162:
 13224                           
 13225                           ;MKAL_layer/ADC/hal_adc.c: 114:         ret =(Std_ReturnType)0x00;
 13226   004F24  0E00               	movlw	0
 13227   004F26  6E10               	movwf	ADC_ISconversion_done@ret^0,c
 13228                           
 13229                           ;MKAL_layer/ADC/hal_adc.c: 115:     }
 13230   004F28  EFA5  F027         	goto	l11168
 13231   004F2C                     l11164:
 13232                           
 13233                           ;MKAL_layer/ADC/hal_adc.c: 117:         *conversion_status = (uint8)(!(ADCON0bits.GO_nDO
      +                          NE));
 13234   004F2C  500F               	movf	ADC_ISconversion_done@conversion_status^0,w,c
 13235   004F2E  6ED9               	movwf	fsr2l,c
 13236   004F30  6ADA               	clrf	fsr2h,c
 13237   004F32  A2C2               	btfss	194,1,c	;volatile
 13238   004F34  EF9E  F027         	goto	u11261
 13239   004F38  EFA1  F027         	goto	u11260
 13240   004F3C                     u11261:
 13241   004F3C  0E01               	movlw	1
 13242   004F3E  EFA2  F027         	goto	u11270
 13243   004F42                     u11260:
 13244   004F42  0E00               	movlw	0
 13245   004F44                     u11270:
 13246   004F44  6EDF               	movwf	indf2,c
 13247   004F46                     
 13248                           ;MKAL_layer/ADC/hal_adc.c: 118:         ret = (Std_ReturnType)0x01;
 13249   004F46  0E01               	movlw	1
 13250   004F48  6E10               	movwf	ADC_ISconversion_done@ret^0,c
 13251   004F4A                     l11168:
 13252                           
 13253                           ;MKAL_layer/ADC/hal_adc.c: 120:      return ret;
 13254   004F4A  5010               	movf	ADC_ISconversion_done@ret^0,w,c
 13255   004F4C  0012               	return		;funcret
 13256   004F4E                     __end_of_ADC_ISconversion_done:
 13257                           	callstack 0
 13258                           
 13259 ;; *************** function _interrupt_manager *****************
 13260 ;; Defined at:
 13261 ;;		line 153 in file "MKAL_layer/Interrupt/mcal_interrupt_manager.c"
 13262 ;; Parameters:    Size  Location     Type
 13263 ;;		None
 13264 ;; Auto vars:     Size  Location     Type
 13265 ;;		None
 13266 ;; Return value:  Size  Location     Type
 13267 ;;                  1    wreg      void 
 13268 ;; Registers used:
 13269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13270 ;; Tracked objects:
 13271 ;;		On entry : 0/0
 13272 ;;		On exit  : 0/0
 13273 ;;		Unchanged: 0/0
 13274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13279 ;;Total ram usage:        6 bytes
 13280 ;; Hardware stack levels used: 1
 13281 ;; Hardware stack levels required when called: 3
 13282 ;; This function calls:
 13283 ;;		_ADC_handeler_funvtion
 13284 ;;		_CCP1_ISR
 13285 ;;		_CCP2_ISR
 13286 ;;		_INT0_ISR
 13287 ;;		_INT1_ISR
 13288 ;;		_INT2_ISR
 13289 ;;		_MSSP_I2C_BC_ISR
 13290 ;;		_MSSP_I2C_ISR
 13291 ;;		_RB4_ISR
 13292 ;;		_RB5_ISR
 13293 ;;		_RB6_ISR
 13294 ;;		_RB7_ISR
 13295 ;;		_TIMER0_ISR
 13296 ;;		_TIMER1_ISR
 13297 ;;		_TIMER2_ISR
 13298 ;;		_TIMER3_ISR
 13299 ;;		_USART_RX_ISR
 13300 ;;		_USART_TX_ISR
 13301 ;; This function is called by:
 13302 ;;		Interrupt level 2
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	intcode
 13307   000008                     __pintcode:
 13308                           	callstack 0
 13309   000008                     _interrupt_manager:
 13310                           	callstack 22
 13311                           
 13312                           ;incstack = 0
 13313   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13314   00000A  ED0A  F012         	call	int_func,f	;refresh shadow registers
 13315                           
 13316                           	psect	intcode_body
 13317   002414                     __pintcode_body:
 13318                           	callstack 22
 13319   002414                     int_func:
 13320                           	callstack 22
 13321   002414  0006               	pop		; remove dummy address from shadow register refresh
 13322   002416  CFFA F007          	movff	pclath,??_interrupt_manager
 13323   00241A  CFFB F008          	movff	pclatu,??_interrupt_manager+1
 13324   00241E  CFD9 F009          	movff	fsr2l,??_interrupt_manager+2
 13325   002422  CFDA F00A          	movff	fsr2h,??_interrupt_manager+3
 13326   002426  CFF3 F00B          	movff	prodl,??_interrupt_manager+4
 13327   00242A  CFF4 F00C          	movff	prodh,??_interrupt_manager+5
 13328   00242E                     
 13329                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 155:         if((1 == INTCONbits.INT0IF)
      +                           && (1 == INTCONbits.INT0IF)){
 13330   00242E  A2F2               	btfss	242,1,c	;volatile
 13331   002430  EF1C  F012         	goto	i2u829_41
 13332   002434  EF1E  F012         	goto	i2u829_40
 13333   002438                     i2u829_41:
 13334   002438  EF27  F012         	goto	i2l1350
 13335   00243C                     i2u829_40:
 13336   00243C  A2F2               	btfss	242,1,c	;volatile
 13337   00243E  EF23  F012         	goto	i2u830_41
 13338   002442  EF25  F012         	goto	i2u830_40
 13339   002446                     i2u830_41:
 13340   002446  EF27  F012         	goto	i2l1350
 13341   00244A                     i2u830_40:
 13342   00244A                     
 13343                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 156:             INT0_ISR();
 13344   00244A  EC1E  F02A         	call	_INT0_ISR	;wreg free
 13345   00244E                     i2l1350:
 13346                           
 13347                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 159:         if((1 == INTCON3bits.INT1IE
      +                          ) && (1 == INTCON3bits.INT1IF)){
 13348   00244E  A6F0               	btfss	240,3,c	;volatile
 13349   002450  EF2C  F012         	goto	i2u831_41
 13350   002454  EF2E  F012         	goto	i2u831_40
 13351   002458                     i2u831_41:
 13352   002458  EF37  F012         	goto	i2l1352
 13353   00245C                     i2u831_40:
 13354   00245C  A0F0               	btfss	240,0,c	;volatile
 13355   00245E  EF33  F012         	goto	i2u832_41
 13356   002462  EF35  F012         	goto	i2u832_40
 13357   002466                     i2u832_41:
 13358   002466  EF37  F012         	goto	i2l1352
 13359   00246A                     i2u832_40:
 13360   00246A                     
 13361                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 160:             INT1_ISR();
 13362   00246A  EC06  F02A         	call	_INT1_ISR	;wreg free
 13363   00246E                     i2l1352:
 13364                           
 13365                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 163:         if((1 == INTCON3bits.INT2IE
      +                          ) && (1 == INTCON3bits.INT2IF)){
 13366   00246E  A8F0               	btfss	240,4,c	;volatile
 13367   002470  EF3C  F012         	goto	i2u833_41
 13368   002474  EF3E  F012         	goto	i2u833_40
 13369   002478                     i2u833_41:
 13370   002478  EF47  F012         	goto	i2l1354
 13371   00247C                     i2u833_40:
 13372   00247C  A2F0               	btfss	240,1,c	;volatile
 13373   00247E  EF43  F012         	goto	i2u834_41
 13374   002482  EF45  F012         	goto	i2u834_40
 13375   002486                     i2u834_41:
 13376   002486  EF47  F012         	goto	i2l1354
 13377   00248A                     i2u834_40:
 13378   00248A                     
 13379                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 164:             INT2_ISR();
 13380   00248A  ECEE  F029         	call	_INT2_ISR	;wreg free
 13381   00248E                     i2l1354:
 13382                           
 13383                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 168:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 13384   00248E  A6F2               	btfss	242,3,c	;volatile
 13385   002490  EF4C  F012         	goto	i2u835_41
 13386   002494  EF4E  F012         	goto	i2u835_40
 13387   002498                     i2u835_41:
 13388   002498  EF69  F012         	goto	i2l1356
 13389   00249C                     i2u835_40:
 13390   00249C  A0F2               	btfss	242,0,c	;volatile
 13391   00249E  EF53  F012         	goto	i2u836_41
 13392   0024A2  EF55  F012         	goto	i2u836_40
 13393   0024A6                     i2u836_41:
 13394   0024A6  EF69  F012         	goto	i2l1356
 13395   0024AA                     i2u836_40:
 13396   0024AA  A881               	btfss	129,4,c	;volatile
 13397   0024AC  EF5A  F012         	goto	i2u837_41
 13398   0024B0  EF5C  F012         	goto	i2u837_40
 13399   0024B4                     i2u837_41:
 13400   0024B4  EF69  F012         	goto	i2l1356
 13401   0024B8                     i2u837_40:
 13402   0024B8  0472               	decf	_flag1^0,w,c
 13403   0024BA  A4D8               	btfss	status,2,c
 13404   0024BC  EF62  F012         	goto	i2u838_41
 13405   0024C0  EF64  F012         	goto	i2u838_40
 13406   0024C4                     i2u838_41:
 13407   0024C4  EF69  F012         	goto	i2l1356
 13408   0024C8                     i2u838_40:
 13409   0024C8                     
 13410                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 169:             && (PORTBbits.RB4 == GP
      +                          IO_HIGH) && (flag1 == 1)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 170:          
      +                             flag1 = 0;
 13411   0024C8  0E00               	movlw	0
 13412   0024CA  6E72               	movwf	_flag1^0,c
 13413   0024CC                     
 13414                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 171:             RB4_ISR(0);
 13415   0024CC  0E00               	movlw	0
 13416   0024CE  EC20  F02B         	call	_RB4_ISR
 13417   0024D2                     i2l1356:
 13418                           
 13419                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 174:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 13420   0024D2  A6F2               	btfss	242,3,c	;volatile
 13421   0024D4  EF6E  F012         	goto	i2u839_41
 13422   0024D8  EF70  F012         	goto	i2u839_40
 13423   0024DC                     i2u839_41:
 13424   0024DC  EF8B  F012         	goto	i2l1358
 13425   0024E0                     i2u839_40:
 13426   0024E0  A0F2               	btfss	242,0,c	;volatile
 13427   0024E2  EF75  F012         	goto	i2u840_41
 13428   0024E6  EF77  F012         	goto	i2u840_40
 13429   0024EA                     i2u840_41:
 13430   0024EA  EF8B  F012         	goto	i2l1358
 13431   0024EE                     i2u840_40:
 13432   0024EE  B881               	btfsc	129,4,c	;volatile
 13433   0024F0  EF7C  F012         	goto	i2u841_41
 13434   0024F4  EF7E  F012         	goto	i2u841_40
 13435   0024F8                     i2u841_41:
 13436   0024F8  EF8B  F012         	goto	i2l1358
 13437   0024FC                     i2u841_40:
 13438   0024FC  5072               	movf	_flag1^0,w,c
 13439   0024FE  A4D8               	btfss	status,2,c
 13440   002500  EF84  F012         	goto	i2u842_41
 13441   002504  EF86  F012         	goto	i2u842_40
 13442   002508                     i2u842_41:
 13443   002508  EF8B  F012         	goto	i2l1358
 13444   00250C                     i2u842_40:
 13445   00250C                     
 13446                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 175:             && (PORTBbits.RB4 == GP
      +                          IO_LOW) && (flag1 == 0)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 176:           
      +                            flag1 = 1;
 13447   00250C  0E01               	movlw	1
 13448   00250E  6E72               	movwf	_flag1^0,c
 13449   002510                     
 13450                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 177:             RB4_ISR(1);
 13451   002510  0E01               	movlw	1
 13452   002512  EC20  F02B         	call	_RB4_ISR
 13453   002516                     i2l1358:
 13454                           
 13455                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 180:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 13456   002516  A6F2               	btfss	242,3,c	;volatile
 13457   002518  EF90  F012         	goto	i2u843_41
 13458   00251C  EF92  F012         	goto	i2u843_40
 13459   002520                     i2u843_41:
 13460   002520  EFAD  F012         	goto	i2l1360
 13461   002524                     i2u843_40:
 13462   002524  A0F2               	btfss	242,0,c	;volatile
 13463   002526  EF97  F012         	goto	i2u844_41
 13464   00252A  EF99  F012         	goto	i2u844_40
 13465   00252E                     i2u844_41:
 13466   00252E  EFAD  F012         	goto	i2l1360
 13467   002532                     i2u844_40:
 13468   002532  AA81               	btfss	129,5,c	;volatile
 13469   002534  EF9E  F012         	goto	i2u845_41
 13470   002538  EFA0  F012         	goto	i2u845_40
 13471   00253C                     i2u845_41:
 13472   00253C  EFAD  F012         	goto	i2l1360
 13473   002540                     i2u845_40:
 13474   002540  0471               	decf	_flag2^0,w,c
 13475   002542  A4D8               	btfss	status,2,c
 13476   002544  EFA6  F012         	goto	i2u846_41
 13477   002548  EFA8  F012         	goto	i2u846_40
 13478   00254C                     i2u846_41:
 13479   00254C  EFAD  F012         	goto	i2l1360
 13480   002550                     i2u846_40:
 13481   002550                     
 13482                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 181:             && (PORTBbits.RB5 == GP
      +                          IO_HIGH) && (flag2 == 1)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 182:          
      +                             flag2 = 0;
 13483   002550  0E00               	movlw	0
 13484   002552  6E71               	movwf	_flag2^0,c
 13485   002554                     
 13486                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 183:             RB5_ISR(0);
 13487   002554  0E00               	movlw	0
 13488   002556  EC13  F02B         	call	_RB5_ISR
 13489   00255A                     i2l1360:
 13490                           
 13491                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 186:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 13492   00255A  A6F2               	btfss	242,3,c	;volatile
 13493   00255C  EFB2  F012         	goto	i2u847_41
 13494   002560  EFB4  F012         	goto	i2u847_40
 13495   002564                     i2u847_41:
 13496   002564  EFCF  F012         	goto	i2l1362
 13497   002568                     i2u847_40:
 13498   002568  A0F2               	btfss	242,0,c	;volatile
 13499   00256A  EFB9  F012         	goto	i2u848_41
 13500   00256E  EFBB  F012         	goto	i2u848_40
 13501   002572                     i2u848_41:
 13502   002572  EFCF  F012         	goto	i2l1362
 13503   002576                     i2u848_40:
 13504   002576  BA81               	btfsc	129,5,c	;volatile
 13505   002578  EFC0  F012         	goto	i2u849_41
 13506   00257C  EFC2  F012         	goto	i2u849_40
 13507   002580                     i2u849_41:
 13508   002580  EFCF  F012         	goto	i2l1362
 13509   002584                     i2u849_40:
 13510   002584  5071               	movf	_flag2^0,w,c
 13511   002586  A4D8               	btfss	status,2,c
 13512   002588  EFC8  F012         	goto	i2u850_41
 13513   00258C  EFCA  F012         	goto	i2u850_40
 13514   002590                     i2u850_41:
 13515   002590  EFCF  F012         	goto	i2l1362
 13516   002594                     i2u850_40:
 13517   002594                     
 13518                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 187:             && (PORTBbits.RB5 == GP
      +                          IO_LOW) && (flag2 == 0)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 188:           
      +                            flag2 =1;
 13519   002594  0E01               	movlw	1
 13520   002596  6E71               	movwf	_flag2^0,c
 13521   002598                     
 13522                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 189:             RB5_ISR(1);
 13523   002598  0E01               	movlw	1
 13524   00259A  EC13  F02B         	call	_RB5_ISR
 13525   00259E                     i2l1362:
 13526                           
 13527                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 192:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 13528   00259E  A6F2               	btfss	242,3,c	;volatile
 13529   0025A0  EFD4  F012         	goto	i2u851_41
 13530   0025A4  EFD6  F012         	goto	i2u851_40
 13531   0025A8                     i2u851_41:
 13532   0025A8  EFF1  F012         	goto	i2l1364
 13533   0025AC                     i2u851_40:
 13534   0025AC  A0F2               	btfss	242,0,c	;volatile
 13535   0025AE  EFDB  F012         	goto	i2u852_41
 13536   0025B2  EFDD  F012         	goto	i2u852_40
 13537   0025B6                     i2u852_41:
 13538   0025B6  EFF1  F012         	goto	i2l1364
 13539   0025BA                     i2u852_40:
 13540   0025BA  AC81               	btfss	129,6,c	;volatile
 13541   0025BC  EFE2  F012         	goto	i2u853_41
 13542   0025C0  EFE4  F012         	goto	i2u853_40
 13543   0025C4                     i2u853_41:
 13544   0025C4  EFF1  F012         	goto	i2l1364
 13545   0025C8                     i2u853_40:
 13546   0025C8  0470               	decf	_flag3^0,w,c
 13547   0025CA  A4D8               	btfss	status,2,c
 13548   0025CC  EFEA  F012         	goto	i2u854_41
 13549   0025D0  EFEC  F012         	goto	i2u854_40
 13550   0025D4                     i2u854_41:
 13551   0025D4  EFF1  F012         	goto	i2l1364
 13552   0025D8                     i2u854_40:
 13553   0025D8                     
 13554                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 193:             && (PORTBbits.RB6 == GP
      +                          IO_HIGH) && (1 == flag3)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 194:          
      +                             flag3 = 0;
 13555   0025D8  0E00               	movlw	0
 13556   0025DA  6E70               	movwf	_flag3^0,c
 13557   0025DC                     
 13558                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 195:             RB6_ISR(0);
 13559   0025DC  0E00               	movlw	0
 13560   0025DE  EC06  F02B         	call	_RB6_ISR
 13561   0025E2                     i2l1364:
 13562                           
 13563                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 198:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 13564   0025E2  A6F2               	btfss	242,3,c	;volatile
 13565   0025E4  EFF6  F012         	goto	i2u855_41
 13566   0025E8  EFF8  F012         	goto	i2u855_40
 13567   0025EC                     i2u855_41:
 13568   0025EC  EF13  F013         	goto	i2l1366
 13569   0025F0                     i2u855_40:
 13570   0025F0  A0F2               	btfss	242,0,c	;volatile
 13571   0025F2  EFFD  F012         	goto	i2u856_41
 13572   0025F6  EFFF  F012         	goto	i2u856_40
 13573   0025FA                     i2u856_41:
 13574   0025FA  EF13  F013         	goto	i2l1366
 13575   0025FE                     i2u856_40:
 13576   0025FE  BC81               	btfsc	129,6,c	;volatile
 13577   002600  EF04  F013         	goto	i2u857_41
 13578   002604  EF06  F013         	goto	i2u857_40
 13579   002608                     i2u857_41:
 13580   002608  EF13  F013         	goto	i2l1366
 13581   00260C                     i2u857_40:
 13582   00260C  5070               	movf	_flag3^0,w,c
 13583   00260E  A4D8               	btfss	status,2,c
 13584   002610  EF0C  F013         	goto	i2u858_41
 13585   002614  EF0E  F013         	goto	i2u858_40
 13586   002618                     i2u858_41:
 13587   002618  EF13  F013         	goto	i2l1366
 13588   00261C                     i2u858_40:
 13589   00261C                     
 13590                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 199:             && (PORTBbits.RB6 == GP
      +                          IO_LOW) && (0 == flag3)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 200:           
      +                            flag3 = 1;
 13591   00261C  0E01               	movlw	1
 13592   00261E  6E70               	movwf	_flag3^0,c
 13593   002620                     
 13594                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 201:             RB6_ISR(1);
 13595   002620  0E01               	movlw	1
 13596   002622  EC06  F02B         	call	_RB6_ISR
 13597   002626                     i2l1366:
 13598                           
 13599                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 204:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 13600   002626  A6F2               	btfss	242,3,c	;volatile
 13601   002628  EF18  F013         	goto	i2u859_41
 13602   00262C  EF1A  F013         	goto	i2u859_40
 13603   002630                     i2u859_41:
 13604   002630  EF35  F013         	goto	i2l1368
 13605   002634                     i2u859_40:
 13606   002634  A0F2               	btfss	242,0,c	;volatile
 13607   002636  EF1F  F013         	goto	i2u860_41
 13608   00263A  EF21  F013         	goto	i2u860_40
 13609   00263E                     i2u860_41:
 13610   00263E  EF35  F013         	goto	i2l1368
 13611   002642                     i2u860_40:
 13612   002642  AE81               	btfss	129,7,c	;volatile
 13613   002644  EF26  F013         	goto	i2u861_41
 13614   002648  EF28  F013         	goto	i2u861_40
 13615   00264C                     i2u861_41:
 13616   00264C  EF35  F013         	goto	i2l1368
 13617   002650                     i2u861_40:
 13618   002650  046F               	decf	_flag4^0,w,c
 13619   002652  A4D8               	btfss	status,2,c
 13620   002654  EF2E  F013         	goto	i2u862_41
 13621   002658  EF30  F013         	goto	i2u862_40
 13622   00265C                     i2u862_41:
 13623   00265C  EF35  F013         	goto	i2l1368
 13624   002660                     i2u862_40:
 13625   002660                     
 13626                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 205:             && (PORTBbits.RB7 == GP
      +                          IO_HIGH) && (1 == flag4)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 206:          
      +                             flag4 = 0;
 13627   002660  0E00               	movlw	0
 13628   002662  6E6F               	movwf	_flag4^0,c
 13629   002664                     
 13630                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 207:             RB7_ISR(0);
 13631   002664  0E00               	movlw	0
 13632   002666  ECF9  F02A         	call	_RB7_ISR
 13633   00266A                     i2l1368:
 13634                           
 13635                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 210:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 13636   00266A  A6F2               	btfss	242,3,c	;volatile
 13637   00266C  EF3A  F013         	goto	i2u863_41
 13638   002670  EF3C  F013         	goto	i2u863_40
 13639   002674                     i2u863_41:
 13640   002674  EF57  F013         	goto	i2l1370
 13641   002678                     i2u863_40:
 13642   002678  A0F2               	btfss	242,0,c	;volatile
 13643   00267A  EF41  F013         	goto	i2u864_41
 13644   00267E  EF43  F013         	goto	i2u864_40
 13645   002682                     i2u864_41:
 13646   002682  EF57  F013         	goto	i2l1370
 13647   002686                     i2u864_40:
 13648   002686  BE81               	btfsc	129,7,c	;volatile
 13649   002688  EF48  F013         	goto	i2u865_41
 13650   00268C  EF4A  F013         	goto	i2u865_40
 13651   002690                     i2u865_41:
 13652   002690  EF57  F013         	goto	i2l1370
 13653   002694                     i2u865_40:
 13654   002694  506F               	movf	_flag4^0,w,c
 13655   002696  A4D8               	btfss	status,2,c
 13656   002698  EF50  F013         	goto	i2u866_41
 13657   00269C  EF52  F013         	goto	i2u866_40
 13658   0026A0                     i2u866_41:
 13659   0026A0  EF57  F013         	goto	i2l1370
 13660   0026A4                     i2u866_40:
 13661   0026A4                     
 13662                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 211:             && (PORTBbits.RB7 == GP
      +                          IO_LOW) && (0 == flag4)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 212:           
      +                            flag4 = 1;
 13663   0026A4  0E01               	movlw	1
 13664   0026A6  6E6F               	movwf	_flag4^0,c
 13665   0026A8                     
 13666                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 213:             RB7_ISR(1);
 13667   0026A8  0E01               	movlw	1
 13668   0026AA  ECF9  F02A         	call	_RB7_ISR
 13669   0026AE                     i2l1370:
 13670                           
 13671                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 217:         if((1 == PIE1bits.ADIE) && 
      +                          (1 == PIR1bits.ADIF)){
 13672   0026AE  AC9D               	btfss	157,6,c	;volatile
 13673   0026B0  EF5C  F013         	goto	i2u867_41
 13674   0026B4  EF5E  F013         	goto	i2u867_40
 13675   0026B8                     i2u867_41:
 13676   0026B8  EF67  F013         	goto	i2l1372
 13677   0026BC                     i2u867_40:
 13678   0026BC  AC9E               	btfss	158,6,c	;volatile
 13679   0026BE  EF63  F013         	goto	i2u868_41
 13680   0026C2  EF65  F013         	goto	i2u868_40
 13681   0026C6                     i2u868_41:
 13682   0026C6  EF67  F013         	goto	i2l1372
 13683   0026CA                     i2u868_40:
 13684   0026CA                     
 13685                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 218:             ADC_handeler_funvtion()
      +                          ;
 13686   0026CA  EC67  F02B         	call	_ADC_handeler_funvtion	;wreg free
 13687   0026CE                     i2l1372:
 13688                           
 13689                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 222:         if((1 == INTCONbits.TMR0IE)
      +                           && (1 == INTCONbits.TMR0IF)){
 13690   0026CE  AAF2               	btfss	242,5,c	;volatile
 13691   0026D0  EF6C  F013         	goto	i2u869_41
 13692   0026D4  EF6E  F013         	goto	i2u869_40
 13693   0026D8                     i2u869_41:
 13694   0026D8  EF77  F013         	goto	i2l1374
 13695   0026DC                     i2u869_40:
 13696   0026DC  A4F2               	btfss	242,2,c	;volatile
 13697   0026DE  EF73  F013         	goto	i2u870_41
 13698   0026E2  EF75  F013         	goto	i2u870_40
 13699   0026E6                     i2u870_41:
 13700   0026E6  EF77  F013         	goto	i2l1374
 13701   0026EA                     i2u870_40:
 13702   0026EA                     
 13703                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 223:             TIMER0_ISR();
 13704   0026EA  EC4D  F02B         	call	_TIMER0_ISR	;wreg free
 13705   0026EE                     i2l1374:
 13706                           
 13707                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 227:         if((1 == PIE1bits.TMR1IE) &
      +                          & (1 == PIR1bits.TMR1IF)){
 13708   0026EE  A09D               	btfss	157,0,c	;volatile
 13709   0026F0  EF7C  F013         	goto	i2u871_41
 13710   0026F4  EF7E  F013         	goto	i2u871_40
 13711   0026F8                     i2u871_41:
 13712   0026F8  EF87  F013         	goto	i2l1376
 13713   0026FC                     i2u871_40:
 13714   0026FC  A09E               	btfss	158,0,c	;volatile
 13715   0026FE  EF83  F013         	goto	i2u872_41
 13716   002702  EF85  F013         	goto	i2u872_40
 13717   002706                     i2u872_41:
 13718   002706  EF87  F013         	goto	i2l1376
 13719   00270A                     i2u872_40:
 13720   00270A                     
 13721                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 228:             TIMER1_ISR();
 13722   00270A  EC46  F02B         	call	_TIMER1_ISR	;wreg free
 13723   00270E                     i2l1376:
 13724                           
 13725                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 232:         if((1 == PIE1bits.TMR2IE) &
      +                          & (1 == PIR1bits.TMR2IF)){
 13726   00270E  A29D               	btfss	157,1,c	;volatile
 13727   002710  EF8C  F013         	goto	i2u873_41
 13728   002714  EF8E  F013         	goto	i2u873_40
 13729   002718                     i2u873_41:
 13730   002718  EF97  F013         	goto	i2l1378
 13731   00271C                     i2u873_40:
 13732   00271C  A29E               	btfss	158,1,c	;volatile
 13733   00271E  EF93  F013         	goto	i2u874_41
 13734   002722  EF95  F013         	goto	i2u874_40
 13735   002726                     i2u874_41:
 13736   002726  EF97  F013         	goto	i2l1378
 13737   00272A                     i2u874_40:
 13738   00272A                     
 13739                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 233:             TIMER2_ISR();
 13740   00272A  EC54  F02B         	call	_TIMER2_ISR	;wreg free
 13741   00272E                     i2l1378:
 13742                           
 13743                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 237:         if((1 == PIE2bits.TMR3IE) &
      +                          & (1 == PIR2bits.TMR3IF)){
 13744   00272E  A2A0               	btfss	160,1,c	;volatile
 13745   002730  EF9C  F013         	goto	i2u875_41
 13746   002734  EF9E  F013         	goto	i2u875_40
 13747   002738                     i2u875_41:
 13748   002738  EFA7  F013         	goto	i2l1380
 13749   00273C                     i2u875_40:
 13750   00273C  A2A1               	btfss	161,1,c	;volatile
 13751   00273E  EFA3  F013         	goto	i2u876_41
 13752   002742  EFA5  F013         	goto	i2u876_40
 13753   002746                     i2u876_41:
 13754   002746  EFA7  F013         	goto	i2l1380
 13755   00274A                     i2u876_40:
 13756   00274A                     
 13757                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 238:             TIMER3_ISR();
 13758   00274A  EC3F  F02B         	call	_TIMER3_ISR	;wreg free
 13759   00274E                     i2l1380:
 13760                           
 13761                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 242:         if((1 == PIE1bits.CCP1IE) &
      +                          & (1 == PIR1bits.CCP1IF)){
 13762   00274E  A49D               	btfss	157,2,c	;volatile
 13763   002750  EFAC  F013         	goto	i2u877_41
 13764   002754  EFAE  F013         	goto	i2u877_40
 13765   002758                     i2u877_41:
 13766   002758  EFB7  F013         	goto	i2l1382
 13767   00275C                     i2u877_40:
 13768   00275C  A49E               	btfss	158,2,c	;volatile
 13769   00275E  EFB3  F013         	goto	i2u878_41
 13770   002762  EFB5  F013         	goto	i2u878_40
 13771   002766                     i2u878_41:
 13772   002766  EFB7  F013         	goto	i2l1382
 13773   00276A                     i2u878_40:
 13774   00276A                     
 13775                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 243:             CCP1_ISR();
 13776   00276A  EC65  F02B         	call	_CCP1_ISR	;wreg free
 13777   00276E                     i2l1382:
 13778                           
 13779                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 247:         if((1 == PIE2bits.CCP2IE) &
      +                          & (1 == PIR2bits.CCP2IF)){
 13780   00276E  A0A0               	btfss	160,0,c	;volatile
 13781   002770  EFBC  F013         	goto	i2u879_41
 13782   002774  EFBE  F013         	goto	i2u879_40
 13783   002778                     i2u879_41:
 13784   002778  EFC7  F013         	goto	i2l1384
 13785   00277C                     i2u879_40:
 13786   00277C  A0A1               	btfss	161,0,c	;volatile
 13787   00277E  EFC3  F013         	goto	i2u880_41
 13788   002782  EFC5  F013         	goto	i2u880_40
 13789   002786                     i2u880_41:
 13790   002786  EFC7  F013         	goto	i2l1384
 13791   00278A                     i2u880_40:
 13792   00278A                     
 13793                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 248:             CCP2_ISR();
 13794   00278A  EC63  F02B         	call	_CCP2_ISR	;wreg free
 13795   00278E                     i2l1384:
 13796                           
 13797                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 252:         if((1 == PIE1bits.TXIE) && 
      +                          (1 == PIR1bits.TXIF)){
 13798   00278E  A89D               	btfss	157,4,c	;volatile
 13799   002790  EFCC  F013         	goto	i2u881_41
 13800   002794  EFCE  F013         	goto	i2u881_40
 13801   002798                     i2u881_41:
 13802   002798  EFD7  F013         	goto	i2l1386
 13803   00279C                     i2u881_40:
 13804   00279C  A89E               	btfss	158,4,c	;volatile
 13805   00279E  EFD3  F013         	goto	i2u882_41
 13806   0027A2  EFD5  F013         	goto	i2u882_40
 13807   0027A6                     i2u882_41:
 13808   0027A6  EFD7  F013         	goto	i2l1386
 13809   0027AA                     i2u882_40:
 13810   0027AA                     
 13811                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 253:             USART_TX_ISR();
 13812   0027AA  EC5D  F02B         	call	_USART_TX_ISR	;wreg free
 13813   0027AE                     i2l1386:
 13814                           
 13815                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 257:         if((1 == PIE1bits.RCIE) && 
      +                          (1 == PIR1bits.RCIF)){
 13816   0027AE  AA9D               	btfss	157,5,c	;volatile
 13817   0027B0  EFDC  F013         	goto	i2u883_41
 13818   0027B4  EFDE  F013         	goto	i2u883_40
 13819   0027B8                     i2u883_41:
 13820   0027B8  EFE7  F013         	goto	i2l1388
 13821   0027BC                     i2u883_40:
 13822   0027BC  AA9E               	btfss	158,5,c	;volatile
 13823   0027BE  EFE3  F013         	goto	i2u884_41
 13824   0027C2  EFE5  F013         	goto	i2u884_40
 13825   0027C6                     i2u884_41:
 13826   0027C6  EFE7  F013         	goto	i2l1388
 13827   0027CA                     i2u884_40:
 13828   0027CA                     
 13829                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 258:             USART_RX_ISR();
 13830   0027CA  EC36  F02A         	call	_USART_RX_ISR	;wreg free
 13831   0027CE                     i2l1388:
 13832                           
 13833                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 262:         if((1 == PIE1bits.SSPIE) &&
      +                           (1 == PIR1bits.SSPIF)){
 13834   0027CE  A69D               	btfss	157,3,c	;volatile
 13835   0027D0  EFEC  F013         	goto	i2u885_41
 13836   0027D4  EFEE  F013         	goto	i2u885_40
 13837   0027D8                     i2u885_41:
 13838   0027D8  EFF7  F013         	goto	i2l1390
 13839   0027DC                     i2u885_40:
 13840   0027DC  A69E               	btfss	158,3,c	;volatile
 13841   0027DE  EFF3  F013         	goto	i2u886_41
 13842   0027E2  EFF5  F013         	goto	i2u886_40
 13843   0027E6                     i2u886_41:
 13844   0027E6  EFF7  F013         	goto	i2l1390
 13845   0027EA                     i2u886_40:
 13846   0027EA                     
 13847                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 263:             MSSP_I2C_ISR();
 13848   0027EA  EC5F  F02B         	call	_MSSP_I2C_ISR	;wreg free
 13849   0027EE                     i2l1390:
 13850                           
 13851                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 267:         if((1 == PIE2bits.BCLIE) &&
      +                           (1 == IPR2bits.BCLIP)){
 13852   0027EE  A6A0               	btfss	160,3,c	;volatile
 13853   0027F0  EFFC  F013         	goto	i2u887_41
 13854   0027F4  EFFE  F013         	goto	i2u887_40
 13855   0027F8                     i2u887_41:
 13856   0027F8  EF07  F014         	goto	i2l1393
 13857   0027FC                     i2u887_40:
 13858   0027FC  A6A2               	btfss	162,3,c	;volatile
 13859   0027FE  EF03  F014         	goto	i2u888_41
 13860   002802  EF05  F014         	goto	i2u888_40
 13861   002806                     i2u888_41:
 13862   002806  EF07  F014         	goto	i2l1393
 13863   00280A                     i2u888_40:
 13864   00280A                     
 13865                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 268:             MSSP_I2C_BC_ISR();
 13866   00280A  EC61  F02B         	call	_MSSP_I2C_BC_ISR	;wreg free
 13867   00280E                     i2l1393:
 13868   00280E  C00C  FFF4         	movff	??_interrupt_manager+5,prodh
 13869   002812  C00B  FFF3         	movff	??_interrupt_manager+4,prodl
 13870   002816  C00A  FFDA         	movff	??_interrupt_manager+3,fsr2h
 13871   00281A  C009  FFD9         	movff	??_interrupt_manager+2,fsr2l
 13872   00281E  C008  FFFB         	movff	??_interrupt_manager+1,pclatu
 13873   002822  C007  FFFA         	movff	??_interrupt_manager,pclath
 13874   002826  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13875   002828  0011               	retfie		f
 13876   00282A                     __end_of_interrupt_manager:
 13877                           	callstack 0
 13878                           
 13879 ;; *************** function _USART_TX_ISR *****************
 13880 ;; Defined at:
 13881 ;;		line 258 in file "MKAL_layer/USART/hal_usart.c"
 13882 ;; Parameters:    Size  Location     Type
 13883 ;;		None
 13884 ;; Auto vars:     Size  Location     Type
 13885 ;;		None
 13886 ;; Return value:  Size  Location     Type
 13887 ;;                  1    wreg      void 
 13888 ;; Registers used:
 13889 ;;		None
 13890 ;; Tracked objects:
 13891 ;;		On entry : 0/0
 13892 ;;		On exit  : 0/0
 13893 ;;		Unchanged: 0/0
 13894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13899 ;;Total ram usage:        0 bytes
 13900 ;; Hardware stack levels used: 1
 13901 ;; This function calls:
 13902 ;;		Nothing
 13903 ;; This function is called by:
 13904 ;;		_interrupt_manager
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           	psect	text77
 13909   0056BA                     __ptext77:
 13910                           	callstack 0
 13911   0056BA                     _USART_TX_ISR:
 13912                           	callstack 24
 13913   0056BA                     
 13914                           ;MKAL_layer/USART/hal_usart.c: 259:     (PIE1bits.TXIE = 0);
 13915   0056BA  989D               	bcf	157,4,c	;volatile
 13916   0056BC  0012               	return		;funcret
 13917   0056BE                     __end_of_USART_TX_ISR:
 13918                           	callstack 0
 13919                           
 13920 ;; *************** function _USART_RX_ISR *****************
 13921 ;; Defined at:
 13922 ;;		line 266 in file "MKAL_layer/USART/hal_usart.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;		None
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;		None
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      void 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13940 ;;Total ram usage:        0 bytes
 13941 ;; Hardware stack levels used: 1
 13942 ;; Hardware stack levels required when called: 2
 13943 ;; This function calls:
 13944 ;;		NULL
 13945 ;;		_interrupt_usart_rx
 13946 ;; This function is called by:
 13947 ;;		_interrupt_manager
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text78
 13952   00546C                     __ptext78:
 13953                           	callstack 0
 13954   00546C                     _USART_RX_ISR:
 13955                           	callstack 22
 13956   00546C                     
 13957                           ;MKAL_layer/USART/hal_usart.c: 267:     if(USART_RX_Interrupthandler){
 13958   00546C  0100               	movlb	0	; () banked
 13959   00546E  5188               	movf	_USART_RX_Interrupthandler& (0+255),w,b
 13960   005470  1189               	iorwf	(_USART_RX_Interrupthandler+1)& (0+255),w,b
 13961   005472  B4D8               	btfsc	status,2,c
 13962   005474  EF3E  F02A         	goto	i2u747_41
 13963   005478  EF40  F02A         	goto	i2u747_40
 13964   00547C                     i2u747_41:
 13965   00547C  EF4C  F02A         	goto	i2l1763
 13966   005480                     i2u747_40:
 13967   005480                     
 13968                           ; BSR set to: 0
 13969                           ;MKAL_layer/USART/hal_usart.c: 268:         USART_RX_Interrupthandler();
 13970   005480  D802               	call	i2u748_48
 13971   005482  EF4C  F02A         	goto	i2u748_49
 13972   005486                     i2u748_48:
 13973   005486  0005               	push	
 13974   005488  6EFA               	movwf	pclath,c
 13975   00548A  5188               	movf	_USART_RX_Interrupthandler& (0+255),w,b
 13976   00548C  6EFD               	movwf	tosl,c
 13977   00548E  5189               	movf	(_USART_RX_Interrupthandler+1)& (0+255),w,b
 13978   005490  6EFE               	movwf	tosh,c
 13979   005492  6AFF               	clrf	tosu,c
 13980   005494  50FA               	movf	pclath,w,c
 13981   005496  0012               	return		;indir
 13982   005498                     i2u748_49:
 13983   005498                     i2l1763:
 13984   005498  0012               	return		;funcret
 13985   00549A                     __end_of_USART_RX_ISR:
 13986                           	callstack 0
 13987                           
 13988 ;; *************** function _interrupt_usart_rx *****************
 13989 ;; Defined at:
 13990 ;;		line 210 in file "main.c"
 13991 ;; Parameters:    Size  Location     Type
 13992 ;;		None
 13993 ;; Auto vars:     Size  Location     Type
 13994 ;;  ret_data        1    1[COMRAM] volatile unsigned char 
 13995 ;; Return value:  Size  Location     Type
 13996 ;;                  1    wreg      void 
 13997 ;; Registers used:
 13998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13999 ;; Tracked objects:
 14000 ;;		On entry : 0/0
 14001 ;;		On exit  : 0/0
 14002 ;;		Unchanged: 0/0
 14003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14008 ;;Total ram usage:        1 bytes
 14009 ;; Hardware stack levels used: 1
 14010 ;; Hardware stack levels required when called: 1
 14011 ;; This function calls:
 14012 ;;		_usart_ASYNC_read_byte_blocking
 14013 ;; This function is called by:
 14014 ;;		_USART_RX_ISR
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text79
 14019   00566C                     __ptext79:
 14020                           	callstack 0
 14021   00566C                     _interrupt_usart_rx:
 14022                           	callstack 22
 14023   00566C                     
 14024                           ;main.c: 211:     volatile uint8 ret_data = 0;
 14025   00566C  0E00               	movlw	0
 14026   00566E  6E02               	movwf	interrupt_usart_rx@ret_data^0,c	;volatile
 14027   005670                     
 14028                           ;main.c: 212:     ret = usart_ASYNC_read_byte_blocking (&dataReceiveUART);
 14029   005670  0E6E               	movlw	low _dataReceiveUART
 14030   005672  6E01               	movwf	usart_ASYNC_read_byte_blocking@data^0,c
 14031   005674  ECDE  F02A         	call	_usart_ASYNC_read_byte_blocking	;wreg free
 14032   005678  0100               	movlb	0	; () banked
 14033   00567A  6FC4               	movwf	_ret& (0+255),b
 14034   00567C                     
 14035                           ; BSR set to: 0
 14036   00567C  0012               	return		;funcret
 14037   00567E                     __end_of_interrupt_usart_rx:
 14038                           	callstack 0
 14039                           
 14040 ;; *************** function _usart_ASYNC_read_byte_blocking *****************
 14041 ;; Defined at:
 14042 ;;		line 57 in file "MKAL_layer/USART/hal_usart.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;  data            1    0[COMRAM] PTR unsigned char 
 14045 ;;		 -> dataReceiveUART(1), 
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;  ret             1    0        unsigned char 
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  1    wreg      unsigned char 
 14050 ;; Registers used:
 14051 ;;		wreg, fsr2l, fsr2h, status,2
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14057 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;Total ram usage:        1 bytes
 14062 ;; Hardware stack levels used: 1
 14063 ;; This function calls:
 14064 ;;		Nothing
 14065 ;; This function is called by:
 14066 ;;		_interrupt_usart_rx
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text80
 14071   0055BC                     __ptext80:
 14072                           	callstack 0
 14073   0055BC                     _usart_ASYNC_read_byte_blocking:
 14074                           	callstack 22
 14075   0055BC                     i2l1690:
 14076                           
 14077                           ;MKAL_layer/USART/hal_usart.c: 59:         while(!PIR1bits.RCIF){
 14078   0055BC  AA9E               	btfss	158,5,c	;volatile
 14079   0055BE  EFE3  F02A         	goto	i2u585_41
 14080   0055C2  EFE5  F02A         	goto	i2u585_40
 14081   0055C6                     i2u585_41:
 14082   0055C6  EFDE  F02A         	goto	i2l1690
 14083   0055CA                     i2u585_40:
 14084   0055CA                     
 14085                           ;MKAL_layer/USART/hal_usart.c: 61:         *data = RCREG;
 14086   0055CA  5001               	movf	usart_ASYNC_read_byte_blocking@data^0,w,c
 14087   0055CC  6ED9               	movwf	fsr2l,c
 14088   0055CE  6ADA               	clrf	fsr2h,c
 14089   0055D0  CFAE FFDF          	movff	4014,indf2	;volatile
 14090   0055D4                     
 14091                           ;MKAL_layer/USART/hal_usart.c: 63:     return ret;
 14092   0055D4  0E01               	movlw	1
 14093   0055D6  0012               	return		;funcret
 14094   0055D8                     __end_of_usart_ASYNC_read_byte_blocking:
 14095                           	callstack 0
 14096                           
 14097 ;; *************** function _TIMER3_ISR *****************
 14098 ;; Defined at:
 14099 ;;		line 129 in file "MKAL_layer/timer3/hal_timer3.c"
 14100 ;; Parameters:    Size  Location     Type
 14101 ;;		None
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;		None
 14104 ;; Return value:  Size  Location     Type
 14105 ;;                  1    wreg      void 
 14106 ;; Registers used:
 14107 ;;		wreg, status,2
 14108 ;; Tracked objects:
 14109 ;;		On entry : 0/0
 14110 ;;		On exit  : 0/0
 14111 ;;		Unchanged: 0/0
 14112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14117 ;;Total ram usage:        0 bytes
 14118 ;; Hardware stack levels used: 1
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_interrupt_manager
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126                           	psect	text81
 14127   00567E                     __ptext81:
 14128                           	callstack 0
 14129   00567E                     _TIMER3_ISR:
 14130                           	callstack 24
 14131   00567E                     
 14132                           ;MKAL_layer/timer3/hal_timer3.c: 131:     (PIR2bits.TMR3IF = 0);
 14133   00567E  92A1               	bcf	161,1,c	;volatile
 14134   005680                     
 14135                           ;MKAL_layer/timer3/hal_timer3.c: 133:     TMR3H = (Timer3_preload >> 8);
 14136   005680  0100               	movlb	0	; () banked
 14137   005682  518D               	movf	(_Timer3_preload+1)& (0+255),w,b
 14138   005684  6EB3               	movwf	179,c	;volatile
 14139   005686                     
 14140                           ; BSR set to: 0
 14141                           ;MKAL_layer/timer3/hal_timer3.c: 134:     TMR3L = (uint8)(Timer3_preload);
 14142   005686  C08C  FFB2         	movff	_Timer3_preload,4018	;volatile
 14143   00568A                     
 14144                           ; BSR set to: 0
 14145   00568A  0012               	return		;funcret
 14146   00568C                     __end_of_TIMER3_ISR:
 14147                           	callstack 0
 14148                           
 14149 ;; *************** function _TIMER2_ISR *****************
 14150 ;; Defined at:
 14151 ;;		line 95 in file "MKAL_layer/timer2/hal_timer2.c"
 14152 ;; Parameters:    Size  Location     Type
 14153 ;;		None
 14154 ;; Auto vars:     Size  Location     Type
 14155 ;;		None
 14156 ;; Return value:  Size  Location     Type
 14157 ;;                  1    wreg      void 
 14158 ;; Registers used:
 14159 ;;		None
 14160 ;; Tracked objects:
 14161 ;;		On entry : 0/0
 14162 ;;		On exit  : 0/0
 14163 ;;		Unchanged: 0/0
 14164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14169 ;;Total ram usage:        0 bytes
 14170 ;; Hardware stack levels used: 1
 14171 ;; This function calls:
 14172 ;;		Nothing
 14173 ;; This function is called by:
 14174 ;;		_interrupt_manager
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           	psect	text82
 14179   0056A8                     __ptext82:
 14180                           	callstack 0
 14181   0056A8                     _TIMER2_ISR:
 14182                           	callstack 24
 14183   0056A8                     
 14184                           ;MKAL_layer/timer2/hal_timer2.c: 97:     (PIR1bits.TMR2IF = 0);
 14185   0056A8  929E               	bcf	158,1,c	;volatile
 14186                           
 14187                           ;MKAL_layer/timer2/hal_timer2.c: 99:     TMR2 = Timer2_preload;
 14188   0056AA  C0C0  FFCC         	movff	_Timer2_preload,4044	;volatile
 14189   0056AE  0012               	return		;funcret
 14190   0056B0                     __end_of_TIMER2_ISR:
 14191                           	callstack 0
 14192                           
 14193 ;; *************** function _TIMER1_ISR *****************
 14194 ;; Defined at:
 14195 ;;		line 153 in file "MKAL_layer/timer1/hal_timer1.c"
 14196 ;; Parameters:    Size  Location     Type
 14197 ;;		None
 14198 ;; Auto vars:     Size  Location     Type
 14199 ;;		None
 14200 ;; Return value:  Size  Location     Type
 14201 ;;                  1    wreg      void 
 14202 ;; Registers used:
 14203 ;;		wreg, status,2
 14204 ;; Tracked objects:
 14205 ;;		On entry : 0/0
 14206 ;;		On exit  : 0/0
 14207 ;;		Unchanged: 0/0
 14208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;Total ram usage:        0 bytes
 14214 ;; Hardware stack levels used: 1
 14215 ;; This function calls:
 14216 ;;		Nothing
 14217 ;; This function is called by:
 14218 ;;		_interrupt_manager
 14219 ;; This function uses a non-reentrant model
 14220 ;;
 14221                           
 14222                           	psect	text83
 14223   00568C                     __ptext83:
 14224                           	callstack 0
 14225   00568C                     _TIMER1_ISR:
 14226                           	callstack 24
 14227   00568C                     
 14228                           ;MKAL_layer/timer1/hal_timer1.c: 155:     (PIR1bits.TMR1IF = 0);
 14229   00568C  909E               	bcf	158,0,c	;volatile
 14230   00568E                     
 14231                           ;MKAL_layer/timer1/hal_timer1.c: 157:     TMR1H = (Timer1_preload >> 8);
 14232   00568E  0100               	movlb	0	; () banked
 14233   005690  5193               	movf	(_Timer1_preload+1)& (0+255),w,b
 14234   005692  6ECF               	movwf	207,c	;volatile
 14235   005694                     
 14236                           ; BSR set to: 0
 14237                           ;MKAL_layer/timer1/hal_timer1.c: 158:     TMR1L = (uint8)(Timer1_preload);
 14238   005694  C092  FFCE         	movff	_Timer1_preload,4046	;volatile
 14239   005698                     
 14240                           ; BSR set to: 0
 14241   005698  0012               	return		;funcret
 14242   00569A                     __end_of_TIMER1_ISR:
 14243                           	callstack 0
 14244                           
 14245 ;; *************** function _TIMER0_ISR *****************
 14246 ;; Defined at:
 14247 ;;		line 157 in file "MKAL_layer/timer/hal_timer0.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;		None
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;		None
 14252 ;; Return value:  Size  Location     Type
 14253 ;;                  1    wreg      void 
 14254 ;; Registers used:
 14255 ;;		wreg, status,2
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;Total ram usage:        0 bytes
 14266 ;; Hardware stack levels used: 1
 14267 ;; This function calls:
 14268 ;;		Nothing
 14269 ;; This function is called by:
 14270 ;;		_interrupt_manager
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           	psect	text84
 14275   00569A                     __ptext84:
 14276                           	callstack 0
 14277   00569A                     _TIMER0_ISR:
 14278                           	callstack 24
 14279   00569A                     
 14280                           ;MKAL_layer/timer/hal_timer0.c: 159:     (INTCONbits.TMR0IF = 0);
 14281   00569A  94F2               	bcf	242,2,c	;volatile
 14282   00569C                     
 14283                           ;MKAL_layer/timer/hal_timer0.c: 161:     TMR0H = (Timer0_preload >> 8);
 14284   00569C  0100               	movlb	0	; () banked
 14285   00569E  5197               	movf	(_Timer0_preload+1)& (0+255),w,b
 14286   0056A0  6ED7               	movwf	215,c	;volatile
 14287   0056A2                     
 14288                           ; BSR set to: 0
 14289                           ;MKAL_layer/timer/hal_timer0.c: 162:     TMR0L = (uint8)(Timer0_preload);
 14290   0056A2  C096  FFD6         	movff	_Timer0_preload,4054	;volatile
 14291   0056A6                     
 14292                           ; BSR set to: 0
 14293   0056A6  0012               	return		;funcret
 14294   0056A8                     __end_of_TIMER0_ISR:
 14295                           	callstack 0
 14296                           
 14297 ;; *************** function _RB7_ISR *****************
 14298 ;; Defined at:
 14299 ;;		line 585 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;  value           1    wreg     unsigned char 
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;  value           1    0[COMRAM] unsigned char 
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  1    wreg      void 
 14306 ;; Registers used:
 14307 ;;		wreg, status,2, status,0
 14308 ;; Tracked objects:
 14309 ;;		On entry : 0/0
 14310 ;;		On exit  : 0/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14317 ;;Total ram usage:        1 bytes
 14318 ;; Hardware stack levels used: 1
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		_interrupt_manager
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           	psect	text85
 14327   0055F2                     __ptext85:
 14328                           	callstack 0
 14329   0055F2                     _RB7_ISR:
 14330                           	callstack 24
 14331                           
 14332                           ; BSR set to: 0
 14333                           ;incstack = 0
 14334                           ;RB7_ISR@value stored from wreg
 14335   0055F2  6E01               	movwf	RB7_ISR@value^0,c
 14336   0055F4                     
 14337                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 587:     (INTCONbits.RBIF = 0);
 14338   0055F4  90F2               	bcf	242,0,c	;volatile
 14339   0055F6                     
 14340                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 591:     if(1 == value){
 14341   0055F6  0401               	decf	RB7_ISR@value^0,w,c
 14342   0055F8  A4D8               	btfss	status,2,c
 14343   0055FA  EF01  F02B         	goto	i2u746_41
 14344   0055FE  EF03  F02B         	goto	i2u746_40
 14345   005602                     i2u746_41:
 14346   005602  EF05  F02B         	goto	i2l8220
 14347   005606                     i2u746_40:
 14348   005606  EF05  F02B         	goto	i2l1284
 14349   00560A                     i2l8220:
 14350   00560A                     i2l1284:
 14351   00560A  0012               	return		;funcret
 14352   00560C                     __end_of_RB7_ISR:
 14353                           	callstack 0
 14354                           
 14355 ;; *************** function _RB6_ISR *****************
 14356 ;; Defined at:
 14357 ;;		line 565 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 14358 ;; Parameters:    Size  Location     Type
 14359 ;;  value           1    wreg     unsigned char 
 14360 ;; Auto vars:     Size  Location     Type
 14361 ;;  value           1    0[COMRAM] unsigned char 
 14362 ;; Return value:  Size  Location     Type
 14363 ;;                  1    wreg      void 
 14364 ;; Registers used:
 14365 ;;		wreg, status,2, status,0
 14366 ;; Tracked objects:
 14367 ;;		On entry : 0/0
 14368 ;;		On exit  : 0/0
 14369 ;;		Unchanged: 0/0
 14370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14374 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14375 ;;Total ram usage:        1 bytes
 14376 ;; Hardware stack levels used: 1
 14377 ;; This function calls:
 14378 ;;		Nothing
 14379 ;; This function is called by:
 14380 ;;		_interrupt_manager
 14381 ;; This function uses a non-reentrant model
 14382 ;;
 14383                           
 14384                           	psect	text86
 14385   00560C                     __ptext86:
 14386                           	callstack 0
 14387   00560C                     _RB6_ISR:
 14388                           	callstack 24
 14389                           
 14390                           ;incstack = 0
 14391                           ;RB6_ISR@value stored from wreg
 14392   00560C  6E01               	movwf	RB6_ISR@value^0,c
 14393   00560E                     
 14394                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 567:     (INTCONbits.RBIF = 0);
 14395   00560E  90F2               	bcf	242,0,c	;volatile
 14396   005610                     
 14397                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 571:     if(1 == value){
 14398   005610  0401               	decf	RB6_ISR@value^0,w,c
 14399   005612  A4D8               	btfss	status,2,c
 14400   005614  EF0E  F02B         	goto	i2u745_41
 14401   005618  EF10  F02B         	goto	i2u745_40
 14402   00561C                     i2u745_41:
 14403   00561C  EF12  F02B         	goto	i2l8206
 14404   005620                     i2u745_40:
 14405   005620  EF12  F02B         	goto	i2l1273
 14406   005624                     i2l8206:
 14407   005624                     i2l1273:
 14408   005624  0012               	return		;funcret
 14409   005626                     __end_of_RB6_ISR:
 14410                           	callstack 0
 14411                           
 14412 ;; *************** function _RB5_ISR *****************
 14413 ;; Defined at:
 14414 ;;		line 545 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 14415 ;; Parameters:    Size  Location     Type
 14416 ;;  value           1    wreg     unsigned char 
 14417 ;; Auto vars:     Size  Location     Type
 14418 ;;  value           1    0[COMRAM] unsigned char 
 14419 ;; Return value:  Size  Location     Type
 14420 ;;                  1    wreg      void 
 14421 ;; Registers used:
 14422 ;;		wreg, status,2, status,0
 14423 ;; Tracked objects:
 14424 ;;		On entry : 0/0
 14425 ;;		On exit  : 0/0
 14426 ;;		Unchanged: 0/0
 14427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14432 ;;Total ram usage:        1 bytes
 14433 ;; Hardware stack levels used: 1
 14434 ;; This function calls:
 14435 ;;		Nothing
 14436 ;; This function is called by:
 14437 ;;		_interrupt_manager
 14438 ;; This function uses a non-reentrant model
 14439 ;;
 14440                           
 14441                           	psect	text87
 14442   005626                     __ptext87:
 14443                           	callstack 0
 14444   005626                     _RB5_ISR:
 14445                           	callstack 24
 14446                           
 14447                           ;incstack = 0
 14448                           ;RB5_ISR@value stored from wreg
 14449   005626  6E01               	movwf	RB5_ISR@value^0,c
 14450   005628                     
 14451                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 547:     (INTCONbits.RBIF = 0);
 14452   005628  90F2               	bcf	242,0,c	;volatile
 14453   00562A                     
 14454                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 551:     if(1 == value){
 14455   00562A  0401               	decf	RB5_ISR@value^0,w,c
 14456   00562C  A4D8               	btfss	status,2,c
 14457   00562E  EF1B  F02B         	goto	i2u744_41
 14458   005632  EF1D  F02B         	goto	i2u744_40
 14459   005636                     i2u744_41:
 14460   005636  EF1F  F02B         	goto	i2l8192
 14461   00563A                     i2u744_40:
 14462   00563A  EF1F  F02B         	goto	i2l1262
 14463   00563E                     i2l8192:
 14464   00563E                     i2l1262:
 14465   00563E  0012               	return		;funcret
 14466   005640                     __end_of_RB5_ISR:
 14467                           	callstack 0
 14468                           
 14469 ;; *************** function _RB4_ISR *****************
 14470 ;; Defined at:
 14471 ;;		line 525 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 14472 ;; Parameters:    Size  Location     Type
 14473 ;;  value           1    wreg     unsigned char 
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  value           1    0[COMRAM] unsigned char 
 14476 ;; Return value:  Size  Location     Type
 14477 ;;                  1    wreg      void 
 14478 ;; Registers used:
 14479 ;;		wreg, status,2, status,0
 14480 ;; Tracked objects:
 14481 ;;		On entry : 0/0
 14482 ;;		On exit  : 0/0
 14483 ;;		Unchanged: 0/0
 14484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;Total ram usage:        1 bytes
 14490 ;; Hardware stack levels used: 1
 14491 ;; This function calls:
 14492 ;;		Nothing
 14493 ;; This function is called by:
 14494 ;;		_interrupt_manager
 14495 ;; This function uses a non-reentrant model
 14496 ;;
 14497                           
 14498                           	psect	text88
 14499   005640                     __ptext88:
 14500                           	callstack 0
 14501   005640                     _RB4_ISR:
 14502                           	callstack 24
 14503                           
 14504                           ;incstack = 0
 14505                           ;RB4_ISR@value stored from wreg
 14506   005640  6E01               	movwf	RB4_ISR@value^0,c
 14507   005642                     
 14508                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 527:     (INTCONbits.RBIF = 0);
 14509   005642  90F2               	bcf	242,0,c	;volatile
 14510   005644                     
 14511                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 531:     if(1 == value){
 14512   005644  0401               	decf	RB4_ISR@value^0,w,c
 14513   005646  A4D8               	btfss	status,2,c
 14514   005648  EF28  F02B         	goto	i2u743_41
 14515   00564C  EF2A  F02B         	goto	i2u743_40
 14516   005650                     i2u743_41:
 14517   005650  EF2C  F02B         	goto	i2l8178
 14518   005654                     i2u743_40:
 14519   005654  EF2C  F02B         	goto	i2l1251
 14520   005658                     i2l8178:
 14521   005658                     i2l1251:
 14522   005658  0012               	return		;funcret
 14523   00565A                     __end_of_RB4_ISR:
 14524                           	callstack 0
 14525                           
 14526 ;; *************** function _MSSP_I2C_ISR *****************
 14527 ;; Defined at:
 14528 ;;		line 271 in file "MKAL_layer/I2C/hal_i2c.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;		None
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;		None
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  1    wreg      void 
 14535 ;; Registers used:
 14536 ;;		None
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;Total ram usage:        0 bytes
 14547 ;; Hardware stack levels used: 1
 14548 ;; This function calls:
 14549 ;;		Nothing
 14550 ;; This function is called by:
 14551 ;;		_interrupt_manager
 14552 ;; This function uses a non-reentrant model
 14553 ;;
 14554                           
 14555                           	psect	text89
 14556   0056BE                     __ptext89:
 14557                           	callstack 0
 14558   0056BE                     _MSSP_I2C_ISR:
 14559                           	callstack 24
 14560   0056BE                     
 14561                           ;MKAL_layer/I2C/hal_i2c.c: 273:     (PIR1bits.SSPIF = 0);
 14562   0056BE  969E               	bcf	158,3,c	;volatile
 14563   0056C0  0012               	return		;funcret
 14564   0056C2                     __end_of_MSSP_I2C_ISR:
 14565                           	callstack 0
 14566                           
 14567 ;; *************** function _MSSP_I2C_BC_ISR *****************
 14568 ;; Defined at:
 14569 ;;		line 280 in file "MKAL_layer/I2C/hal_i2c.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;		None
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      void 
 14576 ;; Registers used:
 14577 ;;		None
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14587 ;;Total ram usage:        0 bytes
 14588 ;; Hardware stack levels used: 1
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		_interrupt_manager
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text90
 14597   0056C2                     __ptext90:
 14598                           	callstack 0
 14599   0056C2                     _MSSP_I2C_BC_ISR:
 14600                           	callstack 24
 14601   0056C2                     
 14602                           ;MKAL_layer/I2C/hal_i2c.c: 282:     (PIR2bits.BCLIF = 0);
 14603   0056C2  96A1               	bcf	161,3,c	;volatile
 14604   0056C4  0012               	return		;funcret
 14605   0056C6                     __end_of_MSSP_I2C_BC_ISR:
 14606                           	callstack 0
 14607                           
 14608 ;; *************** function _INT2_ISR *****************
 14609 ;; Defined at:
 14610 ;;		line 511 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 14611 ;; Parameters:    Size  Location     Type
 14612 ;;		None
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;		None
 14615 ;; Return value:  Size  Location     Type
 14616 ;;                  1    wreg      void 
 14617 ;; Registers used:
 14618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14619 ;; Tracked objects:
 14620 ;;		On entry : 0/0
 14621 ;;		On exit  : 0/0
 14622 ;;		Unchanged: 0/0
 14623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14628 ;;Total ram usage:        0 bytes
 14629 ;; Hardware stack levels used: 1
 14630 ;; Hardware stack levels required when called: 2
 14631 ;; This function calls:
 14632 ;;		NULL
 14633 ;;		_int0_interrupt
 14634 ;; This function is called by:
 14635 ;;		_interrupt_manager
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           	psect	text91
 14640   0053DC                     __ptext91:
 14641                           	callstack 0
 14642   0053DC                     _INT2_ISR:
 14643                           	callstack 22
 14644   0053DC                     
 14645                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 513:     (INTCON3bits.INT2IF = 0);
 14646   0053DC  92F0               	bcf	240,1,c	;volatile
 14647   0053DE                     
 14648                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 517:     if(Int2_interrupthandler){
 14649   0053DE  0100               	movlb	0	; () banked
 14650   0053E0  51AA               	movf	_Int2_interrupthandler& (0+255),w,b
 14651   0053E2  11AB               	iorwf	(_Int2_interrupthandler+1)& (0+255),w,b
 14652   0053E4  B4D8               	btfsc	status,2,c
 14653   0053E6  EFF7  F029         	goto	i2u741_41
 14654   0053EA  EFF9  F029         	goto	i2u741_40
 14655   0053EE                     i2u741_41:
 14656   0053EE  EF05  F02A         	goto	i2l1240
 14657   0053F2                     i2u741_40:
 14658   0053F2                     
 14659                           ; BSR set to: 0
 14660                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 518:         Int2_interrupthandler();
 14661   0053F2  D802               	call	i2u742_48
 14662   0053F4  EF05  F02A         	goto	i2u742_49
 14663   0053F8                     i2u742_48:
 14664   0053F8  0005               	push	
 14665   0053FA  6EFA               	movwf	pclath,c
 14666   0053FC  51AA               	movf	_Int2_interrupthandler& (0+255),w,b
 14667   0053FE  6EFD               	movwf	tosl,c
 14668   005400  51AB               	movf	(_Int2_interrupthandler+1)& (0+255),w,b
 14669   005402  6EFE               	movwf	tosh,c
 14670   005404  6AFF               	clrf	tosu,c
 14671   005406  50FA               	movf	pclath,w,c
 14672   005408  0012               	return		;indir
 14673   00540A                     i2u742_49:
 14674   00540A                     i2l1240:
 14675   00540A  0012               	return		;funcret
 14676   00540C                     __end_of_INT2_ISR:
 14677                           	callstack 0
 14678                           
 14679 ;; *************** function _INT1_ISR *****************
 14680 ;; Defined at:
 14681 ;;		line 498 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 14682 ;; Parameters:    Size  Location     Type
 14683 ;;		None
 14684 ;; Auto vars:     Size  Location     Type
 14685 ;;		None
 14686 ;; Return value:  Size  Location     Type
 14687 ;;                  1    wreg      void 
 14688 ;; Registers used:
 14689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14690 ;; Tracked objects:
 14691 ;;		On entry : 0/0
 14692 ;;		On exit  : 0/0
 14693 ;;		Unchanged: 0/0
 14694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14699 ;;Total ram usage:        0 bytes
 14700 ;; Hardware stack levels used: 1
 14701 ;; Hardware stack levels required when called: 2
 14702 ;; This function calls:
 14703 ;;		NULL
 14704 ;;		_int0_interrupt
 14705 ;; This function is called by:
 14706 ;;		_interrupt_manager
 14707 ;; This function uses a non-reentrant model
 14708 ;;
 14709                           
 14710                           	psect	text92
 14711   00540C                     __ptext92:
 14712                           	callstack 0
 14713   00540C                     _INT1_ISR:
 14714                           	callstack 22
 14715   00540C                     
 14716                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 500:     (INTCON3bits.INT1IF = 0);
 14717   00540C  90F0               	bcf	240,0,c	;volatile
 14718   00540E                     
 14719                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 504:     if(Int1_interrupthandler){
 14720   00540E  0100               	movlb	0	; () banked
 14721   005410  51AC               	movf	_Int1_interrupthandler& (0+255),w,b
 14722   005412  11AD               	iorwf	(_Int1_interrupthandler+1)& (0+255),w,b
 14723   005414  B4D8               	btfsc	status,2,c
 14724   005416  EF0F  F02A         	goto	i2u739_41
 14725   00541A  EF11  F02A         	goto	i2u739_40
 14726   00541E                     i2u739_41:
 14727   00541E  EF1D  F02A         	goto	i2l1235
 14728   005422                     i2u739_40:
 14729   005422                     
 14730                           ; BSR set to: 0
 14731                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 505:         Int1_interrupthandler();
 14732   005422  D802               	call	i2u740_48
 14733   005424  EF1D  F02A         	goto	i2u740_49
 14734   005428                     i2u740_48:
 14735   005428  0005               	push	
 14736   00542A  6EFA               	movwf	pclath,c
 14737   00542C  51AC               	movf	_Int1_interrupthandler& (0+255),w,b
 14738   00542E  6EFD               	movwf	tosl,c
 14739   005430  51AD               	movf	(_Int1_interrupthandler+1)& (0+255),w,b
 14740   005432  6EFE               	movwf	tosh,c
 14741   005434  6AFF               	clrf	tosu,c
 14742   005436  50FA               	movf	pclath,w,c
 14743   005438  0012               	return		;indir
 14744   00543A                     i2u740_49:
 14745   00543A                     i2l1235:
 14746   00543A  0012               	return		;funcret
 14747   00543C                     __end_of_INT1_ISR:
 14748                           	callstack 0
 14749                           
 14750 ;; *************** function _INT0_ISR *****************
 14751 ;; Defined at:
 14752 ;;		line 485 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 14753 ;; Parameters:    Size  Location     Type
 14754 ;;		None
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;		None
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14770 ;;Total ram usage:        0 bytes
 14771 ;; Hardware stack levels used: 1
 14772 ;; Hardware stack levels required when called: 2
 14773 ;; This function calls:
 14774 ;;		NULL
 14775 ;;		_int0_interrupt
 14776 ;; This function is called by:
 14777 ;;		_interrupt_manager
 14778 ;; This function uses a non-reentrant model
 14779 ;;
 14780                           
 14781                           	psect	text93
 14782   00543C                     __ptext93:
 14783                           	callstack 0
 14784   00543C                     _INT0_ISR:
 14785                           	callstack 22
 14786   00543C                     
 14787                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 487:     (INTCONbits.INT0IF = 0);
 14788   00543C  92F2               	bcf	242,1,c	;volatile
 14789   00543E                     
 14790                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 491:     if(Int0_interrupthandler){
 14791   00543E  0100               	movlb	0	; () banked
 14792   005440  51AE               	movf	_Int0_interrupthandler& (0+255),w,b
 14793   005442  11AF               	iorwf	(_Int0_interrupthandler+1)& (0+255),w,b
 14794   005444  B4D8               	btfsc	status,2,c
 14795   005446  EF27  F02A         	goto	i2u737_41
 14796   00544A  EF29  F02A         	goto	i2u737_40
 14797   00544E                     i2u737_41:
 14798   00544E  EF35  F02A         	goto	i2l1230
 14799   005452                     i2u737_40:
 14800   005452                     
 14801                           ; BSR set to: 0
 14802                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 492:         Int0_interrupthandler();
 14803   005452  D802               	call	i2u738_48
 14804   005454  EF35  F02A         	goto	i2u738_49
 14805   005458                     i2u738_48:
 14806   005458  0005               	push	
 14807   00545A  6EFA               	movwf	pclath,c
 14808   00545C  51AE               	movf	_Int0_interrupthandler& (0+255),w,b
 14809   00545E  6EFD               	movwf	tosl,c
 14810   005460  51AF               	movf	(_Int0_interrupthandler+1)& (0+255),w,b
 14811   005462  6EFE               	movwf	tosh,c
 14812   005464  6AFF               	clrf	tosu,c
 14813   005466  50FA               	movf	pclath,w,c
 14814   005468  0012               	return		;indir
 14815   00546A                     i2u738_49:
 14816   00546A                     i2l1230:
 14817   00546A  0012               	return		;funcret
 14818   00546C                     __end_of_INT0_ISR:
 14819                           	callstack 0
 14820                           
 14821 ;; *************** function _int0_interrupt *****************
 14822 ;; Defined at:
 14823 ;;		line 223 in file "main.c"
 14824 ;; Parameters:    Size  Location     Type
 14825 ;;		None
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;		None
 14828 ;; Return value:  Size  Location     Type
 14829 ;;                  1    wreg      void 
 14830 ;; Registers used:
 14831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14832 ;; Tracked objects:
 14833 ;;		On entry : 0/0
 14834 ;;		On exit  : 0/0
 14835 ;;		Unchanged: 0/0
 14836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14841 ;;Total ram usage:        0 bytes
 14842 ;; Hardware stack levels used: 1
 14843 ;; Hardware stack levels required when called: 1
 14844 ;; This function calls:
 14845 ;;		_GPIO_PORT_WRITE_LOGIC
 14846 ;;		i2_GPIO_pIN_TOGGLE_LOGIC
 14847 ;; This function is called by:
 14848 ;;		_INT0_ISR
 14849 ;;		_INT1_ISR
 14850 ;;		_INT2_ISR
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           	psect	text94
 14855   00549A                     __ptext94:
 14856                           	callstack 0
 14857   00549A                     _int0_interrupt:
 14858                           	callstack 22
 14859   00549A                     
 14860                           ;main.c: 224:      if(ADC_VALUE_convert > 38 ){
 14861   00549A  0E26               	movlw	38
 14862   00549C  0100               	movlb	0	; () banked
 14863   00549E  65C3               	cpfsgt	_ADC_VALUE_convert& (0+255),b	;volatile
 14864   0054A0  EF54  F02A         	goto	i2u672_41
 14865   0054A4  EF56  F02A         	goto	i2u672_40
 14866   0054A8                     i2u672_41:
 14867   0054A8  EF5D  F02A         	goto	i2l7542
 14868   0054AC                     i2u672_40:
 14869   0054AC                     
 14870                           ; BSR set to: 0
 14871                           ;main.c: 225:          GPIO_PORT_WRITE_LOGIC(&LED_ROOM_1,GPIO_LOW);
 14872   0054AC  0E00               	movlw	0
 14873   0054AE  6E01               	movwf	GPIO_PORT_WRITE_LOGIC@logic^0,c
 14874   0054B0  0EFA               	movlw	_LED_ROOM_1& (0+255)
 14875   0054B2  EC86  F029         	call	_GPIO_PORT_WRITE_LOGIC
 14876                           
 14877                           ;main.c: 226:      }else{
 14878   0054B6  EF63  F02A         	goto	i2l158
 14879   0054BA                     i2l7542:
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;main.c: 227:          ret = GPIO_pIN_TOGGLE_LOGIC(&LED_ROOM_1);
 14883   0054BA  0EFA               	movlw	low _LED_ROOM_1
 14884   0054BC  6E01               	movwf	i2GPIO_pIN_TOGGLE_LOGIC@config_pin^0,c
 14885   0054BE  ECB8  F024         	call	i2_GPIO_pIN_TOGGLE_LOGIC	;wreg free
 14886   0054C2  0100               	movlb	0	; () banked
 14887   0054C4  6FC4               	movwf	_ret& (0+255),b
 14888   0054C6                     i2l158:
 14889   0054C6  0012               	return		;funcret
 14890   0054C8                     __end_of_int0_interrupt:
 14891                           	callstack 0
 14892                           
 14893 ;; *************** function i2_GPIO_pIN_TOGGLE_LOGIC *****************
 14894 ;; Defined at:
 14895 ;;		line 101 in file "MKAL_layer/gpio/pro_gpio.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  config_pin      1    0[COMRAM] PTR const struct .
 14898 ;;		 -> relay_toggle@pin_config(1), led_toggle@pin_config(1), LED_ROOM_1(1), 
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;  ret             1    5[COMRAM] unsigned char 
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1    wreg      unsigned char 
 14903 ;; Registers used:
 14904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14910 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;Total ram usage:        6 bytes
 14915 ;; Hardware stack levels used: 1
 14916 ;; This function calls:
 14917 ;;		Nothing
 14918 ;; This function is called by:
 14919 ;;		_int0_interrupt
 14920 ;; This function uses a non-reentrant model
 14921 ;;
 14922                           
 14923                           	psect	text95
 14924   004970                     __ptext95:
 14925                           	callstack 0
 14926   004970                     i2_GPIO_pIN_TOGGLE_LOGIC:
 14927                           	callstack 22
 14928   004970                     
 14929                           ;MKAL_layer/gpio/pro_gpio.c: 101: Std_ReturnType GPIO_pIN_TOGGLE_LOGIC(const pin_config_
      +                          t *config_pin);MKAL_layer/gpio/pro_gpio.c: 102: {;MKAL_layer/gpio/pro_gpio.c: 103:     S
      +                          td_ReturnType ret =(Std_ReturnType)0x01;
 14930   004970  0E01               	movlw	1
 14931   004972  6E06               	movwf	i2GPIO_pIN_TOGGLE_LOGIC@ret^0,c
 14932                           
 14933                           ;MKAL_layer/gpio/pro_gpio.c: 104:     if ((((void*)0) == config_pin) || (config_pin->pin
      +                           > 8 -1)){
 14934   004974  5001               	movf	i2GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 14935   004976  B4D8               	btfsc	status,2,c
 14936   004978  EFC0  F024         	goto	i2u643_41
 14937   00497C  EFC2  F024         	goto	i2u643_40
 14938   004980                     i2u643_41:
 14939   004980  EFD2  F024         	goto	i2l7240
 14940   004984                     i2u643_40:
 14941   004984  5001               	movf	i2GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 14942   004986  6ED9               	movwf	fsr2l,c
 14943   004988  6ADA               	clrf	fsr2h,c
 14944   00498A  30DF               	rrcf	223,w,c
 14945   00498C  32E8               	rrcf	wreg,f,c
 14946   00498E  32E8               	rrcf	wreg,f,c
 14947   004990  0B07               	andlw	7
 14948   004992  6E02               	movwf	??i2_GPIO_pIN_TOGGLE_LOGIC^0,c
 14949   004994  0E07               	movlw	7
 14950   004996  6402               	cpfsgt	??i2_GPIO_pIN_TOGGLE_LOGIC^0,c
 14951   004998  EFD0  F024         	goto	i2u644_41
 14952   00499C  EFD2  F024         	goto	i2u644_40
 14953   0049A0                     i2u644_41:
 14954   0049A0  EFD6  F024         	goto	i2l7242
 14955   0049A4                     i2u644_40:
 14956   0049A4                     i2l7240:
 14957                           
 14958                           ;MKAL_layer/gpio/pro_gpio.c: 105:         ret =(Std_ReturnType)0x00;
 14959   0049A4  0E00               	movlw	0
 14960   0049A6  6E06               	movwf	i2GPIO_pIN_TOGGLE_LOGIC@ret^0,c
 14961                           
 14962                           ;MKAL_layer/gpio/pro_gpio.c: 106:     }
 14963   0049A8  EFFC  F024         	goto	i2l7244
 14964   0049AC                     i2l7242:
 14965                           
 14966                           ;MKAL_layer/gpio/pro_gpio.c: 108:         (*lat_regisrers[config_pin->port] ^= ((uint8)1
      +                           << config_pin->pin));
 14967   0049AC  5001               	movf	i2GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 14968   0049AE  6ED9               	movwf	fsr2l,c
 14969   0049B0  6ADA               	clrf	fsr2h,c
 14970   0049B2  30DF               	rrcf	223,w,c
 14971   0049B4  32E8               	rrcf	wreg,f,c
 14972   0049B6  32E8               	rrcf	wreg,f,c
 14973   0049B8  0B07               	andlw	7
 14974   0049BA  6E02               	movwf	??i2_GPIO_pIN_TOGGLE_LOGIC^0,c
 14975   0049BC  0E01               	movlw	1
 14976   0049BE  6E03               	movwf	(??i2_GPIO_pIN_TOGGLE_LOGIC+1)^0,c
 14977   0049C0  2A02               	incf	??i2_GPIO_pIN_TOGGLE_LOGIC^0,f,c
 14978   0049C2  EFE5  F024         	goto	i2u645_44
 14979   0049C6                     i2u645_45:
 14980   0049C6  90D8               	bcf	status,0,c
 14981   0049C8  3603               	rlcf	(??i2_GPIO_pIN_TOGGLE_LOGIC+1)^0,f,c
 14982   0049CA                     i2u645_44:
 14983   0049CA  2E02               	decfsz	??i2_GPIO_pIN_TOGGLE_LOGIC^0,f,c
 14984   0049CC  EFE3  F024         	goto	i2u645_45
 14985   0049D0  5001               	movf	i2GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
 14986   0049D2  6ED9               	movwf	fsr2l,c
 14987   0049D4  6ADA               	clrf	fsr2h,c
 14988   0049D6  50DF               	movf	223,w,c
 14989   0049D8  0B07               	andlw	7
 14990   0049DA  0D02               	mullw	2
 14991   0049DC  50F3               	movf	243,w,c
 14992   0049DE  0FD2               	addlw	low _lat_regisrers
 14993   0049E0  6ED9               	movwf	fsr2l,c
 14994   0049E2  6ADA               	clrf	fsr2h,c
 14995   0049E4  CFDE F004          	movff	postinc2,??i2_GPIO_pIN_TOGGLE_LOGIC+2
 14996   0049E8  CFDD F005          	movff	postdec2,??i2_GPIO_pIN_TOGGLE_LOGIC+3
 14997   0049EC  C004  FFD9         	movff	??i2_GPIO_pIN_TOGGLE_LOGIC+2,fsr2l
 14998   0049F0  C005  FFDA         	movff	??i2_GPIO_pIN_TOGGLE_LOGIC+3,fsr2h
 14999   0049F4  5003               	movf	(??i2_GPIO_pIN_TOGGLE_LOGIC+1)^0,w,c
 15000   0049F6  1ADF               	xorwf	indf2,f,c
 15001   0049F8                     i2l7244:
 15002                           
 15003                           ;MKAL_layer/gpio/pro_gpio.c: 110:     return ret;
 15004   0049F8  5006               	movf	i2GPIO_pIN_TOGGLE_LOGIC@ret^0,w,c
 15005   0049FA  0012               	return		;funcret
 15006   0049FC                     __end_ofi2_GPIO_pIN_TOGGLE_LOGIC:
 15007                           	callstack 0
 15008                           
 15009 ;; *************** function _GPIO_PORT_WRITE_LOGIC *****************
 15010 ;; Defined at:
 15011 ;;		line 144 in file "MKAL_layer/gpio/pro_gpio.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;  port            1    wreg     enum E2998
 15014 ;;  logic           1    0[COMRAM] unsigned char 
 15015 ;; Auto vars:     Size  Location     Type
 15016 ;;  port            1    3[COMRAM] enum E2998
 15017 ;;  ret             1    0        unsigned char 
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  1    wreg      unsigned char 
 15020 ;; Registers used:
 15021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15027 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15031 ;;Total ram usage:        4 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; This function calls:
 15034 ;;		Nothing
 15035 ;; This function is called by:
 15036 ;;		_int0_interrupt
 15037 ;; This function uses a non-reentrant model
 15038 ;;
 15039                           
 15040                           	psect	text96
 15041   00530C                     __ptext96:
 15042                           	callstack 0
 15043   00530C                     _GPIO_PORT_WRITE_LOGIC:
 15044                           	callstack 22
 15045                           
 15046                           ;incstack = 0
 15047                           ;GPIO_PORT_WRITE_LOGIC@port stored from wreg
 15048   00530C  6E04               	movwf	GPIO_PORT_WRITE_LOGIC@port^0,c
 15049   00530E                     
 15050                           ;MKAL_layer/gpio/pro_gpio.c: 147:     if(port > 5 -1){
 15051   00530E  0E04               	movlw	4
 15052   005310  6404               	cpfsgt	GPIO_PORT_WRITE_LOGIC@port^0,c
 15053   005312  EF8D  F029         	goto	i2u586_41
 15054   005316  EF8F  F029         	goto	i2u586_40
 15055   00531A                     i2u586_41:
 15056   00531A  EF91  F029         	goto	i2l6780
 15057   00531E                     i2u586_40:
 15058   00531E                     
 15059                           ;MKAL_layer/gpio/pro_gpio.c: 149:     }
 15060   00531E  EFA1  F029         	goto	i2l888
 15061   005322                     i2l6780:
 15062                           
 15063                           ;MKAL_layer/gpio/pro_gpio.c: 151:         *lat_regisrers[port] =logic ;
 15064   005322  5004               	movf	GPIO_PORT_WRITE_LOGIC@port^0,w,c
 15065   005324  0D02               	mullw	2
 15066   005326  50F3               	movf	243,w,c
 15067   005328  0FD2               	addlw	low _lat_regisrers
 15068   00532A  6ED9               	movwf	fsr2l,c
 15069   00532C  6ADA               	clrf	fsr2h,c
 15070   00532E  CFDE F002          	movff	postinc2,??_GPIO_PORT_WRITE_LOGIC
 15071   005332  CFDD F003          	movff	postdec2,??_GPIO_PORT_WRITE_LOGIC+1
 15072   005336  C002  FFD9         	movff	??_GPIO_PORT_WRITE_LOGIC,fsr2l
 15073   00533A  C003  FFDA         	movff	??_GPIO_PORT_WRITE_LOGIC+1,fsr2h
 15074   00533E  C001  FFDF         	movff	GPIO_PORT_WRITE_LOGIC@logic,indf2
 15075   005342                     i2l888:
 15076   005342  0012               	return		;funcret
 15077   005344                     __end_of_GPIO_PORT_WRITE_LOGIC:
 15078                           	callstack 0
 15079                           
 15080 ;; *************** function _CCP2_ISR *****************
 15081 ;; Defined at:
 15082 ;;		line 218 in file "MKAL_layer/CCP2/hal_ccp2.c"
 15083 ;; Parameters:    Size  Location     Type
 15084 ;;		None
 15085 ;; Auto vars:     Size  Location     Type
 15086 ;;		None
 15087 ;; Return value:  Size  Location     Type
 15088 ;;                  1    wreg      void 
 15089 ;; Registers used:
 15090 ;;		None
 15091 ;; Tracked objects:
 15092 ;;		On entry : 0/0
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15100 ;;Total ram usage:        0 bytes
 15101 ;; Hardware stack levels used: 1
 15102 ;; This function calls:
 15103 ;;		Nothing
 15104 ;; This function is called by:
 15105 ;;		_interrupt_manager
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           	psect	text97
 15110   0056C6                     __ptext97:
 15111                           	callstack 0
 15112   0056C6                     _CCP2_ISR:
 15113                           	callstack 24
 15114   0056C6                     
 15115                           ;MKAL_layer/CCP2/hal_ccp2.c: 219:     (PIR2bits.CCP2IF = 0);
 15116   0056C6  90A1               	bcf	161,0,c	;volatile
 15117   0056C8  0012               	return		;funcret
 15118   0056CA                     __end_of_CCP2_ISR:
 15119                           	callstack 0
 15120                           
 15121 ;; *************** function _CCP1_ISR *****************
 15122 ;; Defined at:
 15123 ;;		line 218 in file "MKAL_layer/CCP1/hal_ccp1.c"
 15124 ;; Parameters:    Size  Location     Type
 15125 ;;		None
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;		None
 15128 ;; Return value:  Size  Location     Type
 15129 ;;                  1    wreg      void 
 15130 ;; Registers used:
 15131 ;;		None
 15132 ;; Tracked objects:
 15133 ;;		On entry : 0/0
 15134 ;;		On exit  : 0/0
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15141 ;;Total ram usage:        0 bytes
 15142 ;; Hardware stack levels used: 1
 15143 ;; This function calls:
 15144 ;;		Nothing
 15145 ;; This function is called by:
 15146 ;;		_interrupt_manager
 15147 ;; This function uses a non-reentrant model
 15148 ;;
 15149                           
 15150                           	psect	text98
 15151   0056CA                     __ptext98:
 15152                           	callstack 0
 15153   0056CA                     _CCP1_ISR:
 15154                           	callstack 24
 15155   0056CA                     
 15156                           ;MKAL_layer/CCP1/hal_ccp1.c: 219:     (PIR1bits.CCP1IF = 0);
 15157   0056CA  949E               	bcf	158,2,c	;volatile
 15158   0056CC  0012               	return		;funcret
 15159   0056CE                     __end_of_CCP1_ISR:
 15160                           	callstack 0
 15161                           
 15162 ;; *************** function _ADC_handeler_funvtion *****************
 15163 ;; Defined at:
 15164 ;;		line 222 in file "MKAL_layer/ADC/hal_adc.c"
 15165 ;; Parameters:    Size  Location     Type
 15166 ;;		None
 15167 ;; Auto vars:     Size  Location     Type
 15168 ;;		None
 15169 ;; Return value:  Size  Location     Type
 15170 ;;                  1    wreg      void 
 15171 ;; Registers used:
 15172 ;;		None
 15173 ;; Tracked objects:
 15174 ;;		On entry : 0/0
 15175 ;;		On exit  : 0/0
 15176 ;;		Unchanged: 0/0
 15177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15182 ;;Total ram usage:        0 bytes
 15183 ;; Hardware stack levels used: 1
 15184 ;; This function calls:
 15185 ;;		Nothing
 15186 ;; This function is called by:
 15187 ;;		_interrupt_manager
 15188 ;; This function uses a non-reentrant model
 15189 ;;
 15190                           
 15191                           	psect	text99
 15192   0056CE                     __ptext99:
 15193                           	callstack 0
 15194   0056CE                     _ADC_handeler_funvtion:
 15195                           	callstack 24
 15196   0056CE                     
 15197                           ;MKAL_layer/ADC/hal_adc.c: 224:     (PIR1bits.ADIF = 0);
 15198   0056CE  9C9E               	bcf	158,6,c	;volatile
 15199   0056D0  0012               	return		;funcret
 15200   0056D2                     __end_of_ADC_handeler_funvtion:
 15201                           	callstack 0
 15202                           
 15203                           	psect	text100
 15204   000000                     __ptext100:
 15205                           	callstack 0
 15206   000000                     
 15207                           	psect	rparam
 15208   000000                     
 15209                           	psect	temp
 15210   000073                     btemp:
 15211                           	callstack 0
 15212   000073                     	ds	1
 15213   000000                     int$flags	set	btemp
 15214   000000                     wtemp8	set	btemp+1
 15215   000000                     ttemp5	set	btemp+1
 15216   000000                     ttemp6	set	btemp+4
 15217   000000                     ttemp7	set	btemp+8
 15218                           
 15219                           	psect	config
 15220                           
 15221                           ; Padding undefined space
 15222   300000                     	org	3145728
 15223   300000  FF                 	db	255
 15224                           
 15225                           ;Config register CONFIG1H @ 0x300001
 15226                           ;	Oscillator Selection bits
 15227                           ;	OSC = HS, HS oscillator
 15228                           ;	Fail-Safe Clock Monitor Enable bit
 15229                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15230                           ;	Internal/External Oscillator Switchover bit
 15231                           ;	IESO = OFF, Oscillator Switchover mode disabled
 15232   300001                     	org	3145729
 15233   300001  02                 	db	2
 15234                           
 15235                           ;Config register CONFIG2L @ 0x300002
 15236                           ;	Power-up Timer Enable bit
 15237                           ;	PWRT = OFF, PWRT disabled
 15238                           ;	Brown-out Reset Enable bits
 15239                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 15240                           ;	Brown Out Reset Voltage bits
 15241                           ;	BORV = 1, 
 15242   300002                     	org	3145730
 15243   300002  09                 	db	9
 15244                           
 15245                           ;Config register CONFIG2H @ 0x300003
 15246                           ;	Watchdog Timer Enable bit
 15247                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15248                           ;	Watchdog Timer Postscale Select bits
 15249                           ;	WDTPS = 32768, 1:32768
 15250   300003                     	org	3145731
 15251   300003  1E                 	db	30
 15252                           
 15253                           ; Padding undefined space
 15254   300004                     	org	3145732
 15255   300004  FF                 	db	255
 15256                           
 15257                           ;Config register CONFIG3H @ 0x300005
 15258                           ;	CCP2 MUX bit
 15259                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 15260                           ;	PORTB A/D Enable bit
 15261                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 15262                           ;	Low-Power Timer1 Oscillator Enable bit
 15263                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 15264                           ;	MCLR Pin Enable bit
 15265                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 15266   300005                     	org	3145733
 15267   300005  81                 	db	129
 15268                           
 15269                           ;Config register CONFIG4L @ 0x300006
 15270                           ;	Stack Full/Underflow Reset Enable bit
 15271                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15272                           ;	Single-Supply ICSP Enable bit
 15273                           ;	LVP = OFF, Single-Supply ICSP disabled
 15274                           ;	Extended Instruction Set Enable bit
 15275                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15276                           ;	Background Debugger Enable bit
 15277                           ;	DEBUG = 0x1, unprogrammed default
 15278   300006                     	org	3145734
 15279   300006  81                 	db	129
 15280                           
 15281                           ; Padding undefined space
 15282   300007                     	org	3145735
 15283   300007  FF                 	db	255
 15284                           
 15285                           ;Config register CONFIG5L @ 0x300008
 15286                           ;	Code Protection bit
 15287                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 15288                           ;	Code Protection bit
 15289                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 15290                           ;	Code Protection bit
 15291                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 15292                           ;	Code Protection bit
 15293                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 15294   300008                     	org	3145736
 15295   300008  0F                 	db	15
 15296                           
 15297                           ;Config register CONFIG5H @ 0x300009
 15298                           ;	Boot Block Code Protection bit
 15299                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15300                           ;	Data EEPROM Code Protection bit
 15301                           ;	CPD = OFF, Data EEPROM not code-protected
 15302   300009                     	org	3145737
 15303   300009  C0                 	db	192
 15304                           
 15305                           ;Config register CONFIG6L @ 0x30000A
 15306                           ;	Write Protection bit
 15307                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 15308                           ;	Write Protection bit
 15309                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 15310                           ;	Write Protection bit
 15311                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 15312                           ;	Write Protection bit
 15313                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 15314   30000A                     	org	3145738
 15315   30000A  0F                 	db	15
 15316                           
 15317                           ;Config register CONFIG6H @ 0x30000B
 15318                           ;	Configuration Register Write Protection bit
 15319                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15320                           ;	Boot Block Write Protection bit
 15321                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15322                           ;	Data EEPROM Write Protection bit
 15323                           ;	WRTD = OFF, Data EEPROM not write-protected
 15324   30000B                     	org	3145739
 15325   30000B  E0                 	db	224
 15326                           
 15327                           ;Config register CONFIG7L @ 0x30000C
 15328                           ;	Table Read Protection bit
 15329                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 15330                           ;	Table Read Protection bit
 15331                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15332                           ;	Table Read Protection bit
 15333                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 15334                           ;	Table Read Protection bit
 15335                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 15336   30000C                     	org	3145740
 15337   30000C  0F                 	db	15
 15338                           
 15339                           ;Config register CONFIG7H @ 0x30000D
 15340                           ;	Boot Block Table Read Protection bit
 15341                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15342   30000D                     	org	3145741
 15343   30000D  40                 	db	64
 15344                           tosu	equ	0xFFF
 15345                           tosh	equ	0xFFE
 15346                           tosl	equ	0xFFD
 15347                           stkptr	equ	0xFFC
 15348                           pclatu	equ	0xFFB
 15349                           pclath	equ	0xFFA
 15350                           pcl	equ	0xFF9
 15351                           tblptru	equ	0xFF8
 15352                           tblptrh	equ	0xFF7
 15353                           tblptrl	equ	0xFF6
 15354                           tablat	equ	0xFF5
 15355                           prodh	equ	0xFF4
 15356                           prodl	equ	0xFF3
 15357                           indf0	equ	0xFEF
 15358                           postinc0	equ	0xFEE
 15359                           postdec0	equ	0xFED
 15360                           preinc0	equ	0xFEC
 15361                           plusw0	equ	0xFEB
 15362                           fsr0h	equ	0xFEA
 15363                           fsr0l	equ	0xFE9
 15364                           wreg	equ	0xFE8
 15365                           indf1	equ	0xFE7
 15366                           postinc1	equ	0xFE6
 15367                           postdec1	equ	0xFE5
 15368                           preinc1	equ	0xFE4
 15369                           plusw1	equ	0xFE3
 15370                           fsr1h	equ	0xFE2
 15371                           fsr1l	equ	0xFE1
 15372                           bsr	equ	0xFE0
 15373                           indf2	equ	0xFDF
 15374                           postinc2	equ	0xFDE
 15375                           postdec2	equ	0xFDD
 15376                           preinc2	equ	0xFDC
 15377                           plusw2	equ	0xFDB
 15378                           fsr2h	equ	0xFDA
 15379                           fsr2l	equ	0xFD9
 15380                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    16
    Data        134
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    102     114
    BANK0           128      5     128
    BANK1           256     14     163
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_2$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_get_conversion_blocking@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_get_conversion_blocking@conversion_status	PTR unsigned short  size(1) Largest target is 4
		 -> ADC_VALUE(BANK0[2]), ADC_VALUE_2(BANK0[4]), 

    ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_inti@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), ADC_2(BANK1[6]), 

    ADC_inti@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_ISconversion_done@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_ISconversion_done@conversion_status	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_get_conversion_blocking@l_conversion_status(COMRAM[1]), 

    ADC_ISconversion_result@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_ISconversion_result@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_ISconversion_result@conversion_result	PTR unsigned short  size(1) Largest target is 4
		 -> ADC_VALUE(BANK0[2]), ADC_VALUE_2(BANK0[4]), 

    ADC_select_channal@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_start_conversion@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    baudrate_calculate@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    baudrate_calculate@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    baudrate_calculate@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    baudrate_calculate@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    baudrate_calculate@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp1_$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp1_init@ccp1_	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), 

    ccp1_init@ccp1_$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp2_$CCP2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp2_init@ccp2_	PTR const struct . size(2) Largest target is 10
		 -> ccp2_(BANK1[10]), 

    ccp2_init@ccp2_$CCP2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_ref@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), ADC_2(BANK1[6]), 

    configure_voltage_ref@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ds1307_read_values@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(BANK0[1]), 

    ds1307_read_values@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    ds1307_read_values@return_data_array	PTR unsigned char  size(2) Largest target is 6
		 -> ds13_data(BANK1[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_pIN_DIRECTION_INTIALIZE@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), ccp2_(BANK1[10]), INT_0(BANK1[6]), lcd_4bit(BANK0[6]), 
		 -> lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), LED_ROOM_1(BANK0[1]), motor_1(BANK0[2]), 
		 -> motor_1$motor_pin_config(BANK0[2]), motor_2(BANK0[2]), motor_2$motor_pin_config(BANK0[2]), relay_intialize@pin_config(COMRAM[1]), 

    GPIO_pIN_INTIALIZE@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), ccp2_(BANK1[10]), INT_0(BANK1[6]), lcd_4bit(BANK0[6]), 
		 -> lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), LED_ROOM_1(BANK0[1]), motor_1(BANK0[2]), 
		 -> motor_1$motor_pin_config(BANK0[2]), motor_2(BANK0[2]), motor_2$motor_pin_config(BANK0[2]), relay_intialize@pin_config(COMRAM[1]), 

    GPIO_pIN_TOGGLE_LOGIC@config_pin	PTR const struct . size(1) Largest target is 1
		 -> LED_ROOM_1(BANK0[1]), led_toggle@pin_config(COMRAM[1]), relay_toggle@pin_config(COMRAM[1]), 

    GPIO_pIN_WRITE_LOGIC@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), ccp2_(BANK1[10]), INT_0(BANK1[6]), lcd_4bit(BANK0[6]), 
		 -> lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), LED_ROOM_1(BANK0[1]), led_turn_off@pin_config(COMRAM[1]), 
		 -> led_turn_on@pin_config(COMRAM[1]), motor_1(BANK0[2]), motor_1$motor_pin_config(BANK0[2]), motor_2(BANK0[2]), 
		 -> motor_2$motor_pin_config(BANK0[2]), relay_intialize@pin_config(COMRAM[1]), relay_turn_off@pin_config(COMRAM[1]), relay_turn_on@pin_config(COMRAM[1]), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Int0_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), NULL(), 

    INT0_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    Int1_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), NULL(), 

    INT1_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    Int2_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), NULL(), 

    INT2_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    INT_0$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    interrupt_intx_clear@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), 

    interrupt_intx_clear@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    interrupt_intx_disable@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), 

    interrupt_intx_disable@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    interrupt_intx_edge_inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), 

    interrupt_intx_edge_inti@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    interrupt_intx_enable@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), 

    interrupt_intx_enable@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    Interrupt_Intx_Inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), 

    interrupt_intx_pin_inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), 

    interrupt_intx_pin_inti@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    interrupt_intx_sethandler@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), 

    interrupt_intx_sethandler@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    Interrupt_Pbx_Inti@INTERRUPT_PBX$EXT_INTERRUPTHANDLE_high	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Pbx_Inti@INTERRUPT_PBX$EXT_INTERRUPTHANDLE_low	PTR FTN()void  size(2) Largest target is 0

    lat_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllll[1]), LATB(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), 
		 -> LATE(BITBIGSFRlllh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 15
		 -> mes(BANK0[5]), STR_1(CODE[8]), STR_10(CODE[15]), STR_12(CODE[8]), 
		 -> STR_13(CODE[15]), STR_2(CODE[15]), STR_4(CODE[6]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    morot_stop@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), 

    morot_turn_left@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_2(BANK0[2]), 

    morot_turn_right@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), 

    motor_intialize@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), motor_2(BANK0[2]), 

    mssp_i2c$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    mssp_i2c$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    mssp_i2c$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Init@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Init@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Init@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Master_Read_Blocking@i2c_data	PTR unsigned char  size(2) Largest target is 6
		 -> ds13_data(BANK1[6]), tc74(BANK0[1]), 

    MSSP_I2C_Master_Read_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), 

    MSSP_I2C_Master_read_data_in_register@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(BANK0[1]), 

    MSSP_I2C_Master_read_data_in_register@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Master_read_data_in_register@ret_data	PTR unsigned char  size(2) Largest target is 6
		 -> ds13_data(BANK1[6]), tc74(BANK0[1]), 

    MSSP_I2C_Master_Send_Repeated_Start@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Master_Send_Start@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), write_byte_24c02c@mssp_i2c(COMRAM[2]), 

    MSSP_I2C_Master_Send_Stop@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), write_byte_24c02c@mssp_i2c(COMRAM[2]), 

    MSSP_I2C_Master_Write_Blocking@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(BANK0[1]), 

    MSSP_I2C_Master_Write_Blocking@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), read_byte_24c02c@mssp_i2c(COMRAM[2]), write_byte_24c02c@mssp_i2c(COMRAM[2]), 

    port_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), 
		 -> PORTE(BITBIGSFRllll[1]), 

    RB4_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S103$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S153$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S153$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S153$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S171$CCP2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S185$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S195$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S233$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int0_interrupt(), 

    S3004$EXT_INTERRUPTHANDLE_high	PTR FTN()void  size(2) Largest target is 0

    S3004$EXT_INTERRUPTHANDLE_low	PTR FTN()void  size(2) Largest target is 0

    S3599$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    S3749$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    S4079$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    S5145$buffer	PTR unsigned char  size(2) Largest target is 0

    S5145$source	PTR const unsigned char  size(2) Largest target is 0

    S56$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S56$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S56$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    S56$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), ADC_2(BANK1[6]), 

    select_result_format@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_14(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), 
		 -> STR_17(CODE[3]), STR_18(CODE[3]), STR_19(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), mes(BANK0[5]), 

    tc74_read_value@_ack	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_ack(BANK0[1]), 

    tc74_read_value@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    tc74_read_value@ret_data	PTR unsigned char  size(1) Largest target is 1
		 -> tc74(BANK0[1]), 

    Timer0_init@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    TIMER0_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer0_mode@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    timer0_prescaler_cfg@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    timer0_register_size@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_init@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    TIMER1_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer1_mode_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    timer1_osc_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    timer1_reg_bit_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    Timer2$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_init@Timer2	PTR const struct . size(2) Largest target is 4
		 -> Timer2(BANK1[4]), 

    Timer2_init@Timer2$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER2_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_init@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    TIMER3_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer3_mode_cfg@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    timer3_reg_bit_cfg@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 0

    tris_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    usart_1$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_1$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_1$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    usart_1$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    usart_ASYNC_init@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    usart_ASYNC_read_byte_blocking@data	PTR unsigned char  size(1) Largest target is 1
		 -> dataReceiveUART(COMRAM[1]), 

    usart_async_rx_int@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    usart_async_rx_int@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_rx_int@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_rx_int@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    usart_async_rx_int@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    usart_async_tx_int@usart	PTR const struct . size(2) Largest target is 18
		 -> usart_1(BANK1[18]), 

    usart_async_tx_int@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), 

    usart_async_tx_int@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_FRAMERROR_Interrupthandler	PTR FTN()void  size(2) Largest target is 2
		 -> usart_1$USART_FRAMING_ERROR_INTERRUPT_HANDLER(BANK1[2]), NULL(), 

    USART_OVERRUN_Interrupthandler	PTR FTN()void  size(2) Largest target is 2
		 -> usart_1$USART_OVERRUN_ERROR_INTERRUPT_HANDLER(BANK1[2]), NULL(), 

    USART_RX_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> interrupt_usart_rx(), NULL(), 

    USART_TX_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_14(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), 
		 -> STR_17(CODE[3]), STR_18(CODE[3]), STR_19(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_14(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), 
		 -> STR_17(CODE[3]), STR_18(CODE[3]), STR_19(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_14(CODE[3]), STR_15(CODE[3]), STR_16(CODE[3]), 
		 -> STR_17(CODE[3]), STR_18(CODE[3]), STR_19(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _tc74_read_value->_MSSP_I2C_Master_read_data_in_register
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _morot_turn_right->_GPIO_pIN_WRITE_LOGIC
    _morot_turn_left->_GPIO_pIN_WRITE_LOGIC
    _morot_stop->_GPIO_pIN_WRITE_LOGIC
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _baudrate_calculate->___fltol
    _motor_intialize->_GPIO_pIN_INTIALIZE
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_pIN_WRITE_LOGIC
    _lcd_4bit_send_enable_signal->_GPIO_pIN_WRITE_LOGIC
    _ccp2_init->___lldiv
    _ccp1_init->___lldiv
    ___lldiv->___lmul
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _Interrupt_Intx_Inti->_interrupt_intx_pin_inti
    _interrupt_intx_sethandler->_INT0_setinterrupthandler
    _interrupt_intx_sethandler->_INT1_setinterrupthandler
    _interrupt_intx_sethandler->_INT2_setinterrupthandler
    _interrupt_intx_pin_inti->_GPIO_pIN_INTIALIZE
    _GPIO_pIN_INTIALIZE->_GPIO_pIN_WRITE_LOGIC
    _ADC_inti->_adc_channel_port_confige
    _ds1307_read_values->_MSSP_I2C_Master_read_data_in_register
    _MSSP_I2C_Master_read_data_in_register->_MSSP_I2C_Master_Read_Blocking
    _ccp2_pwm_set_duty->___fltol
    _ccp1_pwm_set_duty->___fltol
    ___fltol->___flmul
    ___flmul->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _ADC_get_conversion_blocking->_ADC_select_channal
    _ADC_select_channal->_adc_channel_port_confige

Critical Paths under _interrupt_manager in COMRAM

    _USART_RX_ISR->_interrupt_usart_rx
    _interrupt_usart_rx->_usart_ASYNC_read_byte_blocking
    _int0_interrupt->i2_GPIO_pIN_TOGGLE_LOGIC

Critical Paths under _main in BANK0

    _intitialized_functions->_MSSP_I2C_Init
    _usart_ASYNC_init->_baudrate_calculate
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations

Critical Paths under _interrupt_manager in BANK0

    None.

Critical Paths under _main in BANK1

    _intitialized_functions->_usart_ASYNC_init
    _usart_ASYNC_init->_baudrate_calculate

Critical Paths under _interrupt_manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  305239
                                             10 BANK1      4     4      0
        _ADC_get_conversion_blocking
              _GPIO_pIN_TOGGLE_LOGIC
               _GPIO_pIN_WRITE_LOGIC
                            ___lldiv
                             ___lmul
                  _ccp1_pwm_set_duty
                  _ccp2_pwm_set_duty
                 _convert_hex_to_dec
                 _ds1307_read_values
             _intitialized_functions
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                         _morot_stop
                    _morot_turn_left
                   _morot_turn_right
                            _sprintf
                    _tc74_read_value
    _usart_ASYNC_write_byte_blocking
 ---------------------------------------------------------------------------------
 (1) _usart_ASYNC_write_byte_blocking                      2     2      0      68
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _tc74_read_value                                      6     0      6   10056
                                             25 COMRAM     6     0      6
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
_MSSP_I2C_Master_read_data_in_regist
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    5617
                                             37 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    3871
                                             33 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    3410
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     957
                                             12 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     183
                                             18 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _morot_turn_right                                     3     2      1    6513
                                             21 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _morot_turn_left                                      3     2      1    6243
                                             21 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _morot_stop                                           3     2      1    6243
                                             21 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   50145
                                             34 COMRAM     6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          5     1      4   45431
                                             34 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   23575
                                             28 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   20547
                                             25 COMRAM     3     1      2
               _GPIO_pIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _intitialized_functions                               0     0      0  104506
                           _ADC_inti
                 _GPIO_pIN_INTIALIZE
                _Interrupt_Intx_Inti
                      _MSSP_I2C_Init
                        _Timer2_init
                          _ccp1_init
                          _ccp2_init
                 _lcd_4bit_intialize
                    _motor_intialize
                   _usart_ASYNC_init
 ---------------------------------------------------------------------------------
 (2) _usart_ASYNC_init                                     3     1      2   11678
                                              8 BANK1      2     0      2
                 _baudrate_calculate
                 _usart_async_rx_int
                 _usart_async_tx_int
 ---------------------------------------------------------------------------------
 (3) _usart_async_tx_int                                   2     0      2     307
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _usart_async_rx_int                                   2     0      2     369
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _baudrate_calculate                                  12    10      2   10772
                                              0 BANK0      4     2      2
                                              0 BANK1      8     8      0
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_intialize                                      3     2      1    8858
                                             25 COMRAM     3     2      1
                 _GPIO_pIN_INTIALIZE
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   4     3      1   31917
                                             28 COMRAM     4     3      1
                 _GPIO_pIN_INTIALIZE
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   22707
                                             25 COMRAM     3     1      2
               _GPIO_pIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     2      2    7031
                                             21 COMRAM     4     2      2
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     2      1    6479
                                             21 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _ccp2_init                                            7     5      2   10142
                                             37 COMRAM     7     5      2
                 _GPIO_pIN_INTIALIZE
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            7     5      2   10142
                                             37 COMRAM     7     5      2
                 _GPIO_pIN_INTIALIZE
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     596
                                             12 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     561
                                             24 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer2_init                                          4     2      2     316
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Init                                        3     1      2   11167
                                              3 BANK0      2     0      2
                                              0 BANK1      1     1      0
_I2C_Master_Mode_Clock_Configuration
      _I2C_Slave_Mode_Configurations
  _MSSP_I2C_Interrupt_Configurations
             _MSSP_I2C_Mode_GPIO_CFG
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Mode_GPIO_CFG                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Interrupt_Configurations                    2     0      2     183
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Slave_Mode_Configurations                        3     1      2     121
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Mode_Clock_Configurations                 3     1      2   10330
                                              0 BANK0      3     1      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Intx_Inti                                  3     1      2   10941
                                             28 COMRAM     3     1      2
               _interrupt_intx_clear
             _interrupt_intx_disable
           _interrupt_intx_edge_inti
              _interrupt_intx_enable
            _interrupt_intx_pin_inti
          _interrupt_intx_sethandler
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_sethandler                            5     3      2     765
                                             14 COMRAM     5     3      2
           _INT0_setinterrupthandler
           _INT1_setinterrupthandler
           _INT2_setinterrupthandler
 ---------------------------------------------------------------------------------
 (4) _INT2_setinterrupthandler                             3     1      2     158
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_setinterrupthandler                             3     1      2     158
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_setinterrupthandler                             3     1      2     158
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_pin_inti                              3     1      2    8734
                                             25 COMRAM     3     1      2
                 _GPIO_pIN_INTIALIZE
 ---------------------------------------------------------------------------------
 (3) _GPIO_pIN_INTIALIZE                                   4     2      2    8542
                                             21 COMRAM     4     2      2
       _GPIO_pIN_DIRECTION_INTIALIZE
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _GPIO_pIN_WRITE_LOGIC                                 9     6      3    6017
                                             12 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (4) _GPIO_pIN_DIRECTION_INTIALIZE                         8     6      2     617
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_enable                                5     3      2     201
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_edge_inti                             5     3      2     387
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_disable                               5     3      2     291
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_clear                                 5     3      2     201
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_inti                                             4     2      2     803
                                             15 COMRAM     4     2      2
           _adc_channel_port_confige
              _configure_voltage_ref
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     152
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_ref                                2     0      2     152
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ds1307_read_values                                   6     0      6   10430
                                             25 COMRAM     6     0      6
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
_MSSP_I2C_Master_read_data_in_regist
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Master_read_data_in_register                9     2      7    7039
                                             17 COMRAM     8     1      7
      _MSSP_I2C_Master_Read_Blocking
_MSSP_I2C_Master_Send_Repeated_Start
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Master_Write_Blocking                       5     1      4    2601
                                             12 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Master_Send_Repeated_Start                  3     1      2     137
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Master_Read_Blocking                        6     1      5     711
                                             12 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Master_Send_Stop                            3     1      2     950
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Master_Send_Start                           3     1      2     950
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convert_hex_to_dec                                   2     2      0      96
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ccp2_pwm_set_duty                                   11    11      0   13411
                                              0 BANK0      2     2      0
                                              0 BANK1      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ccp1_pwm_set_duty                                   11    11      0   13411
                                              0 BANK0      2     2      0
                                              0 BANK1      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1256
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     757
                                             92 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3053
                                             67 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3743
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4422
                                             51 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _GPIO_pIN_TOGGLE_LOGIC                                6     5      1     486
                                             12 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _ADC_get_conversion_blocking                          6     2      4    2374
                                             20 COMRAM     6     2      4
              _ADC_ISconversion_done
            _ADC_ISconversion_result
                 _ADC_select_channal
               _ADC_start_conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_start_conversion                                 3     1      2     251
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_select_channal                                   5     2      3     524
                                             15 COMRAM     5     2      3
           _adc_channel_port_confige
 ---------------------------------------------------------------------------------
 (3) _adc_channel_port_confige                             3     3      0      31
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_ISconversion_result                              7     4      3     437
                                             12 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _ADC_ISconversion_done                                4     1      3     313
                                             12 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_manager                                    6     6      0    1163
                                              6 COMRAM     6     6      0
              _ADC_handeler_funvtion
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
                         _TIMER2_ISR
                         _TIMER3_ISR
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (7) _USART_TX_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USART_RX_ISR                                         0     0      0     123
                                NULL *
                 _interrupt_usart_rx *
 ---------------------------------------------------------------------------------
 (8) _interrupt_usart_rx                                   1     1      0     123
                                              1 COMRAM     1     1      0
     _usart_ASYNC_read_byte_blocking
 ---------------------------------------------------------------------------------
 (9) _usart_ASYNC_read_byte_blocking                       2     1      1     122
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (7) _TIMER3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TIMER2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TIMER1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TIMER0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT2_ISR                                             0     0      0     288
                                NULL *
                     _int0_interrupt *
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0     288
                                NULL *
                     _int0_interrupt *
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0     288
                                NULL *
                     _int0_interrupt *
 ---------------------------------------------------------------------------------
 (8) _int0_interrupt                                       0     0      0     288
              _GPIO_PORT_WRITE_LOGIC
            i2_GPIO_pIN_TOGGLE_LOGIC
 ---------------------------------------------------------------------------------
 (9) i2_GPIO_pIN_TOGGLE_LOGIC                              6     5      1     138
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (9) _GPIO_PORT_WRITE_LOGIC                                5     4      1     150
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_handeler_funvtion                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_conversion_blocking
     _ADC_ISconversion_done
     _ADC_ISconversion_result
     _ADC_select_channal
       _adc_channel_port_confige
     _ADC_start_conversion
   _GPIO_pIN_TOGGLE_LOGIC
   _GPIO_pIN_WRITE_LOGIC
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _ccp1_pwm_set_duty
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ccp2_pwm_set_duty
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _convert_hex_to_dec
   _ds1307_read_values
     _MSSP_I2C_Master_Send_Start
     _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_read_data_in_register
       _MSSP_I2C_Master_Read_Blocking
       _MSSP_I2C_Master_Send_Repeated_Start
       _MSSP_I2C_Master_Write_Blocking
   _intitialized_functions
     _ADC_inti
       _adc_channel_port_confige
       _configure_voltage_ref
       _select_result_format
     _GPIO_pIN_INTIALIZE
       _GPIO_pIN_DIRECTION_INTIALIZE
       _GPIO_pIN_WRITE_LOGIC
     _Interrupt_Intx_Inti
       _interrupt_intx_clear
       _interrupt_intx_disable
       _interrupt_intx_edge_inti
       _interrupt_intx_enable
       _interrupt_intx_pin_inti
         _GPIO_pIN_INTIALIZE
       _interrupt_intx_sethandler
         _INT0_setinterrupthandler
         _INT1_setinterrupthandler
         _INT2_setinterrupthandler
     _MSSP_I2C_Init
       _I2C_Master_Mode_Clock_Configurations
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
       _I2C_Slave_Mode_Configurations
       _MSSP_I2C_Interrupt_Configurations
       _MSSP_I2C_Mode_GPIO_CFG
     _Timer2_init
     _ccp1_init
       _GPIO_pIN_INTIALIZE
       ___lldiv
       ___lmul
     _ccp2_init
       _GPIO_pIN_INTIALIZE
       ___lldiv
       ___lmul
     _lcd_4bit_intialize
       _GPIO_pIN_INTIALIZE
       _lcd_4bit_send_command
         _GPIO_pIN_WRITE_LOGIC
         _lcd_4bit_send_enable_signal
           _GPIO_pIN_WRITE_LOGIC
         _lcd_send_4bits
           _GPIO_pIN_WRITE_LOGIC
     _motor_intialize
       _GPIO_pIN_INTIALIZE
     _usart_ASYNC_init
       _baudrate_calculate
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
       _usart_async_rx_int
       _usart_async_tx_int
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _GPIO_pIN_WRITE_LOGIC
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _morot_stop
     _GPIO_pIN_WRITE_LOGIC
   _morot_turn_left
     _GPIO_pIN_WRITE_LOGIC
   _morot_turn_right
     _GPIO_pIN_WRITE_LOGIC
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _tc74_read_value
     _MSSP_I2C_Master_Send_Start
     _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_read_data_in_register
   _usart_ASYNC_write_byte_blocking

 _interrupt_manager (ROOT)
   _ADC_handeler_funvtion
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
     NULL(Fake) *
     _int0_interrupt *
       _GPIO_PORT_WRITE_LOGIC
       i2_GPIO_pIN_TOGGLE_LOGIC
   _INT1_ISR
     NULL(Fake) *
     _int0_interrupt *
   _INT2_ISR
     NULL(Fake) *
     _int0_interrupt *
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR
   _TIMER2_ISR
   _TIMER3_ISR
   _USART_RX_ISR
     NULL(Fake) *
     _interrupt_usart_rx *
       _usart_ASYNC_read_byte_blocking
   _USART_TX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      E      A3       7       63.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      5      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     66      72       1       90.5%
BITBIGSFRhhhlhh     18      0       0      38        0.0%
BITBIGSFRhhhh        D      0       0      37        0.0%
BITBIGSFRllhh        6      0       0      46        0.0%
BITBIGSFRhhhlhh      5      0       0      39        0.0%
BITBIGSFRlhhhhh      4      0       0      43        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRllll        4      0       0      48        0.0%
BITBIGSFRlhhll       3      0       0      44        0.0%
BITBIGSFRlhhhhh      1      0       0      42        0.0%
BITBIGSFRlhl         1      0       0      45        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BITBIGSFRhl          1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     195      12        0.0%
DATA                 0      0     195       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Sep 17 20:13:18 2024

               __end_of_INT1_setinterrupthandler 5580             ADC_select_channal@ADC_CHANNAL_SELECT 0012  
                                   ___fldiv@aexp 0033                                     ___fldiv@bexp 0032  
                                   ___fldiv@sign 002B                                  ?_lcd_send_4bits 0016  
                                    _SSPSTATbits 0FC7                                     ___awdiv@sign 0012  
                          _CCP2_Interrupthandler 00B6                                              l153 566A  
                                            l401 50F2                                              l146 421C  
                                            l412 337A                                              l244 3D7C  
                                            l254 4E48                                              l351 4C46  
                       ??_intitialized_functions 0067                                              l249 4EA6  
                                            l354 5228                                              l259 51B2  
                                            l275 47C6                                              l613 4AD4  
                                            l606 416A                                              l391 506A  
                                            l616 4AF2                                              l377 4698  
                                            l386 51EE                                              l538 529A  
                                            l651 4FDC                                              l571 4008  
                                            l644 5134                                              l396 50AE  
                                            l653 4FE0                                              l573 40AC  
                                            l646 5136                                              l639 3E54  
                                            l583 5262                                              l831 3606  
                                            l586 5536                                              l850 384E  
                                            l595 4F4C                                              l587 553C  
                                            l747 3968                                              l739 30AC  
                                            l588 553E                                              l941 339A  
                                            l871 496E                                              l695 3A82  
                                            l687 3214                                              l857 4D20  
                                            l971 52FA                                              l947 341C  
                                            l981 54EE                                              l974 530A  
                                            l982 54F0                                              l967 52EA  
                                            l959 34D2                                              l992 52D2  
                                            l969 52EC                                              l985 52B2  
                                            l977 54DE                                              l987 52B4  
                                            l979 54E0                                              l995 4DB2  
                                            l989 52C2                                              l999 4DB6  
                                            _PR2 0FCB                                ??_motor_intialize 001B  
                           ?_Interrupt_Intx_Inti 001D                                              _abs 5378  
                                            _mes 00C5                                              _ret 00C4  
            __end_of_lcd_4bit_send_enable_signal 522A                      _lcd_4bit_send_enable_signal 51F0  
     MSSP_I2C_Master_Send_Repeated_Start@i2c_obj 000D                                     ___awmod@sign 0012  
                                            tosl 0FFD                                              wreg 0FE8  
        __end_of_usart_ASYNC_write_byte_blocking 55F2                ??_usart_ASYNC_write_byte_blocking 000D  
               ?_usart_ASYNC_write_byte_blocking 0001                  _usart_ASYNC_write_byte_blocking 55D8  
                          _Int2_interrupthandler 00AA                                     ___flmul@aexp 0051  
                                   ___flmul@bexp 0056                      lcd_send_4bits@_data_command 0017  
                                   ___flmul@sign 0050                                     ___flmul@temp 005B  
                                   ___flmul@prod 0057                         ??_MSSP_I2C_Mode_GPIO_CFG 000D  
                ??_MSSP_I2C_Master_Read_Blocking 0012                                  __end_of_RB4_ISR 565A  
                                __end_of_RB5_ISR 5640                                  __end_of_RB6_ISR 5626  
                                __end_of_RB7_ISR 560C                                     ___fltol@exp1 0066  
                                           l1001 4DC4                                             l1004 4DEA  
                                           l1022 48AE                                             l1014 487E  
                                           l1031 48E2                                             l1018 4880  
                                           l2010 42CC                                             l1027 48D4  
                                           ?_abs 0013                                             l1204 559E  
                                           l1045 4730                                             l1117 4CB4  
                                           l1214 555E                                             l1062 4600  
                                           l1160 4B64                                             l1144 4A16  
                                           l1209 557E                                             l1225 4378  
                                           l1065 55BA                                             l1146 4A24  
                                           l1155 4B0E                                             l1147 4A2E  
                                           l1059 56B4                                             l1068 4F96  
                                           l1157 4B18                                             l1149 4A78  
                                           l1158 4B1E                                             l2311 1E32  
                                           l2303 1FE8                                             l2063 3B88  
                                           l1183 3732                                             l2320 1F02  
                                           l2321 1EF0                                             l1194 4B80  
                                           l1196 4B8A                                             l1188 53DA  
                                           l2421 2DE8                                             l1197 4B90  
                                           l2501 53AA                                             l1701 55DA  
                                           l2350 2A22                                             l1199 4BD6  
                                           l1703 55E8                                             l2424 2F44  
                                           l1552 44E2                                             l1800 44C6  
                                           l1720 187A                                             l1704 55F0  
                                           l2361 2AE0                                             l2353 29E6  
                                           l1721 192E                                             l2513 4422  
                                           l2362 2ACE                                             l1554 4564  
                                           l1722 19E0                                             l2450 5376  
                                           l2435 2EDC                                             l1723 1B28  
                                           l2348 2BC2                                             l2380 20AE  
                                           l2428 2E80                                             l1716 165E  
                                           l1732 3F08                                             l2524 56D2  
                                           l2294 1D18                                             l2390 230A  
                                           l1718 1712                                             l2295 1D06  
                                           l2359 2A68                                             l1719 17C6  
                                           l2296 1CCC                                             l2384 2412  
                                           l1680 4FFA                                             l1753 3C82  
                                           l1738 3F28                                             l1682 5026  
                                           l2387 22A4                                             l1747 3C62  
                                           l2397 23D4                                             l2389 231C  
                                           l2494 5176                                             l2488 2D90  
                                           l1793 44B6                                             l1777 4D7A  
                                           l1778 4D8A                                             l2498 5392  
                                           l1997 3FEC                                             _ADC_ 0153  
                                           l9700 4C0A                                             l9710 5206  
                                           l9702 4C26                                             l9800 1C42  
                                           l9640 3774                                             l9632 3734  
                                           l9720 5580                                             l9712 520E  
                                           l9810 1C56                                             l9802 1C46  
                                           l9642 37CE                                             l9634 3738  
                                           l9722 5592                                             l9730 5572  
                                           l9714 5226                                             l9706 51F0  
                                           l9900 1EB2                                             l9812 1C5A  
                                           l9804 1C4A                                             l9820 1C6A  
                                           l9660 34EA                                             l9636 374A  
                                           l9724 5596                                             l9732 5576  
                                           l9740 5556                                             l9708 51F0  
                                           l9902 1EC0                                             l9830 1CDA  
                                           l9822 1C6E                                             l9814 1C5E  
                                           l9806 1C4E                                             l9750 1B56  
                                           l9742 1B2A                                             l9670 35C2  
                                           l9662 350C                                             l9646 3822  
                                           l9638 376C                                             l9718 5580  
                                           l9726 5560                                             l9734 5540  
                                           l9912 1F12                                             l9920 1F68  
                                           l9904 1EC4                                             l9840 1D04  
                                           l9832 1CE6                                             l9824 1C98  
                                           l9816 1C62                                             l9808 1C52  
                                           l9760 1B90                                             l9752 1B66  
                                           l9744 1B36                                             l9664 3514  
                                           l9672 3604                                             l9656 34D4  
                                           l9648 384C                                             l9680 4CB6  
                                           l9728 5560                                             l9736 5540  
                                           l9930 1FBA                                             l9922 1F78  
                                           l9914 1F1E                                             l9906 1ED2  
                                           l9850 1D5A                                             l9842 1D26  
                                           l9834 1CEA                                             l9826 1CB4  
                                           l9818 1C66                                             l9770 1BBE  
                                           l9762 1B96                                             l9754 1B76  
                                           l9746 1B44                                             l9666 356E  
                                           l9658 34D8                                             l9690 4D1E  
                                           l9682 4CB6                                             l9738 5552  
                                           l9940 1FD8                                             l9932 1FC0  
                                           l9924 1F88                                             l9916 1F2C  
                                           l9908 1EE8                                             l9860 1D94  
                                           l9852 1D68                                             l9844 1D36  
                                           l9836 1CF8                                             l9828 1CC4  
                                           l9780 1BF2                                             l9772 1BC0  
                                           l9764 1BA8                                             l9756 1B78  
                                           l9748 1B46                                             l9684 4CC8  
                                           l9934 1FC2                                             l9926 1FA8  
                                           l9918 1F66                                             l9870 1E00  
                                           l9862 1D96                                             l9854 1D76  
                                           l9838 1CFA                                             l9790 1C2E  
                                           l9774 1BD0                                             l9782 1BFA  
                                           l9766 1BAA                                             l9758 1B80  
                                           l9950 2846                                             l9686 4CEA  
                                           l9694 4BD8                                             STR_1 1020  
                                           l9936 1FC8                                             l9928 1FAC  
                                           l9880 1E58                                             l9872 1E02  
                                           l9864 1DA0                                             l9856 1D82  
                                           l9848 1D4A                                             l9792 1C32  
                                           l9784 1C0A                                             l9776 1BE0  
                                           l9768 1BB0                                             l9952 2856  
                                           l9960 2880                                             l9944 282A  
                                           l9688 4CF2                                             l9696 4BD8  
                                           STR_2 1011                                             STR_3 102E  
                                           l9938 1FD6                                             l9890 1E86  
                                           l9874 1E12                                             l9858 1D86  
                                           l9866 1DA6                                             l9794 1C36  
                                           l9786 1C1C                                             l9778 1BF0  
                                           l9970 28AC                                             l9962 2890  
                                           l9954 2866                                             l9946 2836  
                                           l9698 4BF0                                             STR_4 1028  
                                           STR_5 1031                                             l9892 1E94  
                                           l9884 1E6C                                             l9868 1DCC  
                                           l9876 1E22                                             l9796 1C3A  
                                           l9788 1C2A                                             l9972 28BC  
                                           l9980 28E6                                             l9964 2896  
                                           l9956 2876                                             l9948 2844  
                                           STR_6 1031                                             STR_7 1031  
                                           l9894 1E9C                                             l9886 1E76  
                                           l9878 1E48                                             l9798 1C3E  
                                           l9990 2928                                             l9982 28F6  
                                           l9974 28CC                                             l9966 289C  
                                           l9958 2878                                             STR_8 1031  
                                           STR_9 1031                                             l9896 1EA0  
                                           l9888 1E84                                             l9984 290C  
                                           l9976 28DC                                             l9968 28AA  
                                           l9898 1EB0                                             l9986 291C  
                                           l9994 293C                                             l9978 28DE  
                                           l9996 294C                                             l9988 2924  
                                           l9998 294C                                             _LATA 0F89  
                                           _LATB 0F8A                                             _LATC 0F8B  
                                           _LATD 0F8C                                             _LATE 0F8D  
                     i2GPIO_pIN_TOGGLE_LOGIC@ret 0006                                             u9200 34EA  
                                           u9201 34E6                                             u9210 350C  
                                           u9211 3508                                             u9300 5552  
                                           u9301 554E                                             u9310 1B44  
                                           u9311 1B40                                             u9400 1C98  
                                           u9320 1B56                                             u9240 35DA  
                                           u9224 3534                                             u9160 374A  
                                           u9401 1C94                                             u9321 1B52  
                                           u9241 35D4                                             u9225 3530  
                                           u9161 3746                                             u9410 1CB0  
                                           u9330 1B66                                             u9250 35DC  
                                           u9234 358E                                             u9170 376C  
                                           u9411 1CAA                                             u9331 1B62  
                                           u9235 358A                                             u9171 3768  
                                           u9500 1D94                                             u9420 1CB2  
                                           u9340 1BA8                                             u9260 4CC8  
                                           u9501 1D90                                             u9341 1BA4  
                                           u9261 4CC4                                             u9510 1DCC  
                                           u9430 1CDA                                             u9350 1BBE  
                                           u9270 4CEA                                             u9511 1DC8  
                                           u9431 1CD6                                             u9351 1BBA  
                                           u9271 4CE6                                             u9600 1EE8  
                                           u9520 1E12                                             u9440 1CF8  
                                           u9360 1BD0                                             u9184 3794  
                                           u9280 5592                                             u9601 1EE4  
                                           u9521 1E0E                                             u9441 1CF4  
                                           u9361 1BCC                                             u9185 3790  
                                           u9281 558E                                             u9610 1EFE  
                                           u9530 1E48                                             u9450 1D18  
                                           u9370 1BE0                                             u9194 37EE  
                                           u9290 5572                                             u9611 1EFA  
                                           u9531 1E44                                             u9451 1D14  
                                           u9371 1BDC                                             u9195 37EA  
                                           u9291 556E                                             u9620 1F12  
                                           u9540 1E58                                             u9460 1D26  
                                           u9380 1C1C                                             u9700 2844  
                                           u9621 1F0E                                             u9541 1E54  
                                           u9461 1D22                                             u9381 1C18  
                                           u9701 2840                                             u9630 1F2C  
                                           u9550 1E84                                             u9470 1D36  
                                           u9390 1C2A                                             u9710 2856  
           interrupt_intx_disable@INTERRUPT_INTX 000D                                             u9631 1F28  
                                           u9551 1E80                                             u9471 1D32  
                                           u9391 1C26                                             u9711 2852  
                                           u9640 1F66                                             u9560 1E94  
                                           u9480 1D68                                             u9800 2A0E  
                                           u9720 2866                                             u9641 1F62  
                                           u9561 1E90                                             u9481 1D64  
                                           u9801 2A0A                                             u9721 2862  
                                           u9650 1F78                                             u9570 1EB0  
                                           u9490 1D76                                             u9810 2A32  
                                           u9730 28AA                                             u9651 1F74  
                                           u9571 1EAC                                             u9491 1D72  
                                           u9811 2A2E                                             u9731 28A6  
                                           u9660 1F88                                             u9580 1EC0  
                                           u9900 2B52                                             u9820 2A48  
                                           u9740 28BC                                             u9661 1F84  
                                           u9581 1EBC                                             u9901 2B4E  
                                           u9821 2A44                                             u9741 28B8  
                                           u9670 1FA8                                             u9590 1ED2  
                                           u9910 2B82                                             u9830 2A66  
                                           u9750 28CC                                             u9671 1FA4  
                                           u9591 1ECE                                             u9911 2B7E  
                                           u9831 2A62                                             u9751 28C8  
                                           u9680 1FBA                                             u9920 2BB0  
                                           u9840 2A86                                             u9760 290C  
                                           u9681 1FB6                                             u9921 2BAC  
                                           u9841 2A82                                             u9761 2908  
                                           u9690 1FD6                                             u9850 2A98  
                                           u9770 294C                                             u9930 3F3C  
                                           u9691 1FD2                                             u9851 2A94  
                                           u9771 2948                                             u9931 3F38  
                                           u9860 2AC6                                             u9780 29C2  
                                           u9940 3F56                                             u9861 2AC2  
                                           u9781 29BE                                             u9941 3F52  
                                           u9870 2ADC                                             u9790 29E4  
                                           u9950 3F7C                                             u9871 2AD8  
                                           u9791 29E0                                             u9951 3F78  
                                           u9880 2AF0                                             u9960 3F9A  
                                           u9881 2AEC                                             u9961 3F96  
                                           u9890 2B0A                                             u9970 3FB6  
                                           _TMR2 0FCC                                             u9891 2B06  
                                           u9971 3FB2                                             u9980 3FDC  
                                           u9981 3FD8                                             u9990 4230  
                                           u9991 422C                    ADC_ISconversion_done@ADC_conf 000D  
                  ??_lcd_4bit_send_enable_signal 0017                                             _tc74 00D1  
                                           abs@a 0013                                             _dbuf 0159  
                                           _main 1034                                 __end_of_CCP1_ISR 56CE  
                               __end_of_CCP2_ISR 56CA                        ?_adc_channel_port_confige 0001  
                                           _prec 0082                          tc74_read_value@ret_data 001E  
                                           fsr0h 0FEA                                             fsr1h 0FE2  
                                           indf0 0FEF                                             fsr2h 0FDA  
                                           fsr0l 0FE9                                             indf1 0FE7  
                                           indf2 0FDF                                             fsr1l 0FE1  
                                           fsr2l 0FD9                                             btemp 0073  
              lcd_4bit_send_char_data_pos@column 0025                                             prodh 0FF4  
                                           prodl 0FF3                       interrupt_intx_pin_inti@ret 001C  
                                           start 000E                                 __end_of_ADC_inti 40AE  
                                ___fldiv@new_exp 002C                  __end_of_ADC_ISconversion_result 416C  
                      _interrupt_intx_sethandler 42CE                       ??_INT0_setinterrupthandler 000F  
                     __end_of_ds1307_read_values 337C                                     ___param_bank 0000  
       INT2_setinterrupthandler@interrupthandler 000D         INT1_setinterrupthandler@interrupthandler 000D  
       INT0_setinterrupthandler@interrupthandler 000D                            _lcd_4bit_send_command 4E4A  
                                          ??_abs 0015                            GPIO_pIN_INTIALIZE@ret 0019  
                                    ?_TIMER0_ISR 0001                                _return_data_array 0179  
                                    ?_TIMER1_ISR 0001                   lcd_4bit_send_string_pos@column 0025  
                                    ?_TIMER2_ISR 0001                                      ?_TIMER3_ISR 0001  
                          lcd_4bit_intialize@lcd 001D                        ??i2_GPIO_pIN_TOGGLE_LOGIC 0002  
                      GPIO_PORT_WRITE_LOGIC@port 0004                            lcd_4bit_intialize@ret 0020  
                               __end_of_INT0_ISR 546C                                 __end_of_INT1_ISR 543C  
                               __end_of_INT2_ISR 540C                  __end_of_interrupt_intx_pin_inti 53DC  
                                          l10010 29AA                                            l10002 2960  
                                          l10020 29F0                                            l10012 29B2  
                                          l10004 297A                                            l10100 3F7C  
                                          l10030 2A48                                            l10022 2A0E  
                                          l10014 29C2                                            l10006 298A  
                                          l10110 3FB6                                            l10102 3F84  
                                          l10040 2A86                                            l10032 2A4E  
                                          l10024 2A10                                            l10016 29D6  
                                          l10008 299A                                            l10200 3B68  
                                          l11000 31E6                                            l10120 3FDC  
                                          l10112 3FBE                                            l10104 3F8C  
                                          l10050 2AF0                                            l10042 2A8A  
                                          l10034 2A58                                            l10026 2A20  
                                          l10018 29E4                                            l10202 3B78  
                                          l10210 2DB2                                            l11010 320C  
                                          l11002 31F6                                            l10122 3FE4  
                                          l10114 3FC0                                            l10106 3F9A  
                                          l10130 4230                                            l10060 2B52  
                                          l10052 2AFC                                            l10044 2A98  
                                          l10036 2A66                                            l10028 2A32  
                                          l10220 2E2A                                            l10212 2DF8  
                                          l11020 52D4                                            l10300 4868  
                                          l11012 320E                                            l11004 31F8  
                                          l10116 3FC6                                            l10108 3FA0  
                                          l10140 4264                                            l10132 4238  
                                          l10070 2BB0                                            l10062 2B68  
                                          l10054 2B0A                                            l10046 2AC6  
                                          l10038 2A78                                            l10230 2EB2  
                                          l10222 2E36                                            l10214 2E0E  
                                          l10206 2D94                                            l11022 52E6  
                                          l11030 529C                                            l10310 48C0  
                                          l10302 487A                                            l11006 31FA  
                                          l11014 3212                                            l10118 3FCC  
                                          l10150 42A0                                            l10142 426C  
                                          l10134 423C                                            l10126 421E  
                                          l10320 3D84                                            l10072 2BB6  
                                          l10064 2B82                                            l10056 2B34  
                                          l11200 2004                                            l10240 2EF0  
                                          l10232 2EBE                                            l10224 2E68  
                                          l10208 2DA4                                            l11024 530A  
                                          l11032 529C                                            l10312 48D0  
                                          l10304 488E                                            l11120 46C0  
                                          l11112 469A                                            l10400 4B06  
                                          l11008 320A                                            l10152 42A6  
                                          l10144 4274                                            l10136 424A  
                                          l10128 4222                                            l10330 3DA2  
                                          l10322 3D8A                                            l11130 522A  
                                          l10074 2BB8                                            l10066 2B9E  
                                          l10058 2B38                                            l11210 203C  
                                          l11202 2006                                            l10170 3AD8  
                                          l10162 3A84                                            l10242 2F14  
                                          l10234 2ECC                                            l10226 2E6A  
                                          l10218 2E22                                            l11018 52D4  
                                          l11034 52AE                                            l10314 48E2  
                                          l10306 489A                                            l11122 46E8  
                                          l11114 469A                                            l10402 4B10  
                                          l10410 4B24                                            l11042 4DEC  
                                          l10090 3F48                                            l10082 3F2A  
                                          l10146 4282                                            l10154 42AC  
                                          l10138 4252                                            l10340 3DC0  
                                          l10332 3DA8                                            l10324 3D90  
                                          l11140 525C                                            l11132 522A  
                                          l10068 2BA2                                            l11300 2346  
                                          l11220 2068                                            l11212 204C  
                                          l11204 2016                                            l10172 3ADA  
                                          l10164 3A9A                                            l10244 2F24  
                                          l10236 2EEA                                            l10228 2E76  
                                          l11036 52D2                                            l10308 48AA  
                                          l11124 46F4                                            l11116 46AC  
                                          l10420 4B66                                            l10412 4B62  
                                          l10500 53D8                                            l11044 4DFC  
                                          l11060 4634                                            l11052 4602  
                                          l10092 3F56                                            l10084 3F2E  
                                          l10156 42BC                                            l10148 4298  
                                          l10260 43C0                                            l10252 437A  
                                          l10342 3DC6                                            l10334 3DAE  
                                          l10326 3D96                                            l10318 3D80  
                                          l11142 5260                                            l11134 523C  
                                          l11150 552E                                            l11310 23BC  
                                          l11302 2370                                            l11230 20BE  
                                          l11222 2078                                            l11214 2052  
                                          l11206 2026                                            l10174 3AEA  
                                          l10246 2F32                                            l10238 2EEC  
                                          l11126 4708                                            l11118 46BC  
                                          l10422 4B66                                            l10510 42EC  
                                          l10270 4E4A                                            l11046 4E04  
                                          l11062 4648                                            l11054 4606  
                                          l10094 3F5E                                            l10086 3F3C  
                                          l10158 42C4                                            l10262 43F2  
                                          l10254 438A                                            l11160 4F14  
                                          l10344 3DCC                                            l10336 3DB4  
                                          l10328 3D9C                                            l11136 5244  
                                          l11152 5538                                            l11312 23D8  
                                          l11320 23FE                                            l11304 2374  
                                          l11240 20F8                                            l11232 20CE  
                                          l11224 2088                                            l11216 2058  
                                          l11208 2036                                            l10184 3B14  
                                          l10176 3AEE                                            l10168 3AAE  
                                          l10248 2F34                                            l11400 385C  
                                          l10280 4D8C                                            l11128 4720  
                                          l10360 512E                                            l10424 4B78  
                                          l10512 4304                                            l10520 4376  
                                          l10504 42CE                                            l10272 4E5A  
                                          l10600 3EA2                                            l11048 4E46  
                                          l11056 460C                                            l11064 465C  
                                          l10096 3F62                                            l10088 3F44  
                                          l10256 439A                                            l11162 4F24  
                                          l10338 3DBA                                            l11138 5256  
                                          l11146 551C                                            l11322 2402  
                                          l11314 23E8                                            l11306 238E  
                                          l11250 214A                                            l11242 210E  
                                          l11226 2098                                            l11218 2066  
                                          l10194 3B3C                                            l10186 3B1E  
                                          l10178 3AFC                                            l11410 3968  
                                          l11402 385C                                            l10290 4DE0  
                                          l10282 4D8C                                            l10362 4F98  
                                          l10354 50F4                                            l10426 4B82  
                                          l10434 4B96                                            l10450 3622  
                                          l10530 49FC                                            l10514 431E  
                                          l10506 42D2                                            l10370 4566  
                                          l10274 4E62                                            l10610 3EC8  
                                          l10602 3EA4                                            l11058 4620  
                                          l11066 4696                                            l10098 3F6A  
                                          l10266 5378                                            l10258 43A4  
                                          l11330 5150                                            l11164 4F2C  
                                          l11156 4F02                                            l11180 40D8  
                                          l11172 40AE                                            l10348 3DD2  
                                          l11148 551C                                            l11316 23F6  
                                          l11308 23A2                                            l11260 2190  
                                          l11252 2158                                            l11244 211A  
                                          l11236 20E2                                            l11228 209E  
                                          l10196 3B48                                            l10188 3B28  
                                          l11404 38C4                                            l10292 4DEA  
                                          l10284 4D9E                                            l11500 3252  
                                          l10364 4FB2                                            l10356 510E  
                                          l10436 4BD4                                            l10460 366A  
                                          l10452 363E                                            l10444 3608  
                                          l10532 4A0E                                            l10508 42E4  
                                          l10372 4582                                            l10380 4F56  
                                          l10276 4EA4                                            l10620 3F26  
                                          l10612 3EE2                                            l10604 3EA6  
                                          l11340 41A8                                            l10268 5386  
                                          l10700 2C60                                            l11332 516E  
                                          l11420 5344                                            l11166 4F46  
                                          l11158 4F02                                            l11190 4164  
                                          l11182 40F2                                            l11174 40AE  
                                          l11318 23F8                                            l11270 21FE  
                                          l11262 21AA                                            l11254 2164  
                                          l11246 2132                                            l11238 20EE  
                                          l10198 3B58                                            l11406 393A  
                                          l10390 54DA                                            l10286 4DAE  
                                          l11510 32BE                                            l11502 325E  
                                          l10366 4FBA                                            l10358 5114  
                                          l10470 36AE                                            l10462 3686  
                                          l10454 3644                                            l10446 3608  
                                          l10534 4A1C                                            l10542 4A38  
                                          l10518 4338                                            l10374 55A0  
                                          l10382 4F92                                            l10630 3BC2  
                                          l10622 3B8A                                            l10614 3EE8  
                                          l10606 3EAC                                            l11350 4200  
                                          l11342 41C4                                            l10710 2CE4  
                                          l10702 2C6A                                            l11326 5138  
                                          l11422 534C                                            l11414 5264  
                                          l11168 4F4A                                            l11184 4118  
                                          l11192 4168                                            l11176 40C0  
                                          l11280 2294                                            l11272 2228  
                                          l11264 21BA                                            l11256 2174  
                                          l11248 213E                                            l11408 3950  
                                          l10296 4856                                            l10392 54F0  
                                          l10288 4DD4                                            l11520 3332  
                                          l11512 32CA                                            l11504 327E  
                                          l10368 4FD4                                            l10472 36CA  
                                          l10464 368C                                            l10456 3660  
                                          l10448 361A                                            l10544 4A76  
                                          l10528 49FC                                            l10384 4F94  
                                          l10376 56B0                                            l10800 3400  
                                          l10560 176A                                            l10552 1648  
                                          l10640 3C22                                            l10632 3BFE  
                                          l10624 3BA4                                            l10616 3F02  
                                          l10608 3EC6                                            l11352 4210  
                                          l11344 41D4                                            l11336 416C  
                                          l11360 4760                                            l11432 5028  
                                          l10720 2D48                                            l10712 2CF4  
                                          l10704 2C82                                            l11328 5140  
                                          l11424 5354                                            l11416 5270  
                                          l11600 1034                                            l11186 4132  
                                          l11178 40D0                                            l11370 4A7A  
                                          l11290 22D4                                            l11282 22A2  
                                          l11274 225E                                            l11266 21D6  
                                          l11258 2180                                            l11450 39DE  
                                          l11442 396E                                            l11530 565C  
                                          l10298 4856                                            l10386 54C8  
                                          l11522 3336                                            l11514 32D6  
                                          l11506 329A                                            l10474 36D0  
                                          l10466 36A8                                            l10458 3662  
                                          l10482 36F2                                            l10378 4F4E  
                                          l10810 3442                                            l10802 341A  
                                          l10570 1932                                            l10562 17CC  
                                          l10554 1664                                            l10650 3C80  
                                          l10642 3C3C                                            l10634 3C00  
                                          l10626 3BA6                                            l10618 3F0C  
                                          l11346 41E4                                            l11338 419A  
                                          l11362 478E                                            l11354 4732  
                                          l11434 5038                                            l10714 2D04  
                                          l10722 2D4A                                            l10706 2CB6  
                                          l11426 535C                                            l11418 528E  
                                          l11610 1096                                            l11602 1038  
                                          l11380 4AC4                                            l11372 4A7E  
                                          l11292 2302                                            l11284 22B4  
                                          l11276 226C                                            l11268 21E2  
                                          l11196 1FEA                                            l11452 3A54  
                                          l11444 396E                                            l11532 5662  
                                          l10388 54C8                                            l11524 3342  
                                          l11516 32F6                                            l11508 32BA  
                                          l10396 4AF4                                            l10476 36EC  
                                          l10484 3730                                            l10492 53AC  
                                          l10820 349A                                            l10812 345E  
                                          l10804 3422                                            l10900 455E  
                                          l10660 4D5A                                            l10652 4D22  
                                          l10572 1984                                            l10564 181E  
                                          l10556 16B6                                            l10580 1A92  
                                          l10644 3C42                                            l10628 3BC0  
                                          l10636 3C06                                            l10740 4FFC  
                                          l11348 41F0                                            l11540 5190  
                                          l11364 4792                                            l11356 4742  
                                          l11460 50B0                                            l11436 5040  
                                          l10716 2D14                                            l10708 2CD2  
                                          l10724 2D60                                            l11428 536C  
                                          l11700 13D0                                            l11620 111C  
                                          l11612 109A                                            l11604 1058  
                                          l11382 4AE2                                            l11374 4A90  
                                          l11470 48E4                                            l11286 22C2  
                                          l11278 228A                                            l11198 1FF6  
                                          l11454 3A6A                                            l11446 3976  
                                          l11526 334E                                            l11518 3312  
                                          l10398 4AF4                                            l10494 53AC  
                                          l10830 34CA                                            l10822 34A0  
                                          l10814 3464                                            l10806 3432  
                                          l10902 4562                                            l10670 445E  
                                          l10662 4424                                            l10654 4D32  
                                          l10910 2F58                                            l10574 19E4  
                                          l10566 1880                                            l10558 1718  
                                          l10582 1AEA                                            l10646 3C5C  
                                          l10638 3C20                                            l10590 3E56  
                                          l10742 5008                                            l10734 4FE2  
                                          l11542 51B0                                            l11366 47C4  
                                          l11358 474A                                            l11462 50C0  
                                          l11390 5084                                            l11438 5068  
                                          l10718 2D2A                                            l11710 142E  
                                          l11702 13EA                                            l11630 1170  
                                          l11622 1124                                            l11614 10B2  
                                          l11606 1078                                            l11384 4AF2  
                                          l11376 4AA0                                            l11472 48F8  
                                          l11296 232C                                            l11288 22C6  
                                          l11456 3A82                                            l11448 3976  
                                          l11528 336E                                            l10760 4062  
                                          l10752 3FEE                                            l10496 53BE  
                                          l10824 34BA                                            l10816 347E  
                                          l10808 343E                                            l10832 34D0  
                                          l10680 44A6                                            l10672 446C  
                                          l10664 4434                                            l10656 4D40  
                                          l10912 2F60                                            l10840 3CA0  
                                          l10576 1A36                                            l10568 18D2  
                                          l10648 3C66                                            l10592 3E70  
                                          l10744 500A                                            l10736 4FE2  
                                          l11536 5178                                            l11464 50C8  
                                          l11392 50AC                                            l10728 2D6C  
                                          l11720 1466                                            l11712 143A  
                                          l11704 13FC                                            l11632 1180  
                                          l11640 11AE                                            l11624 1140  
                                          l11616 110A                                            l11608 1090  
                                          l11378 4AA4                                            l11474 4918  
                                          l11298 2338                                            l10770 407C  
                                          l10762 4074                                            l10754 3FEE  
                                          l10498 53C6                                            l10826 34BC  
                                          l10818 3480                                            l10682 44B0  
                                          l10674 4476                                            l10666 444A  
                                          l10658 4D50                                            l10922 2FA4  
                                          l10930 307E                                            l10914 2F64  
                                          l10906 2F46                                            l10850 3CD8  
                                          l10842 3CC0                                            l10594 3E72  
                                          l10746 5024                                            l10738 4FF6  
                                          l11538 5188                                            l11466 50F0  
                                          l11386 506C                                            l10690 2BFE  
                                          l11482 55DA                                            l11730 1496  
                                          l11714 1440                                            l11706 1418  
                                          l11642 11BE                                            l11650 11EC  
                                          l11634 1190                                            l11626 1144  
                                          l11618 1116                                            l11476 4920  
                                          l11396 3854                                            l11492 3216  
                                          l10772 408C                                            l10764 4076  
                                          l10780 40AA                                            l10756 4000  
                                          l10828 34C8                                            l10676 4494  
                                          l10668 4452                                            l10940 30A4  
                                          l10932 308E                                            l10924 2FC2  
                                          l10908 2F46                                            l10860 3D1E  
                                          l10852 3CDA                                            l10836 3C84  
                                          l10596 3E8C                                            l10748 5026  
                                          l11388 507C                                            l10692 2C02  
                                          l10684 2BC4                                            l11484 55EA  
                                          l11740 14FC                                            l11732 149A  
                                          l11724 146E                                            l11708 141C  
                                          l11652 11FC                                            l11660 122A  
                                          l11644 11CE                                            l11636 119C  
                                          l11628 1156                                            l11478 496C  
                                          l11398 3854                                            l11494 3222  
                                          l10774 4098                                            l10766 4078  
                                          l10758 400A                                            l12550 4358  
                                          l10790 339C                                            l10678 44A4  
                                          l10942 30A6                                            l10934 3090  
                                          l10926 2FE0                                            l10918 2F84  
                                          l10870 3D54                                            l10862 3D24  
                                          l10854 3CEA                                            l10838 3C98  
                                          l10950 51C4                                            l10598 3E8E  
                                          l10694 2C0C                                            l10686 2BE8  
                                          l11486 55EE                                            l11750 1538  
                                          l11734 14BA                                            l11718 1454  
                                          l11670 1264                                            l11662 123A  
                                          l11654 120C                                            l11646 11DA  
                                          l11726 1474                                            l11638 11A2  
                                          l11496 3242                                            l10776 40A4  
                                          l10768 407A                                            l12560 4B44  
                                          l12552 3836                                            l10960 4C48  
                                          l10792 33B6                                            l10784 337C  
                                          l10880 44C8                                            l10936 3092  
                                          l10928 2FE8                                            l10944 30AA  
                                          l10872 3D60                                            l10864 3D30  
                                          l10856 3CF8                                            l10848 3CC4  
                                          l10952 51CC                                            l10696 2C2A  
                                          l10688 2BF0                                            l11488 55EE  
                                          l11760 15C0                                            l11752 154A  
                                          l11744 1510                                            l11736 14DA  
                                          l11728 1486                                            l11680 12D6  
                                          l11672 126C                                            l11664 1246  
                                          l11656 1218                                            l11648 11E0  
                                          l11498 3246                                            l10778 40A6  
                                          l12562 4BB6                                            l12554 35EE  
                                          l10970 4CA4                                            l10962 4C5A  
                                          l10794 33C6                                            l10786 337C  
                                          l10890 4546                                            l10882 44C8  
                                          l10938 30A2                                            l10874 3D6C  
                                          l10866 3D3C                                            l10858 3D04  
                                          l10954 51EC                                            l12546 4670  
                                          l10698 2C48                                            l11770 1606  
                                          l11762 15D2                                            l11754 1564  
                                          l11746 1530                                            l11738 14F6  
                                          l11690 134C                                            l11682 12E8  
                                          l11674 1284                                            l11666 124C  
                                          l11658 121E                                            l12564 3DE6  
                                          l12556 4A58                                            l10972 4CB2  
                                          l10964 4C62                                            l10796 33E0  
                                          l10788 3390                                            l10892 4548  
                                          l10884 44DA                                            l10980 30C0  
                                          l10868 3D48                                            l10876 3D7A  
                                          l10948 51B4                                            l12548 1AB4  
                                          l11772 1618                                            l11764 15EC  
                                          l11756 157C                                            l11692 136C  
                                          l11684 1308                                            l11676 12A4  
                                          l11668 1258                                            l12558 3712  
                                          l10966 4C8C                                            l10958 4C48  
                                          l10798 33FA                                            l10894 4558  
                                          l10886 44E4                                            l10982 30C8  
                                          l11766 15F2                                            l11758 158E  
                                          l11694 137E                                            l11686 131A  
                                          l11678 12B6                                            l10968 4C98  
                                          l10896 455A                                            l10888 4544  
                                          l10992 310C                                            l10984 30CC  
                                          l10976 30AE                                            l11776 1620  
                                          l11696 139E                                            l11688 133A  
                                          l10898 455C                                            l10994 312A  
                                          l10978 30AE                                            l11778 1632  
                                          l11698 13B0                                            l10996 3148  
                                          l10988 30EC                                            l10998 3150  
                          ccp1_pwm_set_duty@duty 0199                                    ___fltol@sign1 0065  
                                __end_of___fladd 1FEA                                            ?_main 0001  
                                          _ADC_2 014D                                  __end_of___fldiv 2BC4  
                                __end_of___awdiv 3FEE                                            _EEADR 0FA9  
                                          STR_10 1011                                            STR_11 102E  
                                          STR_12 1020                                            STR_13 1011  
                                          STR_14 102E                                            STR_15 102E  
                                          STR_16 102E                                  __end_of___awmod 42CE  
                                __end_of___flmul 2414                                  __end_of___fltol 3B8A  
                    interrupt_intx_edge_inti@ret 0011                                            u10000 424A  
                                          u10001 4246                                            u10010 4264  
                                __end_of___lldiv 44C8                                            u10011 4260  
                                          u10100 3B58                                            u10020 4282  
                                          u10101 3B54                                            u10021 427E  
                                          u10110 3B68                                            u10030 4298  
                                          u10111 3B64                                            u10031 4294  
                                          u10200 2F24                                            u10120 2DA4  
                                          u11000 2FA0                                            u10040 42BC  
                                          u10201 2F20                                            u10121 2DA0  
                                          u11001 2F9C                                            u10041 42B8  
                                          u10050 3A9A                                            u10210 2F32  
                                          u10130 2DB2                                            u11010 2FC2  
                                          u10051 3A96                                            u10211 2F2E  
                                          u10131 2DAE                                            u11011 2FBE  
                                          u10060 3ACE                                            u10140 2E0E  
                                          u11100 52E6                                            u10300 4DC4  
                                          u11020 2FE0                                            u10220 438A  
                                          u10141 2E0A                                            u11101 52E2  
                                          u10301 4DC0                                            u11021 2FDC  
                                          u10221 4386                                            u10070 3AFC  
                                          u10150 2E64                                            u11110 52FA  
                                          u10310 4DD4                                            u11030 51C4  
                                          u10230 439A                                            u10071 3AF8  
                                          u10151 2E60                                            u11111 52F6  
                                          u10311 4DD0                                            u11031 51C0  
                                          u10231 4396                                            u10080 3B10  
                                          u10160 2EAE                                            u11120 530A  
                                          u10320 4868                                            u11200 46AC  
                                          u10400 512E                                            u11040 4C5A  
                                          u10240 43C0                                            u10081 3B0C  
                                          u10065 3AC4                                            u10161 2EAA  
                                          u11121 5306                                            u10321 4864  
                                          u11201 46A8                                            u10401 512A  
                                          u11041 4C56                                            u10241 43BC  
                                          u10090 3B38                                            u10170 2ECC  
                                          u11130 52AE                                            u10330 487A  
                                          u11210 46BC                                            u10410 4FB2  
                                          u11050 30C0                                            u10250 43F2  
                                          u10091 3B34                                            u10171 2EC8  
                                          u11131 52AA                                            u10331 4876  
                                          u11211 46B8                                            u10411 4FAE  
                                          u11051 30BC                                            u10251 43EE  
                                          u11300 40F2                                            u11220 523C  
                                          u10180 2EDC                                            u11140 52C2  
                                          u10340 488E                                            u10420 4FD4  
                                          u10500 3686                                            u11060 30E8  
                                          u10260 5386                                            u11301 40EE  
                                          u11221 5238                                            u10181 2ED8  
                                          u11141 52BE                                            u10341 488A  
                                          u10421 4FD0                                            u10501 3682  
                                          u11061 30E4                                            u10261 5382  
                                          u11310 4132                                            u11230 552E  
                                          u10190 2EEA                                            u11150 52D2  
                                          u10350 48AA                                            u10430 54DA  
                                          u10510 36A8                                            u11070 3108  
                                          u10270 4E5A                                            u11311 412E  
                                          u11231 552A                                            u10191 2EE6  
                                          u11151 52CE                                            u10351 48A6  
                                          u10431 54D6                                            u10511 36A4  
                                          u11071 3104                                            u10271 4E56  
                    ??_MSSP_I2C_Master_Send_Stop 000F                                            u11240 4F14  
                                          u11400 20CE                                            u10360 48BC  
                                          u10440 54EE                                            u10280 4D9E  
                                          u10520 36CA                                            u11080 312A  
                                          u10600 3EE2                                            u11160 4DFC  
                                          u11241 4F10                                            u11401 20CA  
                                          u10361 48B8                                            u10441 54EA  
                                          u10281 4D9A                                            u10521 36C6  
                                          u11081 3126                                            u10601 3EDE  
                                          u11161 4DF8                                            u11250 4F24  
                                          u11410 2248                                            u11330 2004  
                                          u10370 48D0                                            u10290 4DAE  
                                          u10450 4B06                                            u10530 36EC  
                                          u11090 3148                                            u10610 3F02  
                                          u11251 4F20                                            u11331 2000  
                                          u10371 48CC                                            u10291 4DAA  
                                          u10451 4B02                                            u10531 36E8  
                                          u11091 3144                                            u10611 3EFE  
                                          u11260 4F42                                            u11500 23BC  
                                          u11420 22A2                                            u11340 2016  
                                          u10380 48E2                                            u10460 4B78  
                                          u10540 53BE                                            u10700 4D7A  
                                          u10620 3F26                                  ___awdiv@divisor 000F  
                                          u11261 4F3C                                            u11325 414A  
                                          u11501 23B8                                            u11421 229E  
                                          u11341 2012                                            u10381 48DE  
                                          u10461 4B74                                            u10541 53BA  
                                          u10701 4D76                                            u10621 3F22  
                                          u11270 4F44                                            u11510 23F6  
                                          u11430 22C2                                            u11350 2026  
                                          u10390 510E                                            u10470 361A  
                                          u10550 42E4                                            u10710 444A  
                                          u10630 3BA4                                            u11511 23F2  
                                          u11431 22BE                                            u11415 223E  
                                          u11351 2022                                            u10391 510A  
                                          u10471 3616                                            u10551 42E0  
                                          u10711 4446                                            u10631 3BA0  
                                          u11280 40C0                                            u11440 22D4  
                                          u11360 2066                                            u10480 363E  
                                          u10560 4A0E                                            u10720 446C  
                                          u10640 3BC0                                            u11600 507C  
                                          u10800 2CF4                                            u11520 516E  
                                          u11281 40BC                                            u11441 22D0  
                                          u11361 2062                                            u10481 363A  
                                          u10561 4A0A                                            u10721 4468  
                                          u10641 3BBC                                            u11601 5078  
                                          u10801 2CF0                                            u11521 516A  
                          ??_Interrupt_Intx_Inti 001F                                            u11290 40D0  
                                          u11450 2302                                            u11370 2078  
                                          u10490 3660                                            u10730 4494  
                                          u10650 3C20                                            u10570 3E70  
                                          u11530 4742                                            u11610 5038  
                                          u10810 2D04                                            u11291 40CC  
                                          u11451 22FE                                            u11371 2074  
                                          u10491 365C                                            u10731 4490  
                                          u10651 3C1C                                            u10571 3E6C  
                                          u11531 473E                                            u11611 5034  
                                          u10811 2D00                                            u11460 2318  
                                          u11380 2088                                            u10900 341A  
                                          u10660 3C3C                                            u10580 3E8C  
                                          u11540 4786                                            u11620 50C0  
                                          u10820 2D14                                            u10740 2BE8  
                                          u11461 2314                                            u11381 2084  
                                          u10901 3416                                            u10661 3C38  
                                          u10581 3E88                                            u11621 50BC  
                                          u10821 2D10                                            u10741 2BE4  
                                          u11630 48F8                                            u11470 232C  
                                          u11390 20BE                                            u10910 345E  
                                          u10670 3C5C                                            u10590 3EC6  
                                          u11550 47B4                                            u10830 2D5C  
                                          u10750 2C2A                                            u11631 48F4  
                                          u11471 2328                                            u11391 20BA  
                                          u10911 345A                                            u10671 3C58  
                                          u10591 3EC2                                            u10831 2D58  
                                          u10751 2C26                                            u12407 13A6  
                                          u11640 4918                                            u11480 2346  
                                          u10920 347E                                            u10680 3C80  
                                          u10840 4FF6                                            u11560 47C4  
                                          u10760 2C48                                            u11800 123A  
                                          u11641 4914                                            u11481 2342  
                                          u10921 347A                                            u10681 3C7C  
                                          u10841 4FF2                                            u11561 47C0  
                                          u10761 2C44                                            u12417 13F2  
                                          u11801 1236                                            u11570 4A90  
                                          u11490 238E                                            u10850 4000  
                                          u10930 349A                                            u10690 4D40  
                                          u10770 2C7E                                            u11810 1450  
                                          u11571 4A8C                                            u11491 238A  
                                          u10851 3FFC                                            u10931 3496  
                                          u10691 4D3C                                            u12427 3CF0  
                                          u11547 477C                                            u10771 2C78  
                                          u11811 144C                                            u11580 4AA0  
                                          u10940 34BA                                            u10860 3390  
                                          u10780 2C80                                            u11660 55E8  
                                          u11820 1486                                            u11740 1180  
                                          u11581 4A9C                                            u10941 34B6  
                                          u10861 338C                                            u12437 3D0A  
                                          u11557 47AA                                            u11661 55E4  
                                          u11821 1482                                            u12357 12AC  
                                          u11741 117C                                            u11590 4AE2  
                                          u11654 493E                                            u10870 33B6  
                                          u10950 3C98                                            u11670 5188  
                                          u10790 2CE4                                            u11830 1496  
                                          u11750 1190                                            u11591 4ADE  
                                          u11655 493A                                            u10871 33B2  
                                          u12447 3D20                                            u10951 3C94  
                                          u11671 5184                                            u10791 2CE0  
                                          u11831 1492                                            u12367 12DE  
                                          u11751 118C                                            u10880 33E0  
                                          u10960 3CEA                                            u11840 150C  
                                          u11760 11BE                                            u10881 33DC  
                                          u12457 5208                                            u10961 3CE6  
                                          u11841 1508                                            u12377 1310  
                                          u11761 11BA                                            u10890 33FA  
                                          u10970 44DA                                            u11850 1602  
                                          u11770 11CE                                            u12467 4726  
                                          u10891 33F6                                            u10971 44D6  
                                          u11851 15FE                                            u12387 1342  
                                          u11771 11CA                                            u10980 2F58  
                                          u11860 1632                                            u11780 11FC  
                                          u10981 2F54                                            u11861 162E  
                                          u12397 1374                                            u11781 11F8  
                                          u10990 2F80                                            u11790 120C  
                                          u10991 2F7C                                            u11791 1208  
                                          i2l150 567C                                            i2l158 54C6  
                                          i2l706 56CC                                            i2l658 56D0  
                                          i2l758 56C8                                            _INT_0 0147  
                                          i2l871 49FA                                  ___awdiv@counter 0011  
                                          i2l888 5342                                            _RCREG 0FAE  
                            relay_turn_off@F3070 0067                              morot_stop@motor_pin 0016  
                                   vfpfcnvrt@fmt 0018                                            _TMR0H 0FD7  
                                          _TMR1H 0FCF                                            _TMR0L 0FD6  
                                          _TMR1L 0FCE                                            _TMR3H 0FB3  
                                          _TMR3L 0FB2                                            _SPBRG 0FAF  
                                          _PORTA 0F80                                            _PORTB 0F81  
                                          _PORTC 0F82                                            _PORTD 0F83  
                                          _PORTE 0F84                                            _TRISA 0F92  
                                          _TRISB 0F93                                            _TRISC 0F94  
                                          _TRISD 0F95                                            _TRISE 0F96  
                               _usart_ASYNC_init 4FE2                                            _TXREG 0FAD  
                      ?_INT2_setinterrupthandler 000D                             _ADC_INTERRUPTHANDLER 00BA  
                      lcd_4bit_set_cursor@coulmn 001F                              ___lmul@multiplicand 0011  
               __end_of_interrupt_intx_edge_inti 3734                                            _ccp1_ 0133  
                                          _ccp2_ 013D                                            _flag1 0072  
                                          _flag2 0071                                            _chick 00C2  
                                          _flag3 0070                                            _flag4 006F  
                                          _led_1 00EF                                            _led_2 00EE  
                                          _flags 00BE                                            _fputc 437A  
                                          _width 0080                                            _putch 56D2  
                                          main@i 01A0                                            pclath 0FFA  
                                          pclatu 0FFB                                            tablat 0FF5  
                                          ttemp5 0074                                            ttemp6 0077  
                                          ttemp7 007B                                            status 0FD8  
                                          wtemp8 0074                                  __end_of_sprintf 5378  
           MSSP_I2C_Master_Read_Blocking@i2c_obj 000D                       __end_of_interrupt_usart_rx 567E  
                                __initialization 47C8                    __end_of_GPIO_PORT_WRITE_LOGIC 5344  
                                   RB4_ISR@value 0001                        _RB6_interrupthandler_high 00A0  
         MSSP_I2C_Master_Write_Blocking@i2c_data 000F                                     __end_of_main 1648  
                        ??_GPIO_pIN_TOGGLE_LOGIC 000E                                    _lat_regisrers 00D2  
                       _INT1_setinterrupthandler 5560                                     RB5_ISR@value 0001  
                                         ??_main 019F                       GPIO_PORT_WRITE_LOGIC@logic 0001  
                                  __activetblptr 0003                          ??_configure_voltage_ref 000F  
                               led_turn_on@F3065 006C                                        ??_RB4_ISR 0001  
                                      ??_RB5_ISR 0001                                        ??_RB6_ISR 0001  
                                      ??_RB7_ISR 0001                           Interrupt_Intx_Inti@ret 001F  
                                   RB6_ISR@value 0001                            usart_ASYNC_init@usart 019D  
                         ccp1_pwm_set_duty@duty_ 019A                                           ?_fputc 000D  
                                         _ADRESH 0FC4                                           _EEADRH 0FAA  
                                         _ADRESL 0FC3                                           _EEDATA 0FA8  
                                         _CCPR1L 0FBE                                           _CCPR2L 0FBB  
                                         _EECON2 0FA7                                 ___awdiv@dividend 000D  
                                         ?_putch 0001                     ??_MSSP_I2C_Master_Send_Start 000F  
                                         i2l1052 56C0                                           i2l1230 546A  
                                         i2l1240 540A                                           i2l1056 56C4  
                                         i2l1235 543A                                           i2l1251 5658  
                                         i2l1262 563E                                           i2l1350 244E  
                                         i2l1360 255A                                           i2l1352 246E  
                                         i2l1273 5624                                           i2l1370 26AE  
                                         i2l1362 259E                                           i2l1354 248E  
                                         i2l1284 560A                                           i2l1380 274E  
                                         i2l1372 26CE                                           i2l1364 25E2  
                                         i2l1356 24D2                                           i2l1462 56A6  
                                         i2l1390 27EE                                           i2l1382 276E  
                                         i2l1374 26EE                                           i2l1366 2626  
                                         i2l1358 2516                                           i2l1535 5698  
                                         i2l1384 278E                                           i2l1376 270E  
                                         i2l1368 266A                                           i2l1393 280E  
                                         i2l1386 27AE                                           i2l1378 272E  
                                         i2l1388 27CE                                           i2l1575 56AE  
                                         i2l1639 568A                                           i2l1690 55BC  
                                         i2l1763 5498                                           i2l1693 55D6  
                                         i2l1758 56BC                                           i2l7240 49A4  
                                         i2l8200 5610                                           i2l7242 49AC  
                                         i2l8132 56CA                                           i2l7244 49F8  
                                         i2l7236 4970                                           i2l8220 560A  
                                         i2l8212 55F4                                           i2l9100 246A  
                                         i2l8126 56CE                                           i2l7238 4984  
                                         i2l8206 5624                                           i2l8214 55F6  
                                         i2l8230 56A2                                           i2l9110 24B8  
                                         i2l9102 247C                                           i2l8152 543C  
                                         i2l8160 540E                                           i2l8144 56BE  
                                         i2l9200 272A                                           i2l9120 24FC  
                                         i2l9112 24C8                                           i2l9104 248A  
                                         i2l8138 56C6                                           i2l8154 543E  
                                         i2l8162 5422                                           i2l8170 5642  
                                         i2l8226 569A                                           i2l8234 568C  
                                         i2l8242 56A8                                           i2l8250 5686  
                                         i2l9210 277C                                           i2l9202 273C  
                                         i2l9130 2540                                           i2l9122 250C  
                                         i2l9114 24CC                                           i2l9106 249C  
                                         i2l7540 54AC                                           i2l8156 5452  
                                         i2l8164 53DC                                           i2l8148 56C2  
                                         i2l8172 5644                                           i2l8228 569C  
                                         i2l8236 568E                                           i2l7532 566C  
                                         i2l8260 546C                                           i2l9220 27CA  
                                         i2l9212 278A                                           i2l9204 274A  
                                         i2l9140 2584                                           i2l9132 2550  
                                         i2l9124 2510                                           i2l9116 24E0  
                                         i2l9108 24AA                                           i2l7542 54BA  
                                         i2l8158 540C                                           i2l8166 53DE  
                                         i2l8238 5694                                           i2l8246 567E  
                                         i2l7534 5670                                           i2l8262 5480  
                                         i2l8254 56BA                                           i2l9222 27DC  
                                         i2l9214 279C                                           i2l9206 275C  
                                         i2l9150 25C8                                           i2l9142 2594  
                                         i2l9134 2554                                           i2l9126 2524  
                                         i2l9118 24EE                                           i2l8168 53F2  
                                         i2l8192 563E                                           i2l8184 5628  
                                         i2l8248 5680                                           i2l9224 27EA  
                                         i2l9216 27AA                                           i2l9208 276A  
                                         i2l9160 260C                                           i2l9152 25D8  
                                         i2l9144 2598                                           i2l9136 2568  
                                         i2l9128 2532                                           i2l7538 549A  
                                         i2l8178 5658                                           i2l8186 562A  
                                         i2l6770 55D4                                           i2l9226 27FC  
                                         i2l9218 27BC                                           i2l9170 2650  
                                         i2l9162 261C                                           i2l9154 25DC  
                                         i2l9146 25AC                                           i2l9138 2576  
                                         i2l6780 5322                                           i2l6764 55BC  
                                         i2l9228 280A                                           i2l9180 2694  
                                         i2l9172 2660                                           i2l9164 2620  
                                         i2l9156 25F0                                           i2l9148 25BA  
                                         i2l9092 242E                                           i2l6774 530E  
                                         i2l8198 560E                                           i2l6766 55CA  
                                         i2l9190 26DC                                           i2l9182 26A4  
                                         i2l9174 2664                                           i2l9166 2634  
                                         i2l9158 25FE                                           i2l9094 243C  
                                         i2l6776 530E                                           i2l6768 55D4  
                                         i2l9192 26EA                                           i2l9184 26A8  
                                         i2l9176 2678                                           i2l9168 2642  
                                         i2l9096 244A                                           i2l6778 531E  
                                         i2l9194 26FC                                           i2l9186 26BC  
                                         i2l9178 2686                                           i2l9098 245C  
                                         i2l9196 270A                                           i2l9188 26CA  
                                         i2l9198 271C                                    vfpfcnvrt@done 001B  
                                         _SPBRGH 0FB0                                     RB7_ISR@value 0001  
                       ??_interrupt_intx_disable 000F                        _MSSP_I2C_Master_Send_Stop 529C  
                                         _SSPADD 0FC8                                           _SSPBUF 0FC9  
               MSSP_I2C_Master_Read_Blocking@ack 000F                                 __end_of___xxtofl 2F46  
                                _tc74_read_value 5264                       __end_of_usart_async_rx_int 3C84  
                     __end_of_usart_async_tx_int 3F2A                 __end_of_lcd_4bit_send_string_pos 47C8  
                          __end_of_MSSP_I2C_Init 34D4     __end_of_I2C_Master_Mode_Clock_Configurations 4602  
         ??_I2C_Master_Mode_Clock_Configurations 00FD            ?_I2C_Master_Mode_Clock_Configurations 00FB  
           _I2C_Master_Mode_Clock_Configurations 4566                                    ??_Timer2_init 000F  
                                         _Timer2 0191                           ?_lcd_4bit_send_command 001A  
                                   vfprintf@cfmt 0025              interrupt_intx_enable@INTERRUPT_INTX 000D  
                ADC_ISconversion_result@ADC_conf 000D                                           ___lmul 4D22  
                                      ??___fladd 003C                                        ??___fldiv 0023  
                                      ??___awdiv 0011                                        ??___awmod 0011  
                                      ??___flmul 004C                                        ??___fltol 0061  
                 GPIO_pIN_WRITE_LOGIC@config_pin 000D                                        ??___lldiv 0021  
                          _interrupt_intx_enable 49FC                                           clear_0 482E  
                                         clear_1 483A                                           clear_2 4846  
                               ___awdiv@quotient 0013                                     ccp1_init@ret 002C  
                                ___awmod@divisor 000F                                           isa$std 0001  
                                 _Timer0_preload 0096                                  ___awmod@counter 0011  
                        _TIMER0_Interrupthandler 0098                                   _Timer1_preload 0092  
                                   ccp2_init@ret 002C      _I2C_Report_Receive_Overflow_InterruptHandle 00B0  
                                         fputc@c 000D                          interrupt_intx_clear@ret 0011  
                                 _Timer2_preload 00C0                                        ?_CCP1_ISR 0001  
                                   __pdataCOMRAM 006F                                        ?_CCP2_ISR 0001  
                                _morot_turn_left 506C                            convert_hex_to_dec@num 000E  
                                 _Timer3_preload 008C                                     __mediumconst 0000  
                               ??_int0_interrupt 0007                                           tblptrh 0FF7  
                                         tblptrl 0FF6                                           tblptru 0FF8  
                                      ?_ADC_inti 0010                     interrupt_intx_sethandler@ret 0013  
                                         putch@c 0001                                 __end_of_vfprintf 5178  
                          _ADC_handeler_funvtion 56CE                                        ??_sprintf 002C  
                                   _dataSendUART 00BC              ds1307_read_values@return_data_array 001D  
                   ?_ADC_get_conversion_blocking 0015                     __end_of_select_result_format 5138  
                                   ___xxtofl@arg 0017                                     ___xxtofl@exp 0016  
                                   ___xxtofl@val 000D                                       __accesstop 0080  
                        __end_of__initialization 484C                                        ?_INT0_ISR 0001  
                                      ?_INT1_ISR 0001                                        ?_INT2_ISR 0001  
                         _intitialized_functions 416C                           _ccp2_pwm_set_duty$5694 0195  
                                  ___rparam_used 0001                                       ___fltol@f1 005D  
               ??_MSSP_I2C_Master_Write_Blocking 0011                  ?_MSSP_I2C_Master_Write_Blocking 000D  
                               ??_lcd_send_4bits 0018                    __end_of_ADC_ISconversion_done 4F4E  
                        _lcd_4bit_send_char_data 4DEC                                   __pcstackCOMRAM 0001  
                         _MSSP_I2C_Mode_GPIO_CFG 56B0                                  _motor_intialize 51B4  
             MSSP_I2C_Master_Write_Blocking@_ack 0010                       _I2C_DefaultInterruptHandle 00B2  
                      ?_interrupt_intx_edge_inti 000D                                     __pidataBANK0 54F2  
                                   __pidataBANK1 4EA8                         _RB6_interrupthandler_low 009E  
          MSSP_I2C_Master_Write_Blocking@i2c_obj 000D                            fp__interrupt_usart_rx 0000  
                                  __end_of_fputc 4424                                    __end_of_putch 56D4  
                       lcd_4bit_send_command@lcd 001A                         lcd_4bit_send_command@ret 001C  
                            __end_of_Timer2_init 4566                               morot_turn_left@ret 0018  
                 _USART_OVERRUN_Interrupthandler 0084                                       ??_CCP1_ISR 0001  
                                     ??_CCP2_ISR 0001                                       ??_ADC_inti 0012  
   ADC_get_conversion_blocking@conversion_status 0018             __end_of_GPIO_pIN_DIRECTION_INTIALIZE 3608  
                   _GPIO_pIN_DIRECTION_INTIALIZE 34D4                     ?_lcd_4bit_send_char_data_pos 0023  
                        __end_of_tc74_read_value 529C                                          ??_fputc 0010  
                      _USART_TX_Interrupthandler 008A                                          ??_putch 000D  
                                     __pbssBANK0 0080                                       __pbssBANK1 0159  
                            tc74_read_value@_ack 001F                         GPIO_pIN_TOGGLE_LOGIC@ret 0012  
                                     ??_INT0_ISR 0007                                       ??_INT1_ISR 0007  
                                     ??_INT2_ISR 0007                         motor_intialize@motor_pin 001A  
                   __end_of_GPIO_pIN_WRITE_LOGIC 3850                             relay_intialize@F3060 0069  
                       __end_of_usart_ASYNC_init 5028                 __end_of_INT2_setinterrupthandler 5560  
                         ?_interrupt_intx_enable 000D                                          ?___lmul 000D  
                              led_turn_off@F3070 006B                                     ??_TIMER0_ISR 0001  
                                   ??_TIMER1_ISR 0001                                     ??_TIMER2_ISR 0001  
                                   ??_TIMER3_ISR 0001                          __end_of_morot_turn_left 50B0  
                GPIO_pIN_TOGGLE_LOGIC@config_pin 000D                i2GPIO_pIN_TOGGLE_LOGIC@config_pin 0001  
                                led_toggle@F3075 006A                                   ___lmul@product 0015  
                              __end_of_ccp1_init 3216                                __end_of_ccp2_init 30AE  
       ADC_ISconversion_result@conversion_result 000F                __end_of_interrupt_intx_sethandler 437A  
                             _ds1307_read_values 3216                                          _RB4_ISR 5640  
                                        _RB5_ISR 5626                                          _RB6_ISR 560C  
                                        _RB7_ISR 55F2                                        ?___xxtofl 000D  
                      ?_lcd_4bit_send_string_pos 0023                                    ?_MSSP_I2C_ISR 0001  
                         ?_ADC_handeler_funvtion 0001               __end_of_MSSP_I2C_Master_Send_Start 530C  
                     _MSSP_I2C_Master_Send_Start 52D4                         ?_interrupt_intx_pin_inti 001A  
                            ?_ds1307_read_values 001A                    ?_GPIO_pIN_DIRECTION_INTIALIZE 000D  
                                 _tris_regisrers 00DC                               __end_of_TIMER0_ISR 56A8  
                             __end_of_TIMER1_ISR 569A                               __end_of_TIMER2_ISR 56B0  
                             __end_of_TIMER3_ISR 568C                          _TIMER1_Interrupthandler 0094  
   MSSP_I2C_Master_read_data_in_register@i2c_obj 0012                          __end_of_motor_intialize 51F0  
                                      _ADC_VALUE 00CE                  ??_I2C_Slave_Mode_Configurations 000F  
                      ??_lcd_4bit_send_char_data 001C                                          _i2c_ack 00D0  
                              ??_MSSP_I2C_BC_ISR 0001                                          __Hparam 0000  
                     ??_INT1_setinterrupthandler 000F                                          __Lparam 0000  
                     __end_of_convert_hex_to_dec 566C                                      _Timer2_init 44C8  
                                        ___fladd 1B2A                             ??_ds1307_read_values 0020  
                                        ___fldiv 282A                                          ___awdiv 3F2A  
                                        ___awmod 421E       adc_channel_port_confige@ADC_CHANNAL_SELECT 000F  
                                        ___flmul 1FEA                      __end_of_Interrupt_Intx_Inti 4CB6  
                                        ___fltol 3A84                                          ___lldiv 4424  
                                      ?_vfprintf 0022                                     __psmallconst 1000  
                                        __pcinit 47C8                             _select_result_format 50F4  
                                        __ramtop 1000                            ccp2_pwm_set_duty@duty 0199  
                         _interrupt_intx_disable 4AF4                                          __ptext0 1034  
                                        __ptext1 55D8                                          __ptext2 5264  
                                        __ptext3 5344                                          __ptext4 5138  
                                        __ptext5 2BC4                                          __ptext6 437A  
                                        __ptext7 56D2                                          __ptext8 5378  
                                        __ptext9 421E                    __end_of_GPIO_pIN_TOGGLE_LOGIC 4970  
                                      _T0CONbits 0FD5               usart_ASYNC_read_byte_blocking@data 0001  
                             _interrupt_usart_rx 566C                                        _T1CONbits 0FCD  
                                 ??_MSSP_I2C_ISR 0001                                        _T2CONbits 0FCA  
                                     ??___xxtofl 0011                                        _T3CONbits 0FB1  
                      ?_INT0_setinterrupthandler 000D                          usart_async_rx_int@usart 000D  
                               ___awmod@dividend 000D                                          _relay_1 00ED  
                                        _relay_2 00EC                    __end_of_configure_voltage_ref 4FE2  
                        _ADC_ISconversion_result 40AE                     __end_of_interrupt_intx_clear 4BD8  
                                        _motor_1 00F6                                          _motor_2 00F8  
                     __end_of_ADC_select_channal 5264                              ?_interrupt_usart_rx 0001  
               MSSP_I2C_Master_Send_Stop@i2c_obj 000D                                          _usart_1 0112  
                                        _sprintf 5344                                 ?_tc74_read_value 001A  
          lcd_4bit_intialize@l_data_pins_counter 001F                         _adc_channel_port_confige 3D7E  
                                 __pintcode_body 2414           ADC_ISconversion_done@conversion_status 000F  
                           end_of_initialization 484C                                lcd_send_4bits@lcd 0016  
                              lcd_send_4bits@ret 0019                                          fputc@fp 000F  
                                        int_func 2414                       __end_of_lcd_4bit_intialize 3D7E  
                        ??_lcd_4bit_send_command 001C                                 _morot_turn_right 5028  
                       morot_turn_left@motor_pin 0016                                __end_of_value_ret 1011  
                                ___lldiv@divisor 001D                                  ___lldiv@counter 0025  
                      _RB4_interrupthandler_high 00A8                         ?i2_GPIO_pIN_TOGGLE_LOGIC 0001  
                              __end_of_vfpfcnvrt 2D92                                        _RCSTAbits 0FAB  
                       interrupt_intx_enable@ret 0011                             ??_interrupt_usart_rx 0002  
                                        postdec1 0FE5                        _RB7_interrupthandler_high 009C  
                                        postdec2 0FDD                          GPIO_pIN_WRITE_LOGIC@ret 0015  
                                        postinc0 0FEE                                          postinc1 0FE6  
                                        postinc2 0FDE                                 vfpfcnvrt@convarg 001D  
    __end_of_MSSP_I2C_Master_Send_Repeated_Start 54F2            ??_MSSP_I2C_Master_Send_Repeated_Start 000F  
           ?_MSSP_I2C_Master_Send_Repeated_Start 000D              _MSSP_I2C_Master_Send_Repeated_Start 54C8  
                                     _morot_stop 50B0                            _GPIO_PORT_WRITE_LOGIC 530C  
                                     ??_vfprintf 0025                        tc74_read_value@i2c_data_1 001C  
                      tc74_read_value@i2c_data_2 001D                                  _matrix_keypad_1 010A  
                      GPIO_pIN_WRITE_LOGIC@logic 000F    __end_of_MSSP_I2C_Master_read_data_in_register 4732  
        ??_MSSP_I2C_Master_read_data_in_register 0019           ?_MSSP_I2C_Master_read_data_in_register 0012  
          _MSSP_I2C_Master_read_data_in_register 469A                                 ?_morot_turn_left 0016  
                          ?_select_result_format 000D                               _usart_async_rx_int 3B8A  
                             _usart_async_tx_int 3E56                         _INT2_setinterrupthandler 5540  
                __end_of_lcd_4bit_send_char_data 4E4A                                        _PORTBbits 0F81  
                         tc74_read_value@i2c_obj 001A                                      ___fladd@grs 0043  
                     lcd_4bit_send_char_data@lcd 001A                             _GPIO_pIN_WRITE_LOGIC 3734  
                     lcd_4bit_send_char_data@ret 001C                          usart_async_tx_int@usart 000D  
                                  ___xxtofl@sign 0015                              ?_usart_async_rx_int 000D  
                                      _TRISCbits 0F94                              ?_usart_async_tx_int 000D  
                                    ___fldiv@grs 002E                                      ___fldiv@rem 0027  
                        ?_intitialized_functions 0001                                    ?_USART_RX_ISR 0001  
                                  ?_USART_TX_ISR 0001                  lcd_4bit_send_char_data_pos@data 0026  
                     __end_of_GPIO_pIN_INTIALIZE 4D22                                      ___flmul@grs 0052  
                               ADC_inti@ADC_conf 0010                                      _CCP1CONbits 0FBD  
                               ?_motor_intialize 001A                                      _CCP2CONbits 0FBA  
                                      _TXSTAbits 0FAC                          ?_MSSP_I2C_Mode_GPIO_CFG 0001  
                 ??_GPIO_pIN_DIRECTION_INTIALIZE 000F                     ccp2_pwm_set_duty@l_duty_temp 019B  
                           ??_usart_async_rx_int 000F                             ??_usart_async_tx_int 000F  
             interrupt_intx_clear@INTERRUPT_INTX 000D                              _lcd_4bit_set_cursor 4602  
                             relay_turn_on@F3065 0068            __end_of_I2C_Slave_Mode_Configurations 55BC  
                  _I2C_Slave_Mode_Configurations 55A0                                relay_toggle@F3075 00C1  
                    lcd_4bit_send_string_pos@lcd 0023                     __end_of_ADC_start_conversion 5540  
                    lcd_4bit_send_string_pos@ret 0028                      lcd_4bit_send_string_pos@row 0024  
                    lcd_4bit_send_string_pos@str 0026              usart_ASYNC_write_byte_blocking@data 000D  
                  convert_uint16_to_string@F3210 017F                        interrupt_intx_disable@ret 0011  
                                    _ADC_VALUE_2 00CA                                   __end_of___lmul 4D8C  
                                    vfpfcnvrt@ap 0019                                      vfpfcnvrt@cp 001C  
                                    vfpfcnvrt@fp 0017                                      _BAUDCONbits 0FB8  
                                  __pidataCOMRAM 56B6                          _TIMER2_Interrupthandler 0090  
                      ??_ADC_ISconversion_result 0010                          _baudrate_calculate$5695 0199  
                          ?_GPIO_pIN_WRITE_LOGIC 000D                              start_initialization 47C8  
                   ?_lcd_4bit_send_enable_signal 0016                             ?_lcd_4bit_set_cursor 001D  
                                    __end_of_abs 53AC                       __end_of_baudrate_calculate 1B2A  
                 __end_of_intitialized_functions 421E                        ds1307_read_values@i2c_obj 001A  
                                 ??_USART_RX_ISR 0003                       ADC_ISconversion_result@ret 0013  
                                 ??_USART_TX_ISR 0001                   __end_of_MSSP_I2C_Mode_GPIO_CFG 56B6  
         __end_of_usart_ASYNC_read_byte_blocking 55D8                   _usart_ASYNC_read_byte_blocking 55BC  
                __end_ofi2_GPIO_pIN_TOGGLE_LOGIC 49FC            interrupt_intx_pin_inti@INTERRUPT_INTX 001A  
                        ??_interrupt_intx_enable 000F           interrupt_intx_edge_inti@INTERRUPT_INTX 000D  
          __end_of_MSSP_I2C_Master_Read_Blocking 48E4                    _MSSP_I2C_Master_Read_Blocking 4856  
                           __end_of_MSSP_I2C_ISR 56C2                                ?_usart_ASYNC_init 019D  
                                    vfprintf@fmt 0023                                        _ds13_data 018B  
                         ?_GPIO_PORT_WRITE_LOGIC 0001                             _interrupt_intx_clear 4B66  
                                       ??___lmul 0015                            _ADC_ISconversion_done 4F02  
                       _RB5_interrupthandler_low 00A2                               ??_usart_ASYNC_init 0067  
      MSSP_I2C_Master_read_data_in_register@_ack 0018                           ??_select_result_format 000F  
                                    ?_morot_stop 0016                                      __pdataBANK0 00D2  
                                    __pdataBANK1 0100                              morot_turn_right@ret 0018  
                   lcd_4bit_send_command@command 001B           GPIO_pIN_DIRECTION_INTIALIZE@config_pin 000D  
                        ??_ADC_handeler_funvtion 0001                                        ___fladd@a 0038  
                                      ___fladd@b 0034                             MSSP_I2C_Init@i2c_obj 00FE  
                                      ___fldiv@a 001F                                        ___fldiv@b 001B  
                                       ?_RB4_ISR 0001                                         ?_RB5_ISR 0001  
                                       ?_RB6_ISR 0001                                         ?_RB7_ISR 0001  
                                      ___flmul@a 0048                                        ___flmul@b 0044  
                                    __pbssCOMRAM 0067                            ??_lcd_4bit_set_cursor 0020  
                                      _ccp1_init 30AE                                        _ccp2_init 2F46  
    _I2C_Report_Write_Collision_InterruptHandler 00B4                                    __pcstackBANK0 00FB  
                                  __pcstackBANK1 0195                                  _MSSP_I2C_BC_ISR 56C2  
                    ?_MSSP_I2C_Master_Send_Start 000D                        _USART_RX_Interrupthandler 0088  
                                    _data_return 00BF                                fp__int0_interrupt 0000  
                       _interrupt_intx_edge_inti 3608                                    _MSSP_I2C_Init 337C  
  ADC_get_conversion_blocking@ADC_CHANNAL_SELECT 0017                                     ?_Timer2_init 000D  
                          ?_interrupt_intx_clear 000D                 __end_of_INT0_setinterrupthandler 55A0  
                                      __pintcode 0008  MSSP_I2C_Master_read_data_in_register@i2c_data_1 0014  
MSSP_I2C_Master_read_data_in_register@i2c_data_2 0015                                         ?___fladd 0034  
                                       ?___fldiv 001B                                         ?___awdiv 000D  
                                      __ptext100 0000                                         ?___awmod 000D  
                                       ?___flmul 0044                                         ?___fltol 005D  
                        ?_interrupt_intx_disable 000D                                         ?___lldiv 0019  
                 ?_I2C_Slave_Mode_Configurations 000D                           ??_GPIO_pIN_WRITE_LOGIC 0010  
                     ??_adc_channel_port_confige 000D                                      __smallconst 1000  
                       __end_of_morot_turn_right 506C                                         _CCP1_ISR 56CA  
                             _convert_hex_to_dec 565A                                         _CCP2_ISR 56C6  
                              _interrupt_manager 0008                                       ?_ccp1_init 0026  
                     ?_interrupt_intx_sethandler 000F                                       ?_ccp2_init 0026  
                          _Int0_interrupthandler 00AE                     select_result_format@ADC_conf 000D  
                                       _ADC_inti 3FEE                               ?_interrupt_manager 0001  
            __end_of_ADC_get_conversion_blocking 4AF4                      _ADC_get_conversion_blocking 4A7A  
                                       ?_sprintf 0026                              ?_convert_hex_to_dec 0001  
                           _ADC_start_conversion 551C                                _ccp1_pwm_set_duty 396A  
                            ??_interrupt_manager 0007                          _TIMER3_Interrupthandler 008E  
                                       _INT0_ISR 543C                                         _INT1_ISR 540C  
                                       _INT2_ISR 53DC                          baudrate_calculate@usart 00FB  
                                       _IPR2bits 0FA2                               ?_ccp1_pwm_set_duty 0001  
                                       _PIE1bits 0F9D                                         _PIE2bits 0FA0  
                  ??_ADC_get_conversion_blocking 0019                                   ?_MSSP_I2C_Init 00FE  
       MSSP_I2C_Interrupt_Configurations@i2c_obj 000D                               _ADC_select_channal 522A  
                  __end_of_lcd_4bit_send_command 4EA8                       ??_INT2_setinterrupthandler 000F  
                                       _PIR1bits 0F9E                                         _PIR2bits 0FA1  
                                       i2u643_40 4984                                         i2u643_41 4980  
                                       i2u644_40 49A4                                         i2u644_41 49A0  
                                       i2u740_48 5428                                         i2u741_40 53F2  
                                       i2u740_49 543A                                         i2u741_41 53EE  
                         ?_ADC_ISconversion_done 000D                                         i2u645_44 49CA  
                                       i2u645_45 49C6                                         i2u830_40 244A  
                                       i2u830_41 2446                                         i2u742_48 53F8  
                                       i2u743_40 5654                                         i2u831_40 245C  
                                       i2u742_49 540A                                         i2u743_41 5650  
                                       i2u831_41 2458                                         i2u672_40 54AC  
                                       i2u744_40 563A                                         i2u840_40 24EE  
                                       i2u832_40 246A                                         i2u672_41 54A8  
                                       i2u744_41 5636                                         i2u840_41 24EA  
                                       i2u832_41 2466                                         i2u737_40 5452  
                                       i2u745_40 5620                                         i2u585_40 55CA  
                                       i2u841_40 24FC                                         i2u833_40 247C  
                                       i2u737_41 544E                                         i2u745_41 561C  
                                       i2u585_41 55C6                                         i2u841_41 24F8  
                                       i2u833_41 2478                                         i2u586_40 531E  
                                       i2u746_40 5606                                         i2u850_40 2594  
                                       i2u842_40 250C                                         i2u834_40 248A  
                                       i2u586_41 531A                                         i2u746_41 5602  
                                       i2u850_41 2590                                         i2u842_41 2508  
                                       i2u834_41 2486                                         i2u738_48 5458  
                                       i2u739_40 5422                                         i2u747_40 5480  
                                       i2u851_40 25AC                                         i2u843_40 2524  
                                       i2u835_40 249C                                         i2u738_49 546A  
                                       i2u739_41 541E                                         i2u747_41 547C  
                                       i2u851_41 25A8                                         i2u843_41 2520  
                                       i2u835_41 2498                   __end_of_interrupt_intx_disable 4B66  
                                       i2u860_40 2642                                         i2u852_40 25BA  
                                       i2u844_40 2532                                         i2u836_40 24AA  
                                       i2u860_41 263E                                         i2u852_41 25B6  
                                       i2u844_41 252E                                         i2u836_41 24A6  
                                       i2u748_48 5486                                         i2u861_40 2650  
                                       i2u853_40 25C8                                         i2u845_40 2540  
                                       i2u837_40 24B8                                         i2u829_40 243C  
                                       i2u748_49 5498                                         i2u861_41 264C  
                                       i2u853_41 25C4                                         i2u845_41 253C  
                                       i2u837_41 24B4                                         i2u829_41 2438  
                                       i2u870_40 26EA                                         i2u862_40 2660  
                                       i2u854_40 25D8                                         i2u846_40 2550  
                                       i2u838_40 24C8                                         i2u870_41 26E6  
                                       i2u862_41 265C                                         i2u854_41 25D4  
                                       i2u846_41 254C                                         i2u838_41 24C4  
                                       i2u871_40 26FC                                         i2u863_40 2678  
                                       i2u855_40 25F0                                         i2u847_40 2568  
                                       i2u839_40 24E0                                         i2u871_41 26F8  
                                       i2u863_41 2674                                         i2u855_41 25EC  
                                       i2u847_41 2564                                         i2u839_41 24DC  
                                       i2u880_40 278A                                         i2u872_40 270A  
                                       i2u864_40 2686                                         i2u856_40 25FE  
                                       i2u848_40 2576                                         i2u880_41 2786  
                                       i2u872_41 2706                                         i2u864_41 2682  
                                       i2u856_41 25FA                                         i2u848_41 2572  
                                       i2u881_40 279C                                         i2u873_40 271C  
                                       i2u865_40 2694                                         i2u857_40 260C  
                                       i2u849_40 2584                                         i2u881_41 2798  
                                       i2u873_41 2718                                         i2u865_41 2690  
                                       i2u857_41 2608                                         i2u849_41 2580  
                                       i2u882_40 27AA                                         i2u874_40 272A  
                                       i2u866_40 26A4                                         i2u858_40 261C  
                                       i2u882_41 27A6                                         i2u874_41 2726  
                                       i2u866_41 26A0                                         i2u858_41 2618  
                                       i2u883_40 27BC                                         i2u875_40 273C  
                                       i2u867_40 26BC                                         i2u859_40 2634  
                                       i2u883_41 27B8                                         i2u875_41 2738  
                                       i2u867_41 26B8                                         i2u859_41 2630  
                                       i2u884_40 27CA                                         i2u876_40 274A  
                                       i2u868_40 26CA                                         i2u884_41 27C6  
                                       i2u876_41 2746                                         i2u868_41 26C6  
                                       i2u885_40 27DC                                         i2u877_40 275C  
                                       i2u869_40 26DC                                         i2u885_41 27D8  
                                       i2u877_41 2758                                         i2u869_41 26D8  
                                       i2u886_40 27EA                                         i2u878_40 276A  
                                       i2u886_41 27E6                                         i2u878_41 2766  
                                       i2u887_40 27FC                                         i2u879_40 277C  
                                       i2u887_41 27F8                                         i2u879_41 2778  
                                       i2u888_40 280A                                         i2u888_41 2806  
                                      _value_ret 1001                             ??_convert_hex_to_dec 000D  
                            ??_ccp1_pwm_set_duty 00FB                   ?_MSSP_I2C_Master_Read_Blocking 000D  
               _USART_FRAMERROR_Interrupthandler 0086                             __end_of_USART_RX_ISR 549A  
           I2C_Slave_Mode_Configurations@i2c_obj 000D                              ?_ADC_select_channal 0010  
                           __end_of_USART_TX_ISR 56BE                               _lcd_4bit_intialize 3C84  
                                      _vfpfcnvrt 2BC4                           ds1307_read_values@_ack 001F  
                       _lcd_4bit_send_string_pos 4732                        __end_of_interrupt_manager 282A  
                                     _ADCON0bits 0FC2                                       _ADCON1bits 0FC1  
                                     _ADCON2bits 0FC0                                        main@i_642 01A2  
                                      main@i_646 01A1                  GPIO_pIN_DIRECTION_INTIALIZE@ret 0014  
                        __end_of_MSSP_I2C_BC_ISR 56C6                   lcd_4bit_send_char_data_pos@lcd 0023  
                 lcd_4bit_send_char_data_pos@ret 0027                   lcd_4bit_send_char_data_pos@row 0024  
                          _GPIO_pIN_TOGGLE_LOGIC 48E4                                Timer2_init@Timer2 000D  
                            ?_lcd_4bit_intialize 001D                        ?_INT1_setinterrupthandler 000D  
            __end_of_lcd_4bit_send_char_data_pos 51B4                      _lcd_4bit_send_char_data_pos 5178  
                                    ADC_inti@ret 0013                       interrupt_usart_rx@ret_data 0002  
                                     vfpfcnvrt@c 0021                            _configure_voltage_ref 4F98  
                          ?_ADC_start_conversion 000D                   ADC_get_conversion_blocking@ret 001A  
                              ___lmul@multiplier 000D                                      _INTCON2bits 0FF1  
                                    _INTCON3bits 0FF0                         ?_lcd_4bit_send_char_data 001A  
                                      copy_data0 47DC                                        copy_data1 47FC  
                                      copy_data2 481C                        __end_of_ccp1_pwm_set_duty 3A84  
                           ??_ADC_select_channal 0013                    ??_lcd_4bit_send_char_data_pos 0027  
                                     _EECON1bits 0FA6                                 MSSP_I2C_Init@ret 0195  
                           ??_lcd_4bit_intialize 001E                           ??_interrupt_intx_clear 000F  
                                       __Hrparam 0000                                       vfprintf@ap 0024  
                                       __Lrparam 0000                                       vfprintf@fp 0022  
                      _RB5_interrupthandler_high 00A4                               _GPIO_pIN_INTIALIZE 4CB6  
                          ADC_select_channal@ret 0014                           lcd_4bit_set_cursor@lcd 001D  
                         lcd_4bit_set_cursor@ret 0022                                       ?_vfpfcnvrt 0017  
                         lcd_4bit_set_cursor@row 001E                         _INT0_setinterrupthandler 5580  
                       ADC_ISconversion_done@ret 0010                       ?_MSSP_I2C_Master_Send_Stop 000D  
                      morot_turn_right@motor_pin 0016                MSSP_I2C_Master_Send_Start@i2c_obj 000D  
                            ?_GPIO_pIN_INTIALIZE 0016                               led_intialize@F3060 006D  
                                     sprintf@fmt 0027                                         ___xxtofl 2D92  
                                    ??_ccp1_init 0028                                      ??_ccp2_init 0028  
                                   _MSSP_I2C_ISR 56BE            MSSP_I2C_Master_Read_Blocking@i2c_data 0010  
 ADC_get_conversion_blocking@l_conversion_status 0019                                         _lcd_4bit 00F0  
              Interrupt_Intx_Inti@INTERRUPT_INTX 001D                           ccp2_pwm_set_duty@duty_ 019A  
                                       __ptext10 3F2A                                         __ptext11 5028  
                                       __ptext20 3E56                                         __ptext12 506C  
                                       __ptext21 3B8A                                         __ptext13 50B0  
                                       __ptext30 4D22                                         __ptext22 1648  
                                       __ptext14 4732                                         __ptext31 4424  
                                       __ptext23 51B4                                         __ptext15 5178  
                                       __ptext40 5540                                         __ptext32 44C8  
                                       __ptext24 3C84                                         __ptext16 4602  
                                       __ptext41 5560                                         __ptext33 337C  
                                       __ptext25 4E4A                                         __ptext17 4DEC  
                                       __ptext50 4B66                                         __ptext42 5580  
                                       __ptext34 56B0                                         __ptext26 4BD8  
                                       __ptext18 416C                                         __ptext51 3FEE  
                                       __ptext43 53AC                                         __ptext35 4F4E  
                                       __ptext27 51F0                                         __ptext19 4FE2  
                                       __ptext60 52D4                                         __ptext52 50F4  
                                       __ptext44 4CB6                                         __ptext36 55A0  
                                       __ptext28 2F46                                         __ptext61 565A  
                                       __ptext53 4F98                                         __ptext45 3734  
                                       __ptext37 4566                                         __ptext29 30AE  
                                       __ptext70 4A7A                                         __ptext62 3850  
                                       __ptext54 3216                                         __ptext46 34D4  
                                       __ptext38 4C48                                         __ptext71 551C  
                                       __ptext63 396A                                         __ptext55 469A  
                                       __ptext47 49FC                                         __ptext39 42CE  
                                       __ptext80 55BC                                         __ptext72 522A  
                                       __ptext64 2D92                                         __ptext56 4D8C  
                                       __ptext48 3608                                         __ptext81 567E  
                                       __ptext73 3D7E                                         __ptext65 3A84  
                                       __ptext57 54C8                                         __ptext49 4AF4  
                                       __ptext90 56C2                                         __ptext82 56A8  
                                       __ptext74 40AE                                         __ptext66 1FEA  
                                       __ptext58 4856                                         __ptext91 53DC  
                                       __ptext83 568C                                         __ptext75 4F02  
                                       __ptext67 282A                                         __ptext59 529C  
                                       __ptext92 540C                                         __ptext84 569A  
                                       __ptext68 1B2A                                         __ptext93 543C  
                                       __ptext85 55F2                                         __ptext77 56BA  
                                       __ptext69 48E4                                         __ptext94 549A  
                                       __ptext86 560C                                         __ptext78 546C  
                                       __ptext95 4970                                         __ptext87 5626  
                                       __ptext79 566C                                         __ptext96 530C  
                                       __ptext88 5640                                         __ptext97 56C6  
                                       __ptext89 56BE                                         __ptext98 56CA  
                                       __ptext99 56CE      I2C_Master_Mode_Clock_Configurations@i2c_obj 00FB  
        interrupt_intx_sethandler@INTERRUPT_INTX 000F                     ccp1_pwm_set_duty@l_duty_temp 019B  
                          _CCP1_Interrupthandler 00B8                                _ADC_VALUE_convert 00C3  
                              _ccp2_pwm_set_duty 3850    MSSP_I2C_Master_read_data_in_register@ret_data 0016  
                                       _button_1 00E9                                         _button_2 00E6  
                                ??_MSSP_I2C_Init 0067                                   _int0_interrupt 549A  
                                 ccp1_init@ccp1_ 0026                             ??_GPIO_pIN_INTIALIZE 0018  
                        ??_GPIO_PORT_WRITE_LOGIC 0002                               ?_ccp2_pwm_set_duty 0001  
                        _interrupt_intx_pin_inti 53AC                               _baudrate_calculate 1648  
                          _Int1_interrupthandler 00AC                    __end_of_interrupt_intx_enable 4A7A  
                                       _mssp_i2c 0124                                         isa$xinst 0000  
                   ADC_start_conversion@ADC_conf 000D                                       _LED_ROOM_1 00FA  
                                       int$flags 0073                                     ??_morot_stop 0017  
                                  morot_stop@ret 0018                              ??_ccp2_pwm_set_duty 00FB  
                                       _vfprintf 5138                              ?_baudrate_calculate 00FB  
               ??_usart_ASYNC_read_byte_blocking 0002                  ?_usart_ASYNC_read_byte_blocking 0001  
                                 _lcd_send_4bits 4BD8                 __end_of_adc_channel_port_confige 3E56  
                                 ccp2_init@ccp2_ 0026                           ?_GPIO_pIN_TOGGLE_LOGIC 000D  
                               ?_MSSP_I2C_BC_ISR 0001                __end_of_MSSP_I2C_Master_Send_Stop 52D4  
                  configure_voltage_ref@ADC_conf 000D                                       _INTCONbits 0FF2  
                  __end_of_ADC_handeler_funvtion 56D2                           ?_configure_voltage_ref 000D  
                         ??_ADC_start_conversion 000F                       ADC_select_channal@ADC_conf 0010  
                     ??_interrupt_intx_edge_inti 000F                             ??_baudrate_calculate 00FD  
                      __end_of_ccp2_pwm_set_duty 396A                                         intlevel2 0000  
                        convert_hex_to_dec@l_num 000D                                        sprintf@ap 002C  
                         __end_of_int0_interrupt 54C8                                _ds13_data_decimal 0185  
                                _dataReceiveUART 006E                          ADC_start_conversion@ret 000F  
                             __end_of_morot_stop 50F4                   lcd_4bit_send_enable_signal@lcd 0016  
                 lcd_4bit_send_enable_signal@ret 0018                                 ___lldiv@dividend 0019  
                         _ccp1_pwm_set_duty$5693 0195                     GPIO_pIN_INTIALIZE@config_pin 0016  
                       _RB4_interrupthandler_low 00A6                         _RB7_interrupthandler_low 009A  
                         __end_of_lcd_send_4bits 4C48                         ?_ADC_ISconversion_result 000D  
                             motor_intialize@ret 001C                                       _TIMER0_ISR 569A  
                                     _TIMER1_ISR 568C                                       _TIMER2_ISR 56A8  
                                     _TIMER3_ISR 567E                                ??_tc74_read_value 0020  
                                    ??_vfpfcnvrt 001A                      __end_of_lcd_4bit_set_cursor 469A  
      __end_of_MSSP_I2C_Interrupt_Configurations 4F98              ??_MSSP_I2C_Interrupt_Configurations 000F  
             ?_MSSP_I2C_Interrupt_Configurations 000D                _MSSP_I2C_Interrupt_Configurations 4F4E  
                        i2_GPIO_pIN_TOGGLE_LOGIC 4970                                         sprintf@f 002D  
                                       sprintf@s 0026                      ds1307_read_values@address_1 001C  
                               ___lldiv@quotient 0021                                   _port_regisrers 0100  
                              ?_morot_turn_right 0016                      ??_interrupt_intx_sethandler 0011  
         __end_of_MSSP_I2C_Master_Write_Blocking 4DEC                   _MSSP_I2C_Master_Write_Blocking 4D8C  
            ADC_get_conversion_blocking@ADC_conf 0015                                      _SSPCON1bits 0FC6  
                                    _SSPCON2bits 0FC5                               ??_morot_turn_right 0017  
                                 Timer2_init@ret 0010                                    ___fladd@signs 0040  
                                   _USART_RX_ISR 546C                                  ?_int0_interrupt 0001  
                                   _USART_TX_ISR 56BA                                ??_morot_turn_left 0017  
                                   ___fladd@aexp 0041                        ??_interrupt_intx_pin_inti 001C  
                                   ___fladd@bexp 0042                      lcd_4bit_send_char_data@data 001B  
                        ??_ADC_ISconversion_done 0010                              _Interrupt_Intx_Inti 4C48  
                     ??_lcd_4bit_send_string_pos 0028                      baudrate_calculate@baud_rate 0195  
